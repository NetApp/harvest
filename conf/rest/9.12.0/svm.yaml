# As private cli api would provide all svms(but system) which we would need for our use-case, So using private api instead of public.

name:                     SVM
query:                    api/private/cli/vserver
object:                   svm

counters:
  - ^^vserver                               => svm
  - ^anti_ransomware_default_volume_state   => anti_ransomware_state
  - ^operational_state                      => state
  - ^type                                   => type

endpoints:
  - query: api/svm/svms
    counters:
      - ^^name                              => svm
      - ^nsswitch                           => nameservice_switch
  - query: api/security/ssh/svms
    counters:
      - ^^svm.name                          => svm
      - ^ciphers                            => ciphers
  - query: api/protocols/cifs/services
    counters:
      - ^^svm.name                          => svm
      - ^enabled                            => cifs_protocol_enabled
      - ^security.smb_encryption            => smb_encryption_required
      - ^security.smb_signing               => smb_signing_required
  - query: api/protocols/nfs/services
    counters:
      - ^^svm.name                          => svm
      - ^enabled                            => nfs_protocol_enabled
  - query: api/protocols/audit
    counters:
      - ^^svm.name                          => svm
      - ^enabled                            => audit_protocol_enabled
  - query: api/protocols/fpolicy     # need to test
    counters:
      - ^^svm.name                          => svm
      - ^policies.enabled                   => fpolicy_enabled
      - ^policies.name                      => fpolicy_name
  - query: api/name-services/nis
    counters:
      - ^^svm.name                          => svm
      - ^domain                             => nis_domain
  - query: api/name-services/ldap
    counters:
      - ^^svm.name                          => svm
      - ^session_security                   => ldap_session_security
  - query: api/protocols/nfs/kerberos/interfaces
    counters:
      - ^^svm.name                          => svm
      - ^enabled                            => nfs_kerberos_protocol_enabled
  - query: api/protocols/san/iscsi/credentials
    counters:
      - ^^svm.name                          => svm
      - ^authentication_type                => iscsi_authentication_type
  - query: api/protocols/san/iscsi/services
    counters:
      - ^^svm.name                          => svm
      - ^enabled                            => iscsi_service_enabled
  - query: api/private/cli/vserver/cifs/server/security
    counters:
      - ^^vserver                           => svm
      - ^lm_compatibility_level             => cifs_ntlm_enabled

plugins:
  - SVM
  - LabelAgent:
      replace:
        - type root_svm `data` `No`
        - type root_svm `node` `Yes`
        - type root_svm `admin` `Yes`
        - type root_svm `system` `Yes`
      value_to_num:
        - new_status state online online `0`
        - ldap_signed ldap_session_security sign sign `0`
        - ldap_encrypted ldap_session_security seal seal `0`

export_options:
  instance_keys:
    - svm
  instance_labels:
    - anti_ransomware_state
    - audit_protocol_enabled
    - cifs_ntlm_enabled
    - cifs_protocol_enabled
    - ciphers
    - fpolicy_enabled
    - fpolicy_name
    - iscsi_authentication_type
    - iscsi_service_enabled
    - ldap_session_security
    - nfs_kerberos_protocol_enabled
    - nfs_protocol_enabled
    - nis_authentication_enabled
    - nis_domain
    - ns_db
    - ns_source
    - root_svm
    - smb_encryption_required
    - smb_signing_required
    - state
    - type

