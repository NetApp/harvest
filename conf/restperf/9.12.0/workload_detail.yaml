
# object provides latency breakdown per service or delay center

name:                     WorkloadDetail
query:                    api/cluster/counter/tables/qos_detail
object:                   qos_detail

# recommended to use large interval, since workload objects are expensive
client_timeout:           1m30s
schedule:
  - counter:  1200s
  - instance: 600s
  - data:     180s

counters:
  - ^^id
  - ^node.name      => node
  - ^resource_name  => resource
  - service_time
  - visits
  - wait_time

resource_map:
  CPU_dblade: backend
  CPU_nblade: frontend
  DELAY_CENTER_CLOUD_IO: cloud
  DELAY_CENTER_CLUSTER_INTERCONNECT: cluster
  DELAY_CENTER_DISK_IO: disk
  DELAY_CENTER_NETWORK: network
  DELAY_CENTER_NVLOG_TRANSFER: nvlog
  DELAY_CENTER_QOS_LIMIT: throttle
  DELAY_CENTER_WAFL_SUSP_OTHER: suspend
  DELAY_CENTER_QOS_MIN_THROUGHPUT: qos_min
  DELAY_CENTER_WAFL_SUSP_CP: cp
  DELAY_CENTER_FLEXCACHE_RAL: flexcache_ral
  DELAY_CENTER_FLEXCACHE_SPINHI: flexcache_spinhi
  DELAY_CENTER_SYNC_REPL: sync_repl
  DELAY_CENTER_COP: cop
  DELAY_CENTER_WAFL_ADM_CTRL: admission
  # CPU_dblade_background :
  # CPU_exempt :
  # CPU_ha :
  # CPU_idle :
  # CPU_kahuna :
  # CPU_network :
  # CPU_protocol :
  # CPU_raid :
  # CPU_wafl_exempt :
  # DISK_SSD_OTHER :

qos_labels:
  - name         => workload
  - svm.name     => svm
  - volume
  - qtree
  - lun
  - file
  - policy.name  => policy_group
  - wid


export_options:
  instance_keys:
    - wid
    - svm
    - volume
    - qtree
    - lun
    - file
    - policy_group
    - workload