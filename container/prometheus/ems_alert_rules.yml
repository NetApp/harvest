# Example Harvest ems alerts

groups:
  - name: Harvest Ems Alert
    rules:

      # Alert for Volume Anti-ransomware state change ems
      - alert: Volume Anti-ransomware Monitoring State Changed
        expr: last_over_time(ems_events{message="arw.volume.state"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Anti-ransomware state was changed to [{{ $labels.op }}] for Volume uuid [{{ $labels.volume_uuid }}]."

      # Alert for SVM Anti-ransomware state change ems
      - alert: Storage VM Anti-ransomware Monitoring State Changed
        expr: last_over_time(ems_events{message="arw.vserver.state"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Anti-ransomware state was changed to [{{ $labels.op }}] for SVM name [{{ $labels.vserverName }}]."

      # Alert for Ransomware activity ems
      - alert: Ransomware Activity Detected
        expr: last_over_time(ems_events{message="callhome.arw.activity.seen"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Ransomware activity detected for Volume uuid [{{ $labels.volume_uuid }}]."

      # Alert for NVRAM battery low ems
      - alert: NVRAM Battery Low
        expr: last_over_time(ems_events{message="callhome.battery.low"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVRAM battery low for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for HA interconnect down ems
      - alert: HA Interconnect Down
        expr: last_over_time(ems_events{message="callhome.hainterconnect.down"} [1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "HA interconnect down for Node uuid [{{ $labels.node_uuid }}]."

      # Alert for Shadow copy failed ems
      - alert: Shadow Copy Failed
        expr: last_over_time(ems_events{message="cifs.shadowcopy.failure"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Shadow copy failed for Object uuid [{{ $labels.object_uuid }}]."

      # Alert for Cloud aws not initialized ems
      - alert: AWS Credentials Not Initialized
        expr: last_over_time(ems_events{message="cloud.aws.iamNotInitialized"} [5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "AWS credentials not initialized on Node uuid [{{ $labels.node_uuid }}]."

      # Alert for Switch power supply failed ems
      - alert: Storage Switch Power Supplies Failed
        expr: last_over_time(ems_events{message="cluster.switch.pwr.fail"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Storage switch power supplies failed on Cluster uuid [{{ $labels.cluster_uuid }}]."

      # Alert for Disk out of service ems
      - alert: Disk Out of Service
        expr: last_over_time(ems_events{message="disk.outOfService"} [5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Disk out of service for Node uuid [{{ $labels.node_uuid }}]."

      # Alert for FabricPool space full ems
      - alert: FabricPool Space Usage Limit Reached
        expr: last_over_time(ems_events{message="fabricpool.full"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "FabricPool space usage limit reached for Cluster uuid [{{ $labels.cluster_uuid }}]."

      # Alert for FabricPool space nearly full ems
      - alert: FabricPool Space Usage Limit Nearly Reached
        expr: last_over_time(ems_events{message="fabricpool.nearly.full"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "FabricPool space usage limit nearly reached for Cluster uuid [{{ $labels.cluster_uuid }}]."

      # Alert for Giveback of failed aggr ems
      - alert: Giveback of Aggregate Failed
        expr: last_over_time(ems_events{message="gb.netra.ca.check.failed"} [4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Giveback of aggregate failed of Aggregate uuid [{{ $labels.aggr_uuid }}]."

      # Alert for LUN destroyed ems
      - alert: LUN Destroyed
        expr: last_over_time(ems_events{message="LUN.destroy"} [5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "LUN destroyed of Object uuid [{{ $labels.object_uuid }}]."

      # Alert for Lun offline ems
      - alert: LUN Offline
        expr: last_over_time(ems_events{message="LUN.offline"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Lun offline for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for root volume space low ems
      - alert: Node Root Volume Space Low
        expr: last_over_time(ems_events{message="mgmtgwd.rootvolrec.low.space"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Node root volume space low on Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Main unit fan in critical ems
      - alert: System Cannot Operate Due to Main Unit Fan Failure
        expr: last_over_time(ems_events{message="monitor.fan.critical"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "System cannot operate due to main unit fan failure for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Main unit fan in failed ems
      - alert: Main Unit Fan Failed
        expr: last_over_time(ems_events{message="monitor.fan.failed"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Main unit fan failed for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Main unit fan in warning ems
      - alert: Main Unit Fan in Warning State
        expr: last_over_time(ems_events{message="monitor.fan.warning"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Main unit fan in warning state for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Too many auths ems
      - alert: Too Many CIFS Authentication
        expr: last_over_time(ems_events{message="Nblade.cifsManyAuths"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Too many CIFS authentication on Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Max times open per file exceeded ems
      - alert: Max Times Open Per File Exceeded
        expr: last_over_time(ems_events{message="Nblade.cifsMaxOpenSameFile"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Max times open per file exceeded on Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Max sessions per user exceeded ems
      - alert: Max Sessions Per User Exceeded
        expr: last_over_time(ems_events{message="Nblade.cifsMaxSessPerUsrConn"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Max sessions per user exceeded for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for NetBIOS name conflict ems
      - alert: NetBIOS Name Conflict
        expr: last_over_time(ems_events{message="Nblade.cifsNbNameConflict"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NetBIOS name conflict for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Nonexistent admin share ems
      - alert: Nonexistent Admin Share
        expr: last_over_time(ems_events{message="Nblade.cifsNoPrivShare"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Nonexistent admin share for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Nfsv4 pool exhausted ems
      - alert: NFSv4 Store Pool Exhausted
        expr: last_over_time(ems_events{message="Nblade.nfsV4PoolExhaust"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NFSv4 store pool exhausted for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Unauthorized user access ems
      - alert: Unauthorized User Access to Admin Share
        expr: last_over_time(ems_events{message="Nblade.vscanBadUserPrivAccess"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Unauthorized user access to admin share for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Antivirus server busy ems
      - alert: Antivirus Server Busy
        expr: last_over_time(ems_events{message="Nblade.vscanConnBackPressure"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Antivirus server busy for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for No registered scan engine ems
      - alert: No Registered Scan Engine
        expr: last_over_time(ems_events{message="Nblade.vscanNoRegdScanner"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "No registered scan engine for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for No vscan connection ems
      - alert: No Vscan Connection
        expr: last_over_time(ems_events{message="Nblade.vscanNoScannerConn"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "No vscan connection for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Virus detected ems
      - alert: Virus Detected
        expr: last_over_time(ems_events{message="Nblade.vscanVirusDetected"}[1w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Virus detected for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Non-responsive antiVirus server ems
      - alert: Non-responsive AntiVirus Server
        expr: last_over_time(ems_events{message="Nblade.vscanConnInactive"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Non-responsive antiVirus server for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for NVMe namespace destroyed ems
      - alert: NVMe Namespace Destroyed
        expr: last_over_time(ems_events{message="NVMeNS.destroy"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe namespace destroyed for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for NVMe namespace offline ems
      - alert: NVMe Namespace Offline
        expr: last_over_time(ems_events{message="NVMeNS.offline"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe namespace offline for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for NVMe namespace online ems
      - alert: NVMe Namespace Online
        expr: last_over_time(ems_events{message="NVMeNS.online"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe namespace online for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for NVMe-oF grace period active ems
      - alert: NVMe-oF Grace Period Active
        expr: last_over_time(ems_events{message="nvmf.graceperiod.active"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe-oF grace period active for Cluster uuid [{{ $labels.cluster_uuid }}]"

      # Alert for NVMe-oF grace period expired ems
      - alert: NVMe-oF Grace Period Expired
        expr: last_over_time(ems_events{message="nvmf.graceperiod.expired"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe-oF grace period expired for Cluster uuid [{{ $labels.cluster_uuid }}]"

      # Alert for NVMe-oF grace period start ems
      - alert: NVMe-oF Grace Period Start
        expr: last_over_time(ems_events{message="nvmf.graceperiod.start"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "NVMe-oF grace period start for Cluster uuid [{{ $labels.cluster_uuid }}]"

      # Alert for Cloud tier unreachable ems
      - alert: Cloud Tier Unreachable
        expr: last_over_time(ems_events{message="object.store.unavailable"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Cloud tier unreachable for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Object store host unresolvable ems
      - alert: Object Store Host Unresolvable
        expr: last_over_time(ems_events{message="objstore.host.unresolvable"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Object store host unresolvable for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Object store intercluster LIF down ems
      - alert: Object Store Intercluster LIF Down
        expr: last_over_time(ems_events{message="objstore.interclusterlifDown"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Object store intercluster LIF down for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Object store signature mismatch ems
      - alert: Object Store Signature Mismatch
        expr: last_over_time(ems_events{message="osc.signatureMismatch"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Object store signature mismatch for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for QoS monitor memory maxed out ems
      - alert: QoS Monitor Memory Maxed Out
        expr: last_over_time(ems_events{message="qos.monitor.memory.maxed"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "QoS monitor memory maxed out for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for SAN [active-active] state change ems
      - alert: SAN [active-active] State Changed
        expr: last_over_time(ems_events{message="scsiblade.san.config.active"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "SAN [active-active] state changed for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for FC target port commands exceeded ems
      - alert: FC Target Port Commands Exceeded
        expr: last_over_time(ems_events{message="scsitarget.fct.port.full"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "FC target port commands exceeded for Port Name [{{ $labels.portname }}]"

      # Alert for Shelf fan failed ems
      - alert: Shelf Fan Failed
        expr: last_over_time(ems_events{message="ses.status.fanError"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Shelf fan failed for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Node panic ems
      - alert: Node Panic
        expr: last_over_time(ems_events{message="sk.panic"}[1d]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Node panic for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for SnapMirror relationship out of sync ems
      - alert: SnapMirror Relationship Out of Sync
        expr: last_over_time(ems_events{message="sms.status.out.of.sync"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "SnapMirror relationship out of sync for Relationship id [{{ $labels.relationship_id }}]"

      # Alert for Service processor offline ems
      - alert: Service Processor Offline
        expr: last_over_time(ems_events{message="sp.ipmi.lost.shutdown"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Service processor offline for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Service processor not configured ems
      - alert: Service Processor Not Configured
        expr: last_over_time(ems_events{message="sp.notConfigured"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Service processor not configured for Node uuid [{{ $labels.node_uuid }}]"

      # Alert for Unassigned disks ems
      - alert: Unassigned Disks
        expr: last_over_time(ems_events{message="unowned.disk.reminder"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Unassigned disks for Cluster uuid [{{ $labels.cluster_uuid }}]"

      # Alert for SVM stop succeeded ems
      - alert: Storage VM Stop Succeeded
        expr: last_over_time(ems_events{message="vserver.stop.succeeded"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Storage VM stop succeeded for instance uuid [{{ $labels.inst_uuid }}]"

      # Alert for READDIR timeout ems
      - alert: READDIR Timeout
        expr: last_over_time(ems_events{message="wafl.readdir.expired"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "READDIR timeout for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Volume automatic resizing succeeded ems
      - alert: Volume Automatic Resizing Succeeded
        expr: last_over_time(ems_events{message="wafl.vol.autoSize.done"}[5m]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Volume automatic resizing succeeded for Object uuid [{{ $labels.object_uuid }}]"

      # Alert for Volume offline ems
      - alert: Volume Offline
        expr: last_over_time(ems_events{message="wafl.vvol.offline"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Volume offline for instance uuid [{{ $labels.inst_uuid }}]"

      # Alert for Volume restricted ems
      - alert: Volume Restricted
        expr: last_over_time(ems_events{message="wafl.vvol.restrict"}[4w]) == 1
        labels:
          severity: "error"
        annotations:
          summary: "Volume restricted for instance uuid [{{ $labels.inst_uuid }}]"
