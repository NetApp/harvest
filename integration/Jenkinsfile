pipeline {

    agent {
        node {
            label 'rhel'
        }
    }

    options {
        buildDiscarder logRotator(
                    daysToKeepStr: '16',
                    numToKeepStr: '10'
            )
    }

    stages {

        stage('Cleanup Workspace') {
            steps {
                cleanWs()
                sh """
                echo "Cleaned Up Workspace For Project"
                """
            }
        }

        stage('Setup GO') {
            steps {
                sh '''
                wget --quiet -O go.tar.gz "https://dl.google.com/go/$(curl https://golang.org/VERSION?m=text).linux-amd64.tar.gz"
                ls -ltrh
                rm -rf /usr/local/go && tar -C /usr/local -xzf ./go.tar.gz
                '''
            }
        }

        stage('Code Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/integration_test']],
                    userRemoteConfigs: [[url: 'https://github.com/NetApp/harvest']]
                ])
            }
        }

        stage('Integration Testing') {
            steps {
                sh """
                echo "Running Unit Tests"
                export PATH=$PATH:/usr/local/go/bin
                pwd
                cd $WORKSPACE/integration/test/
                go mod vendor
                go test -tags=install_rpm
                go test -tags=regression
                """
            }
        }

        stage('Code Analysis') {
            steps {
                sh """
                echo "Running Code Analysis"
                """
            }
        }

        stage('Build Deploy Code') {
            when {
                branch 'develop'
            }
            steps {
                sh """
                echo "Building Artifact"
                """

                sh """
                echo "Deploying Code"
                """
            }
        }

    }
}