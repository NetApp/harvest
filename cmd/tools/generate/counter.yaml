counters:

  - Name: aggr_object_store_logical_used
    Description: Logical space usage of aggregates in the attached object store.
    APIs:
      - API: REST
        Endpoint: api/private/cli/aggr/show-space
        ONTAPCounter: object_store_logical_used
        Template: conf/rest/9.12.0/aggr.yaml

  - Name: aggr_object_store_physical_used
    Description: Physical space usage of aggregates in the attached object store.
    APIs:
      - API: REST
        Endpoint: api/private/cli/aggr/show-space
        ONTAPCounter: object_store_physical_used
        Template: conf/rest/9.12.0/aggr.yaml

  - Name: aggr_physical_used_wo_snapshots
    Description: Total Data Reduction Physical Used Without Snapshots

  - Name: aggr_physical_used_wo_snapshots_flexclones
    Description: Total Data Reduction Physical Used without snapshots and flexclones

  - Name: aggr_power
    Description: Power consumed by aggregate in Watts.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: aggr_raid_disk_count
    Description: Number of disks in the aggregate.

  - Name: aggr_raid_plex_count
    Description: Number of plexes in the aggregate

  - Name: aggr_snapshot_inode_used_percent
    Description: The percentage of disk space currently in use based on user-visible
      file (inode) count on the referenced file system.

  - Name: aggr_snapshot_maxfiles_possible
    Description: The largest value to which the maxfiles-available parameter can be
      increased by reconfiguration, on the referenced file system.

  - Name: aggr_space_reserved
    Description: The total disk space in bytes that is reserved on the referenced file
      system. The reserved space is already counted in the used space, so this element
      can be used to see what portion of the used space represents space reserved for
      future use.

  - Name: aggr_space_used_percent
    Description: The percentage of disk space currently in use on the referenced file
      system

  - Name: aggr_total_physical_used
    Description: Total Physical Used

  - Name: aggr_volume_count
    Description: The aggregate's volume count, which includes both FlexVols and FlexGroup constituents.

  - Name: cluster_new_status
    Description: It is an indicator of the overall health status of the cluster, with
      a value of 1 indicating a healthy status and a value of 0 indicating an unhealthy
      status.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/status.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapi/cdot/9.8.0/status.yaml

  - Name: cluster_subsystem_outstanding_alerts
    Description: Number of outstanding alerts

  - Name: cluster_subsystem_suppressed_alerts
    Description: Number of suppressed alerts

  - Name: disk_stats_io_kbps
    Description: Total Disk Throughput in KBPS Across All Active Paths

  - Name: disk_stats_sectors_read
    Description: Number of Sectors Read

  - Name: disk_stats_sectors_written
    Description: Number of Sectors Written

  - Name: disk_uptime
    Description: Number of seconds the drive has been powered on

  - Name: disk_usable_size
    Description: Usable size of each disk, in bytes.

  - Name: fabricpool_average_latency
    Description: This counter is deprecated.Average latencies executed during various phases of command execution. The execution-start latency represents the average time taken to start executing an operation. The request-prepare latency represent the average time taken to prepare the commplete request that needs to be sent to the server. The send latency represents the average time taken to send requests to the server. The execution-start-to-send-complete represents the average time taken to send an operation out since its execution started. The execution-start-to-first-byte-received represent the average time taken to receive the first byte of a response since the command's request execution started. These counters can be used to identify performance bottlenecks within the object store client module.

  - Name: fabricpool_get_throughput_bytes
    Description: This counter is deprecated. Counter that indicates the throughput for GET command in bytes per second.

  - Name: fabricpool_put_throughput_bytes
    Description: This counter is deprecated. Counter that indicates the throughput for PUT command in bytes per second.

  - Name: fabricpool_stats
    Description: This counter is deprecated. Counter that indicates the number of object store operations sent, and their success and failure counts. The objstore_client_op_name array indicate the operation name such as PUT, GET, etc. The objstore_client_op_stats_name array contain the total number of operations, their success and failure counter for each operation.

  - Name: metadata_collector_api_time
    Description: amount of time to collect data from monitored cluster object
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_collector_calc_time
    Description: amount of time it took to compute metrics between two successive polls, specifically using properties like raw, delta, rate, average, and percent. This metric is available for ZapiPerf/RestPerf collectors.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_collector_instances
    Description: number of objects collected from monitored cluster
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_collector_metrics
    Description: number of counters collected from monitored cluster
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_collector_parse_time
    Description: amount of time to parse XML, JSON, etc. for cluster object
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_collector_plugin_time
    Description: amount of time for all plugins to post-process metrics
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_collector_poll_time
    Description: amount of time it took for the poll to finish
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_collector_skips
    Description: number of metrics that were not calculated between two successive polls. This metric is available for ZapiPerf/RestPerf collectors.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_collector_task_time
    Description: amount of time it took for each collector's subtasks to complete
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_component_count
    Description: number of metrics collected for each object
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_component_status
    Description: status of the collector - 0 means running, 1 means standby, 2 means
      failed
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: enum
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: enum

  - Name: metadata_exporter_count
    Description: number of metrics and labels exported
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_exporter_time
    Description: amount of time it took to render, export, and serve exported data
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: microseconds

  - Name: metadata_target_goroutines
    Description: number of goroutines that exist within the poller
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: scalar

  - Name: metadata_target_status
    Description: status of the system being monitored. 0 means reachable, 1 means unreachable
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: enum
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: NA
        Unit: enum

  - Name: node_cpu_busytime
    Description: The time (in hundredths of a second) that the CPU has been doing useful
      work since the last boot
    APIs:
      - API: REST
        Endpoint: api/private/cli/node
        ONTAPCounter: cpu_busy_time
        Template: conf/rest/9.12.0/node.yaml

  - Name: node_nfs_read_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: node_nfs_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: node_nfs_write_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: qos_detail_resource_latency
    Description: |
      This refers to the average latency for workloads within the subsystems of Data ONTAP. These subsystems are the various modules or components within the system that could contribute to delays or latency during data or task processing. The calculated latency includes both the processing time within the subsystem and the waiting time at that subsystem. Below is the description of subsystems' latency.
      
      * **frontend**: Represents the delays in the network layer of ONTAP.
      * **backend**: Represents the delays in the data/WAFL layer of ONTAP.
      * **cluster**: Represents delays caused by the cluster switches, cables, and adapters which physically connect clustered nodes.If the cluster interconnect component is in contention, it means high wait time for I/O requests at the cluster interconnect is impacting the latency of one or more workloads.
      * **cp**: Represents delays due to buffered write flushes, called consistency points (cp).
      * **disk**: Represents slowness due to attached hard drives or solid state drives.
      * **network**: `Note:` Typically these latencies only apply to SAN not NAS. Represents the wait time of I/O requests by the external networking protocols on the cluster. The wait time is time spent waiting for transfer ready transactions to finish before the cluster can respond to an I/O request. If the network component is in contention, it means high wait time at the protocol layer is impacting the latency of one or more workloads.
      * **nvlog**: Represents delays due to mirroring writes to the NVRAM/NVLOG memory and to the HA partner NVRAM/NVLOG memory.
      * **suspend**: Represents delays due to operations suspending on a delay mechanism. Typically this is diagnosed by NetApp Support.
      * **throttle**: Represents the throughput maximum (ceiling) setting of the storage Quality of Service (QoS) policy group assigned to the workload. If the policy group component is in contention, it means all workloads in the policy group are being throttled by the set throughput limit, which is impacting the latency of one or more of those workloads.
      * **qos_min**: Represents the latency to a workload that is being caused by QoS throughput floor (expected) setting assigned to other workloads. If the QoS floor set on certain workloads use the majority of the bandwidth to guarantee the promised throughput, other workloads will be throttled and see more latency.
      * **cloud**: Represents the software component in the cluster involved with I/O processing between the cluster and the cloud tier on which user data is stored. If the cloud latency component is in contention, it means that a large amount of reads from volumes that are hosted on the cloud tier are impacting the latency of one or more workloads.
    APIs:
      - API: REST
        Endpoint: api/cluster/counter/tables/qos_detail
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/workload_detail.yaml
        Unit: microseconds
        Type: average
        BaseCounter: ops
      - API: ZAPI
        Endpoint: perf-object-get-instances workload_detail
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/9.12.0/workload_detail.yaml
        Unit: microseconds
        Type: average
        BaseCounter: ops

  - Name: qos_detail_service_time_latency
    Description: This refers to the average service time for workload within the subsystems of the Data ONTAP. These subsystems are the various modules or components within the system that could contribute to delays or latency during data or task processing. This latency is the processing time within the subsystem.
    APIs:
      - API: REST
        Endpoint: api/cluster/counter/tables/qos_detail
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/workload_detail.yaml
        Unit: microseconds
        Type: average
        BaseCounter: ops
      - API: ZAPI
        Endpoint: perf-object-get-instances workload_detail
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/9.12.0/workload_detail.yaml
        Unit: microseconds
        Type: average
        BaseCounter: ops

  - Name: quota_disk_limit
    Description: Maximum amount of disk space, in kilobytes, allowed for the quota target
      (hard disk space limit). The value is -1 if the limit is unlimited.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: space.hard_limit
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: disk-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_disk_used
    Description: Current amount of disk space, in kilobytes, used by the quota target.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: space.used.total
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: disk-used
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_disk_used_pct_disk_limit
    Description: Current disk space used expressed as a percentage of hard disk limit.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: space.used.hard_limit_percent
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: disk-used-pct-disk-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_disk_used_pct_soft_disk_limit
    Description: Current disk space used expressed as a percentage of soft disk limit.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: space.used.soft_limit_percent
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: disk-used-pct-soft-disk-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_disk_used_pct_threshold
    Description: Current disk space used expressed as a percentage of threshold.
    APIs:
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: disk-used-pct-threshold
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_file_limit
    Description: Maximum number of files allowed for the quota target (hard files limit).
      The value is -1 if the limit is unlimited.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: files.hard_limit
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: file-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_files_used
    Description: Current number of files used by the quota target.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: files.used.total
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: files-used
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_files_used_pct_file_limit
    Description: Current number of files used expressed as a percentage of hard file
      limit.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: files.used.hard_limit_percent
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: files-used-pct-file-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_files_used_pct_soft_file_limit
    Description: Current number of files used expressed as a percentage of soft file
      limit.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: files.used.soft_limit_percent
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: files-used-pct-soft-file-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_soft_disk_limit
    Description: soft disk space limit, in kilobytes, for the quota target. The value
      is -1 if the limit is unlimited.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: space.soft_limit
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: soft-disk-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_soft_file_limit
    Description: Soft file limit, in number of files, for the quota target. The value
      is -1 if the limit is unlimited.
    APIs:
      - API: REST
        Endpoint: api/storage/quota/reports
        ONTAPCounter: files.soft_limit
        Template: conf/rest/9.12.0/qtree.yaml
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: soft-file-limit
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: quota_threshold
    Description: Disk space threshold, in kilobytes, for the quota target. The value
      is -1 if the limit is unlimited.
    APIs:
      - API: ZAPI
        Endpoint: quota-report-iter
        ONTAPCounter: threshold
        Template: conf/zapi/cdot/9.8.0/qtree.yaml

  - Name: security_audit_destination_port
    Description: The destination port used to forward the message.

  - Name: shelf_average_ambient_temperature
    Description: Average temperature of all ambient sensors for shelf in Celsius.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_average_fan_speed
    Description: Average fan speed for shelf in rpm.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_average_temperature
    Description: Average temperature of all non-ambient sensors for shelf in Celsius.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_disk_count
    Description: Disk count in a shelf.

  - Name: shelf_max_fan_speed
    Description: Maximum fan speed for shelf in rpm.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_max_temperature
    Description: Maximum temperature of all non-ambient sensors for shelf in Celsius.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_min_ambient_temperature
    Description: Minimum temperature of all ambient sensors for shelf in Celsius.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_min_fan_speed
    Description: Minimum fan speed for shelf in rpm.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_min_temperature
    Description: Minimum temperature of all non-ambient sensors for shelf in Celsius.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: shelf_power
    Description: Power consumed by shelf in Watts.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/restperf/9.12.0/disk.yaml
      - API: ZAPI
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/zapiperf/cdot/9.8.0/disk.yaml

  - Name: snapmirror_break_failed_count
    Description: The number of failed SnapMirror break operations for the relationship

  - Name: snapmirror_break_successful_count
    Description: The number of successful SnapMirror break operations for the relationship

  - Name: snapmirror_lag_time
    Description: Amount of time since the last snapmirror transfer in seconds

  - Name: snapmirror_last_transfer_duration
    Description: Duration of the last SnapMirror transfer in seconds

  - Name: snapmirror_last_transfer_end_timestamp
    Description: The Timestamp of the end of the last transfer

  - Name: snapmirror_last_transfer_size
    Description: Size in kilobytes (1024 bytes) of the last transfer

  - Name: snapmirror_newest_snapshot_timestamp
    Description: The timestamp of the newest Snapshot copy on the destination volume

  - Name: snapmirror_resync_failed_count
    Description: The number of failed SnapMirror resync operations for the relationship

  - Name: snapmirror_resync_successful_count
    Description: The number of successful SnapMirror resync operations for the relationship

  - Name: snapmirror_total_transfer_bytes
    Description: Cumulative bytes transferred for the relationship

  - Name: snapmirror_total_transfer_time_secs
    Description: Cumulative total transfer time in seconds for the relationship

  - Name: snapmirror_update_failed_count
    Description: The number of successful SnapMirror update operations for the relationship

  - Name: snapmirror_update_successful_count
    Description: Number of Successful Updates

  - Name: snapshot_policy_total_schedules
    Description: Total Number of Schedules in this Policy

  - Name: svm_nfs_read_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: svm_nfs_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: svm_nfs_write_throughput
    APIs:
      - API: REST
        Unit: b_per_sec
      - API: ZAPI
        Unit: b_per_sec

  - Name: volume_inode_files_total
    Description: Total user-visible file (inode) count, i.e., current maximum number
      of user-visible files (inodes) that this volume can currently hold.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: files
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_inode_files_used
    Description: Number of user-visible files (inodes) used. This field is valid only
      when the volume is online.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: files_used
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_inode_used_percent
    Description: volume_inode_files_used / volume_inode_total

  - Name: volume_overwrite_reserve_available
    Description: amount of storage space that is currently available for overwrites,
      calculated by subtracting the total amount of overwrite reserve space from the
      amount that has already been used.

  - Name: volume_sis_compress_saved
    Description: The total disk space (in bytes) that is saved by compressing blocks
      on the referenced file system.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: compression_space_saved
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_sis_compress_saved_percent
    Description: Percentage of the total disk space that is saved by compressing blocks
      on the referenced file system
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: compression_space_saved_percent
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_sis_dedup_saved
    Description: The total disk space (in bytes) that is saved by deduplication and
      file cloning.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: dedupe_space_saved
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_sis_dedup_saved_percent
    Description: Percentage of the total disk space that is saved by deduplication and
      file cloning.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: dedupe_space_saved_percent
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_sis_total_saved
    Description: Total space saved (in bytes) in the volume due to deduplication, compression,
      and file cloning.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: sis_space_saved
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_sis_total_saved_percent
    Description: Percentage of total disk space that is saved by compressing blocks,
      deduplication and file cloning.
    APIs:
      - API: REST
        Endpoint: api/private/cli/volume
        ONTAPCounter: sis_space_saved_percent
        Template: conf/rest/9.12.0/volume.yaml

  - Name: volume_size_used_percent
    Description: percentage of utilized storage space in a volume relative to its total
      capacity

  - Name: volume_snapshot_reserve_used
    Description: amount of storage space currently used by a volume's snapshot reserve,
      which is calculated by subtracting the snapshot reserve available space from the
      snapshot reserve size.

  - Name: metrocluster_check_cluster_status
    Description: Detail of the type of diagnostic operation run for the Cluster with diagnostic operation result.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/metrocluster_check.yaml

  - Name: metrocluster_check_node_status
    Description: Detail of the type of diagnostic operation run for the Node with diagnostic operation result.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/metrocluster_check.yaml

  - Name: metrocluster_check_aggr_status
    Description: Detail of the type of diagnostic operation run for the Aggregate with diagnostic operation result.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/metrocluster_check.yaml

  - Name: metrocluster_check_volume_status
    Description: Detail of the type of diagnostic operation run for the Volume with diagnostic operation result.
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/metrocluster_check.yaml

  - Name: flashpool_hya_read_hit_latency_average
    APIs:
      - API: REST
        Unit: millisec
      - API: ZAPI
        Unit: millisec

  - Name: flashpool_hya_read_miss_latency_average
    APIs:
      - API: REST
        Unit: millisec
      - API: ZAPI
        Unit: millisec

  - Name: flashpool_hya_write_hdd_latency_average
    APIs:
      - API: REST
        Unit: millisec
      - API: ZAPI
        Unit: millisec

  - Name: flashpool_hya_write_ssd_latency_average
    APIs:
      - API: REST
        Unit: millisec
      - API: ZAPI
        Unit: millisec

  - Name: fabricpool_cloud_bin_op_latency_average
    APIs:
      - API: REST
        Unit: millisec
      - API: ZAPI
        Unit: millisec

  - Name: volume_autosize_grow_threshold_percent
    Description: Used space threshold which triggers autogrow. When the size-used is greater than this percent of size-total, the volume will be grown. The computed value is rounded down. The default value of this element varies from 85% to 98%, depending on the volume size. It is an error for the grow threshold to be less than or equal to the shrink threshold.

  - Name: volume_autosize_maximum_size
    Description: The maximum size (in bytes) to which the volume would be grown automatically. The default value is 20% greater than the volume size. It is an error for the maximum volume size to be less than the current volume size. It is also an error for the maximum size to be less than or equal to the minimum size.

  - Name: volume_filesystem_size
    Description: Filesystem size (in bytes) of the volume.  This is the total usable size of the volume, not including WAFL reserve.  This value is the same as Size except for certain SnapMirror destination volumes.  It is possible for destination volumes to have a different filesystem-size because the filesystem-size is sent across from the source volume.  This field is valid only when the volume is online.

  - Name: volume_overwrite_reserve_total
    Description: The size (in bytes) that is reserved for overwriting snapshotted data in an otherwise full volume. This space is usable only by space-reserved LUNs and files, and then only when the volume is full.This field is valid only when the volume is online.

  - Name: volume_overwrite_reserve_used
    Description: The reserved size (in bytes) that is not available for new overwrites. The number includes both the reserved size which has actually been used for overwrites as well as the size which was never allocated in the first place. This field is valid only when the volume is online.

  - Name: volume_size_available
    Description:  The size (in bytes) that is still available in the volume. This field is valid only when the volume is online.

  - Name: volume_size_total
    Description: Total usable size (in bytes) of the volume, not including WAFL reserve or volume snapshot reserve.  If the volume is restricted or offline, a value of 0 is returned.

  - Name: volume_size_used
    Description: Number of bytes used in the volume.  If the volume is restricted or offline, a value of 0 is returned.

  - Name: volume_snapshot_reserve_available
    Description: The size (in bytes) that is available for Snapshot copies inside the Snapshot reserve. This value is zero if Snapshot spill is present. For 'none' guaranteed volumes, this may get reduced due to less available space in the aggregate. This parameter is not supported on Infinite Volumes.

  - Name: volume_snapshot_reserve_percent
    Description: The percentage of volume disk space that has been set aside as reserve for snapshot usage.

  - Name: volume_snapshot_reserve_size
    Description: The size (in bytes) in the volume that has been set aside as reserve for snapshot usage.

  - Name: volume_snapshot_reserve_used_percent
    Description: Percentage of the volume reserved for snapshots that has been used. Note that in some scenarios, it is possible to pass 100% of the space allocated.

  - Name: volume_snapshots_size_available
    Description: Total free space (in bytes) available in the volume and the snapshot reserve. If this value is 0 or negative, a new snapshot cannot be created.

  - Name: volume_snapshots_size_used
    Description: The size (in bytes) that is used by snapshots in the volume.

  - Name: volume_space_expected_available
    Description: The size (in bytes) that should be available for the volume irrespective of available size in the aggregate.This is same as size-available for 'volume' guaranteed volumes.For 'none' guaranteed volumes this value is calculated as if the aggregate has enough backing disk space to fully support the volume's size.Similar to the size-available property, this does not include Snapshot reserve.This count gets reduced if snapshots consume space above Snapshot reserve threshold.This parameter is not supported on Infinite Volumes.

  - Name: volume_space_logical_available
    Description: The size (in bytes) that is logically available in the volume.This is the amount of free space available considering space saved by the storage efficiency features as being used.This does not include Snapshot reserve.This parameter is not supported on FlexGroups or Infinite Volumes.

  - Name: volume_space_logical_used
    Description: The size (in bytes) that is logically used in the volume.This value includes all the space saved by the storage efficiency features along with the physically used space.This does not include Snapshot reserve but does consider Snapshot spill.This parameter is not supported on FlexGroups or Infinite Volumes.

  - Name: volume_space_logical_used_by_afs
    Description: The size (in bytes) that is logically used by the active filesystem of the volume.This value differs from 'logical-used' by the amount of Snapshot spill that exceeds Snapshot reserve.This parameter is not supported on FlexGroups or Infinite Volumes.

  - Name: volume_space_logical_used_by_snapshots
    Description: The size (in bytes) that is logically used across all Snapshot copies in the volume. This value differs from 'size-used-by-snapshots' by the space saved by the storage efficiency features across the Snapshot copies.This parameter is not supported on FlexGroups or Infinite Volumes.

  - Name: volume_space_logical_used_percent
    Description: Percentage of the logical used size of the volume.This parameter is not supported on FlexGroups or Infinite Volumes.

  - Name: volume_space_physical_used
    Description: The size (in bytes) that is physically used in the volume.This differs from 'total-used' space by the space that is reserved for future writes.The value includes blocks in use by Snapshot copies.This field is valid only if the volume is online.

  - Name: volume_space_physical_used_percent
    Description: The size (in percent) that is physically used in the volume.The percentage is based on volume size including the space reserved for Snapshot copies.This field is valid only if the volume is online.

  - Name: aggr_space_performance_tier_used_percent
    Description: A summation of volume footprints inside the aggregate,as a percentage. A volume's footprint is the amount of space being used for the volume in the aggregate.

  - Name: flexcache_miss_percent
    Description: This metric represents the percentage of block requests from a client that resulted in a "miss" in the FlexCache. A "miss" occurs when the requested data is not found in the cache and has to be retrieved from the origin volume.

  - Name: lun_size_used_percent
    Description: This metric represents the percentage of a LUN that is currently being used.

  - Name: namespace_size_available
    Description: This metric represents the amount of available space in a namespace.

  - Name: namespace_size_available_percent
    Description: This metric represents the percentage of available space in a namespace.

  - Name: ndmp_session_data_bytes_processed
    Description: Indicates the NDMP data bytes processed.

  - Name: ndmp_session_mover_bytes_moved
    Description: Indicates the NDMP mover bytes moved.

  - Name: ontaps3_used_percent
    Description: The used_percent metric the percentage of a bucket's total capacity that is currently being used.

  - Name: volume_total_data
    Description: This metric represents the total amount of data that has been read from and written to a specific volume.

  - Name: node_nvmf_data_sent
    Description: NVMe/FC kilobytes (KB) sent per second.

  - Name: node_nvmf_ops
    Description: NVMe/FC operations per second.

  - Name: node_nvmf_data_recv
    Description: NVMe/FC kilobytes (KB) received per second.

  - Name: quota_threshold
    APIs:
      - API: REST
        Endpoint: NA
        ONTAPCounter: Harvest generated
        Template: conf/rest/9.12.0/qtree.yaml

  - Name: volume_space_performance_tier_inactive_user_data
    Description: The size that is physically used in the performance tier of the volume and has a cold temperature. This parameter is only supported if the volume is in an aggregate that is either attached to object store or could be attached to an object store.

  - Name: volume_space_performance_tier_inactive_user_data_percent
    Description: The size (in percent) that is physically used in the performance tier of the volume and has a cold temperature. This parameter is only supported if the volume is in an aggregate that is either attached to object store or could be attached to an object store.

  - Name: aggr_object_store_logical_used
    Description: Logical space usage of aggregates in the attached object store.

  - Name: aggr_object_store_physical_used
    Description: Physical space usage of aggregates in the attached object store.

