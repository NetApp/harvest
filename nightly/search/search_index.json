{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Harvest is the open-metrics endpoint for ONTAP and StorageGRID NetApp Harvest brings observability to ONTAP and StorageGRID clusters. Harvest collects performance, capacity and hardware metrics from ONTAP and StorageGRID, transforms them, and routes them to your choice of time-series database. The included Grafana dashboards deliver the datacenter insights you need, while new metrics can be collected with a few edits of the included template files. Harvest is open-source, released under an Apache2 license , and offers great flexibility in how you collect, augment, and export your datacenter metrics . Note Hop onto our Discord or GitHub discussions and say hi. \ud83d\udc4b\ud83c\udffd","title":"What is Harvest?"},{"location":"MigratePrometheusDocker/","text":"Migrate Prometheus Docker Volume \u00b6 If you want to keep your historical Prometheus data, and you generated your harvest-compose.yml file via bin/harvest generate before Harvest 22.11 , please follow the steps below to migrate your historical Prometheus data. This is not required if you generated your harvest-compose.yml file via bin/harvest generate at Harvest release 22.11 or after. Outline of steps: 1. Stop Prometheus container so data acquiesces 2. Find historical Prometheus volume and create new Prometheus data volume 3. Create a new Prometheus volume that Harvest 22.11 and after will use 4. Copy the historical Prometheus data from the old volume to the new one 5. Optionally remove the historical Prometheus volume Stop Prometheus container \u00b6 It's safe to run the stop and rm commands below regardless if Prometheus is running or not since removing the container does not touch the historical data stored in the volume. Stop all containers named Prometheus and remove them. docker stop ( docker ps -fname = prometheus -q ) && docker rm ( docker ps -a -fname = prometheus -q ) Docker may complain if the container is not running, like so. You can ignore this. Ignorable output when container is not running (click me) \"docker stop\" requires at least 1 argument. See 'docker stop --help' . Usage: docker stop [ OPTIONS ] CONTAINER [ CONTAINER... ] Stop one or more running containers Find the name of the Prometheus volume that has the historical data \u00b6 docker volume ls -f name = prometheus -q Output should look like this: harvest-22080-1_linux_amd64_prometheus_data # historical Prometheus data here harvest_prometheus_data # it is fine if this line is missing We want to copy the historical data from harvest-22080-1_linux_amd64_prometheus_data to harvest_prometheus_data If harvest_prometheus_data already exists, you need to decide if you want to move that volume's data to a different volume or remove it. If you want to remove the volume, run docker volume rm harvest_prometheus_data . If you want to move the data, adjust the command below to first copy harvest_prometheus_data to a different volume and then remove it. Create new Prometheus volume \u00b6 We're going to create a new mount named, harvest_prometheus_data by executing: docker volume create --name harvest_prometheus_data Copy the historical Prometheus data \u00b6 We will copy the historical Prometheus data from the old volume to the new one by mounting both volumes and copying data between them. NOTE : Prometheus only supports copying a single volume. It will not work if you attempt to copy multiple volumes into the same destination volume. # replace `HISTORICAL_VOLUME` with the name of the Prometheus volume that contains you historical data found in step 2. docker run --rm -it -v $HISTORICAL_VOLUME :/from -v harvest_prometheus_data:/to alpine ash -c \"cd /from ; cp -av . /to\" Output will look something like this: './wal' -> '/to/./wal' './wal/00000000' -> '/to/./wal/00000000' './chunks_head' -> '/to/./chunks_head' ... Optionally remove historical Prometheus data \u00b6 Before removing the historical data, start your compose stack and make sure everything works. Once you're satisfied that you can destroy the old data, remove it like so. # replace `HISTORICAL_VOLUME` with the name of the Prometheus volume that contains your historical data found in step 2. docker volume rm $HISTORICAL_VOLUME Reference \u00b6 Rename Docker Volume","title":"Migrate Prometheus Docker Volume"},{"location":"MigratePrometheusDocker/#migrate-prometheus-docker-volume","text":"If you want to keep your historical Prometheus data, and you generated your harvest-compose.yml file via bin/harvest generate before Harvest 22.11 , please follow the steps below to migrate your historical Prometheus data. This is not required if you generated your harvest-compose.yml file via bin/harvest generate at Harvest release 22.11 or after. Outline of steps: 1. Stop Prometheus container so data acquiesces 2. Find historical Prometheus volume and create new Prometheus data volume 3. Create a new Prometheus volume that Harvest 22.11 and after will use 4. Copy the historical Prometheus data from the old volume to the new one 5. Optionally remove the historical Prometheus volume","title":"Migrate Prometheus Docker Volume"},{"location":"MigratePrometheusDocker/#stop-prometheus-container","text":"It's safe to run the stop and rm commands below regardless if Prometheus is running or not since removing the container does not touch the historical data stored in the volume. Stop all containers named Prometheus and remove them. docker stop ( docker ps -fname = prometheus -q ) && docker rm ( docker ps -a -fname = prometheus -q ) Docker may complain if the container is not running, like so. You can ignore this. Ignorable output when container is not running (click me) \"docker stop\" requires at least 1 argument. See 'docker stop --help' . Usage: docker stop [ OPTIONS ] CONTAINER [ CONTAINER... ] Stop one or more running containers","title":"Stop Prometheus container"},{"location":"MigratePrometheusDocker/#find-the-name-of-the-prometheus-volume-that-has-the-historical-data","text":"docker volume ls -f name = prometheus -q Output should look like this: harvest-22080-1_linux_amd64_prometheus_data # historical Prometheus data here harvest_prometheus_data # it is fine if this line is missing We want to copy the historical data from harvest-22080-1_linux_amd64_prometheus_data to harvest_prometheus_data If harvest_prometheus_data already exists, you need to decide if you want to move that volume's data to a different volume or remove it. If you want to remove the volume, run docker volume rm harvest_prometheus_data . If you want to move the data, adjust the command below to first copy harvest_prometheus_data to a different volume and then remove it.","title":"Find the name of the Prometheus volume that has the historical data"},{"location":"MigratePrometheusDocker/#create-new-prometheus-volume","text":"We're going to create a new mount named, harvest_prometheus_data by executing: docker volume create --name harvest_prometheus_data","title":"Create new Prometheus volume"},{"location":"MigratePrometheusDocker/#copy-the-historical-prometheus-data","text":"We will copy the historical Prometheus data from the old volume to the new one by mounting both volumes and copying data between them. NOTE : Prometheus only supports copying a single volume. It will not work if you attempt to copy multiple volumes into the same destination volume. # replace `HISTORICAL_VOLUME` with the name of the Prometheus volume that contains you historical data found in step 2. docker run --rm -it -v $HISTORICAL_VOLUME :/from -v harvest_prometheus_data:/to alpine ash -c \"cd /from ; cp -av . /to\" Output will look something like this: './wal' -> '/to/./wal' './wal/00000000' -> '/to/./wal/00000000' './chunks_head' -> '/to/./chunks_head' ...","title":"Copy the historical Prometheus data"},{"location":"MigratePrometheusDocker/#optionally-remove-historical-prometheus-data","text":"Before removing the historical data, start your compose stack and make sure everything works. Once you're satisfied that you can destroy the old data, remove it like so. # replace `HISTORICAL_VOLUME` with the name of the Prometheus volume that contains your historical data found in step 2. docker volume rm $HISTORICAL_VOLUME","title":"Optionally remove historical Prometheus data"},{"location":"MigratePrometheusDocker/#reference","text":"Rename Docker Volume","title":"Reference"},{"location":"configure-ems/","text":"EMS collector \u00b6 The EMS collector collects ONTAP event management system ( EMS) events via the ONTAP REST API. This collector uses a YAML template file to define which events to collect, export, and what labels to attach to each metric. This means you can collect new EMS events or attach new labels by editing the default template file or by extending existing templates . The default template file contains 98 EMS events. Supported ONTAP Systems \u00b6 Any cDOT ONTAP system using 9.6 or higher. Requirements \u00b6 It is recommended to create a read-only user on the ONTAP system. See prepare an ONTAP cDOT cluster for details. Metrics \u00b6 This collector collects EMS events from ONTAP and for each received EMS event, creates new metrics prefixed with ems_events . Harvest supports two types of ONTAP EMS events: Normal EMS events Single shot events. When ONTAP detects a problem, an event is raised. When the issue is addressed, ONTAP does not raise another event reflecting that the problem was resolved. Bookend EMS events ONTAP creates bookend events in matching pairs. ONTAP creates an event when an issue is detected and another paired event when the event is resolved. Typically, these events share a common set of properties. Collector Configuration \u00b6 The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) EMS collector configuration file (default: conf/ems/default.yaml ) EMS template file (located in conf/ems/9.6.0/ems.yaml ) Except for addr , datacenter , and auth_style , all other parameters of the EMS collector can be defined in either of these three files. Parameters defined in the lower-level files, override parameters in the higher-level file. This allows you to configure each EMS event individually, or use the same parameters for all events. EMS Collector Configuration File \u00b6 This configuration file contains the parameters that are used to configure the EMS collector. These parameters can be defined in your harvest.yml or conf/ems/default.yaml file. parameter type description default client_timeout Go duration how long to wait for server responses 1m schedule list, required the polling frequency of the collector/object. Should include exactly the following two elements in the order specified: - instance Go duration polling frequency for updating the instance cache (example value: 24h = 1440m ) - data Go duration polling frequency for updating the data cache (example value: 3m ) Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system. The EMS configuration file should contain the following section mapping the Ems object to the corresponding template file. objects : Ems : ems.yaml Even though the EMS mapping shown above references a single file named ems.yaml , there may be multiple versions of that file across subdirectories named after ONTAP releases. See cDOT for examples. At runtime, the EMS collector will select the appropriate object configuration file that most closely matches the targeted ONTAP system. EMS Template File \u00b6 The EMS template file should contain the following parameters: parameter type description default name string display name of the collector. this matches the named defined in your conf/ems/default.yaml file EMS object string short name of the object, used to prefix metrics ems query string REST API endpoint used to query EMS events api/support/ems/events exports list list of default labels attached to each exported metric events list list of EMS events to collect. See Event Parameters Event Parameters \u00b6 This section defines the list of EMS events you want to collect, which properties to export, what labels to attach, and how to handle bookend pairs. The EMS event template parameters are explained below along with an example for reference. name is the ONTAP EMS event name. (collect ONTAP EMS events with the name of LUN.offline ) matches list of name-value pairs used to further filter ONTAP events. Some EMS events include arguments and these name-value pairs provide a way to filter on those arguments. (Only collect ONTAP EMS events where volume_name has the value abc_vol ) exports list of EMS event parameters to export. These exported parameters are attached as labels to each matching EMS event. labels that are prefixed with ^^ use that parameter to define instance uniqueness . resolve_when_ems (applicable to bookend events only). Lists the resolving event that pairs with the issuing event name is the ONTAP EMS event name of the resolving EMS event ( LUN.online ). When the resolving event is received, the issuing EMS event will be resolved. In this example, Harvest will raise an event when it finds the ONTAP EMS event named LUN.offline and that event will be resolved when the EMS event named LUN.online is received. resolve_after (optional, Go duration, default = 28 days) resolve the issuing EMS after the specified duration has elapsed ( 672h = 28d ). If the bookend pair is not received within the resolve_after duration, the issuing EMS event expires. resolve_key (optional) bookend key used to match bookend EMS events. Defaults to prefixed ( ^^ ) labels in exports section. resolve_key allows you to override what is defined in the exports section. Labels are only exported if they are included in the exports section. Example template definition for the LUN.offline EMS event: - name : LUN.offline matches : - name : volume_name value : abc_vol exports : - ^^parameters.object_uuid => object_uuid - parameters.object_type => object_type - parameters.lun_path => lun_path - parameters.volume_name => volume - parameters.volume_dsid => volume_ds_id resolve_when_ems : - name : LUN.online resolve_after : 672h resolve_key : - ^^parameters.object_uuid => object_uuid How do I find the full list of supported EMS events? \u00b6 ONTAP documents the list of EMS events created in the ONTAP EMS Event Catalog . You can also query a live system and ask the cluster for its event catalog like so: curl --insecure --user \"user:password\" 'https://10.61.124.110/api/support/ems/messages?fields=*' Example Output { \"records\": [ { \"name\": \"AccessCache.NearLimits\", \"severity\": \"alert\", \"description\": \"This message occurs when the access cache module is near its limits for entries or export rules. Reaching these limits can prevent new clients from being able to mount and perform I/O on the storage system, and can also cause clients to be granted or denied access based on stale cached information.\", \"corrective_action\": \"Ensure that the number of clients accessing the storage system continues to be below the limits for access cache entries and export rules across those entries. If the set of clients accessing the storage system is constantly changing, consider using the \\\"vserver export-policy access-cache config modify\\\" command to reduce the harvest timeout parameter so that cache entries for clients that are no longer accessing the storage system can be evicted sooner.\", \"snmp_trap_type\": \"severity_based\", \"deprecated\": false }, ... { \"name\": \"ztl.smap.online.status\", \"severity\": \"notice\", \"description\": \"This message occurs when the specified partition on a Software Defined Flash drive could not be onlined due to internal S/W or device error.\", \"corrective_action\": \"NONE\", \"snmp_trap_type\": \"severity_based\", \"deprecated\": false } ], \"num_records\": 7273 } Ems Prometheus Alerts \u00b6 Refer Prometheus-Alerts","title":"EMS"},{"location":"configure-ems/#ems-collector","text":"The EMS collector collects ONTAP event management system ( EMS) events via the ONTAP REST API. This collector uses a YAML template file to define which events to collect, export, and what labels to attach to each metric. This means you can collect new EMS events or attach new labels by editing the default template file or by extending existing templates . The default template file contains 98 EMS events.","title":"EMS collector"},{"location":"configure-ems/#supported-ontap-systems","text":"Any cDOT ONTAP system using 9.6 or higher.","title":"Supported ONTAP Systems"},{"location":"configure-ems/#requirements","text":"It is recommended to create a read-only user on the ONTAP system. See prepare an ONTAP cDOT cluster for details.","title":"Requirements"},{"location":"configure-ems/#metrics","text":"This collector collects EMS events from ONTAP and for each received EMS event, creates new metrics prefixed with ems_events . Harvest supports two types of ONTAP EMS events: Normal EMS events Single shot events. When ONTAP detects a problem, an event is raised. When the issue is addressed, ONTAP does not raise another event reflecting that the problem was resolved. Bookend EMS events ONTAP creates bookend events in matching pairs. ONTAP creates an event when an issue is detected and another paired event when the event is resolved. Typically, these events share a common set of properties.","title":"Metrics"},{"location":"configure-ems/#collector-configuration","text":"The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) EMS collector configuration file (default: conf/ems/default.yaml ) EMS template file (located in conf/ems/9.6.0/ems.yaml ) Except for addr , datacenter , and auth_style , all other parameters of the EMS collector can be defined in either of these three files. Parameters defined in the lower-level files, override parameters in the higher-level file. This allows you to configure each EMS event individually, or use the same parameters for all events.","title":"Collector Configuration"},{"location":"configure-ems/#ems-collector-configuration-file","text":"This configuration file contains the parameters that are used to configure the EMS collector. These parameters can be defined in your harvest.yml or conf/ems/default.yaml file. parameter type description default client_timeout Go duration how long to wait for server responses 1m schedule list, required the polling frequency of the collector/object. Should include exactly the following two elements in the order specified: - instance Go duration polling frequency for updating the instance cache (example value: 24h = 1440m ) - data Go duration polling frequency for updating the data cache (example value: 3m ) Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system. The EMS configuration file should contain the following section mapping the Ems object to the corresponding template file. objects : Ems : ems.yaml Even though the EMS mapping shown above references a single file named ems.yaml , there may be multiple versions of that file across subdirectories named after ONTAP releases. See cDOT for examples. At runtime, the EMS collector will select the appropriate object configuration file that most closely matches the targeted ONTAP system.","title":"EMS Collector Configuration File"},{"location":"configure-ems/#ems-template-file","text":"The EMS template file should contain the following parameters: parameter type description default name string display name of the collector. this matches the named defined in your conf/ems/default.yaml file EMS object string short name of the object, used to prefix metrics ems query string REST API endpoint used to query EMS events api/support/ems/events exports list list of default labels attached to each exported metric events list list of EMS events to collect. See Event Parameters","title":"EMS Template File"},{"location":"configure-ems/#event-parameters","text":"This section defines the list of EMS events you want to collect, which properties to export, what labels to attach, and how to handle bookend pairs. The EMS event template parameters are explained below along with an example for reference. name is the ONTAP EMS event name. (collect ONTAP EMS events with the name of LUN.offline ) matches list of name-value pairs used to further filter ONTAP events. Some EMS events include arguments and these name-value pairs provide a way to filter on those arguments. (Only collect ONTAP EMS events where volume_name has the value abc_vol ) exports list of EMS event parameters to export. These exported parameters are attached as labels to each matching EMS event. labels that are prefixed with ^^ use that parameter to define instance uniqueness . resolve_when_ems (applicable to bookend events only). Lists the resolving event that pairs with the issuing event name is the ONTAP EMS event name of the resolving EMS event ( LUN.online ). When the resolving event is received, the issuing EMS event will be resolved. In this example, Harvest will raise an event when it finds the ONTAP EMS event named LUN.offline and that event will be resolved when the EMS event named LUN.online is received. resolve_after (optional, Go duration, default = 28 days) resolve the issuing EMS after the specified duration has elapsed ( 672h = 28d ). If the bookend pair is not received within the resolve_after duration, the issuing EMS event expires. resolve_key (optional) bookend key used to match bookend EMS events. Defaults to prefixed ( ^^ ) labels in exports section. resolve_key allows you to override what is defined in the exports section. Labels are only exported if they are included in the exports section. Example template definition for the LUN.offline EMS event: - name : LUN.offline matches : - name : volume_name value : abc_vol exports : - ^^parameters.object_uuid => object_uuid - parameters.object_type => object_type - parameters.lun_path => lun_path - parameters.volume_name => volume - parameters.volume_dsid => volume_ds_id resolve_when_ems : - name : LUN.online resolve_after : 672h resolve_key : - ^^parameters.object_uuid => object_uuid","title":"Event Parameters"},{"location":"configure-ems/#how-do-i-find-the-full-list-of-supported-ems-events","text":"ONTAP documents the list of EMS events created in the ONTAP EMS Event Catalog . You can also query a live system and ask the cluster for its event catalog like so: curl --insecure --user \"user:password\" 'https://10.61.124.110/api/support/ems/messages?fields=*' Example Output { \"records\": [ { \"name\": \"AccessCache.NearLimits\", \"severity\": \"alert\", \"description\": \"This message occurs when the access cache module is near its limits for entries or export rules. Reaching these limits can prevent new clients from being able to mount and perform I/O on the storage system, and can also cause clients to be granted or denied access based on stale cached information.\", \"corrective_action\": \"Ensure that the number of clients accessing the storage system continues to be below the limits for access cache entries and export rules across those entries. If the set of clients accessing the storage system is constantly changing, consider using the \\\"vserver export-policy access-cache config modify\\\" command to reduce the harvest timeout parameter so that cache entries for clients that are no longer accessing the storage system can be evicted sooner.\", \"snmp_trap_type\": \"severity_based\", \"deprecated\": false }, ... { \"name\": \"ztl.smap.online.status\", \"severity\": \"notice\", \"description\": \"This message occurs when the specified partition on a Software Defined Flash drive could not be onlined due to internal S/W or device error.\", \"corrective_action\": \"NONE\", \"snmp_trap_type\": \"severity_based\", \"deprecated\": false } ], \"num_records\": 7273 }","title":"How do I find the full list of supported EMS events?"},{"location":"configure-ems/#ems-prometheus-alerts","text":"Refer Prometheus-Alerts","title":"Ems Prometheus Alerts"},{"location":"configure-grafana/","text":"Grafana \u00b6 Grafana hosts the Harvest dashboards and needs to be setup before importing your dashboards .","title":"Configure Grafana"},{"location":"configure-grafana/#grafana","text":"Grafana hosts the Harvest dashboards and needs to be setup before importing your dashboards .","title":"Grafana"},{"location":"configure-harvest-advanced/","text":"This chapter describes additional advanced configuration possibilities of NetApp Harvest. For a typical installation this level of detail is likely not needed.","title":"Configure Harvest (advanced)"},{"location":"configure-harvest-basic/","text":"The main configuration file, harvest.yml , consists of the following sections, described below: Pollers \u00b6 All pollers are defined in harvest.yml , the main configuration file of Harvest, under the section Pollers . parameter type description default Poller name (header) required Poller name, user-defined value datacenter required Datacenter name, user-defined value addr required by some collectors IPv4 or FQDN of the target system collectors required List of collectors to run for this poller exporters required List of exporter names from the Exporters section. Note: this should be the name of the exporter (e.g. prometheus1 ), not the value of the exporter key (e.g. Prometheus ) auth_style required by Zapi* collectors Either basic_auth or certificate_auth See authentication for details basic_auth username , password required if auth_style is basic_auth ssl_cert , ssl_key optional if auth_style is certificate_auth Absolute paths to SSL (client) certificate and key used to authenticate with the target system. If not provided, the poller will look for <hostname>.key and <hostname>.pem in $HARVEST_HOME/cert/ . To create certificates for ONTAP systems, see using certificate authentication use_insecure_tls optional, bool If true, disable TLS verification when connecting to ONTAP cluster false credentials_file optional, string Path to a yaml file that contains cluster credentials. The file should have the same shape as harvest.yml . See here for examples. Path can be relative to harvest.yml or absolute. credentials_script optional, section Section that defines how Harvest should fetch credentials via external script. See here for details. tls_min_version optional, string Minimum TLS version to use when connecting to ONTAP cluster: One of tls10, tls11, tls12 or tls13 Platform decides labels optional, list of key-value pairs Each of the key-value pairs will be added to a poller's metrics. Details below log_max_bytes Maximum size of the log file before it will be rotated 5_242_880 (5 MB) log_max_files Number of rotated log files to keep 5 log optional, list of collector names Matching collectors log their ZAPI request/response prefer_zapi optional, bool Use the ZAPI API if the cluster supports it, otherwise allow Harvest to choose REST or ZAPI, whichever is appropriate to the ONTAP version. See rest-strategy for details. Defaults \u00b6 This section is optional. If there are parameters identical for all your pollers (e.g. datacenter, authentication method, login preferences), they can be grouped under this section. The poller section will be checked first and if the values aren't found there, the defaults will be consulted. Exporters \u00b6 All exporters need two types of parameters: exporter parameters - defined in harvest.yml under Exporters section export_options - these options are defined in the Matrix data structure that is emitted from collectors and plugins The following two parameters are required for all exporters: parameter type description default Exporter name (header) required Name of the exporter instance, this is a user-defined value exporter required Name of the exporter class (e.g. Prometheus, InfluxDB, Http) - these can be found under the cmd/exporters/ directory Note: when we talk about the Prometheus Exporter or InfluxDB Exporter , we mean the Harvest modules that send the data to a database, NOT the names used to refer to the actual databases. Prometheus Exporter \u00b6 InfluxDB Exporter \u00b6 Tools \u00b6 This section is optional. You can uncomment the grafana_api_token key and add your Grafana API token so harvest does not prompt you for the key when importing dashboards. Tools: #grafana_api_token: 'aaa-bbb-ccc-ddd' Configuring collectors \u00b6 Collectors are configured by their own configuration files ( templates ), which are stored in subdirectories in conf/ . Most collectors run concurrently and collect a subset of related metrics. For example, node related metrics are grouped together and run independently of the disk related metrics. Below is a snippet from conf/zapi/default.yaml In this example, the default.yaml template contains a list of objects (e.g. Node) that reference sub-templates (e.g. node.yaml). This decomposition groups related metrics together and at runtime, a Zapi collector per object will be created and each of these collectors will run concurrently. Using the snippet below, we expect there to be four Zapi collectors running, each with a different subtemplate and object. collector: Zapi objects: Node: node.yaml Aggregate: aggr.yaml Volume: volume.yaml SnapMirror: snapmirror.yaml At start-up, Harvest looks for two files ( default.yaml and custom.yaml ) in the conf directory of the collector (e.g. conf/zapi/default.yaml ). The default.yaml is installed by default, while the custom.yaml is an optional file you can create to add new templates . When present, the custom.yaml file will be merged with the default.yaml file. This behavior can be overridden in your harvest.yml , see here for an example. For a list of collector-specific parameters, refer to their individual documentation. Zapi and ZapiPerf \u00b6 Rest and RestPerf \u00b6 EMS \u00b6 StorageGRID \u00b6 Unix \u00b6 Labels \u00b6 Labels offer a way to add additional key-value pairs to a poller's metrics. These allow you to tag a cluster's metrics in a cross-cutting fashion. Here's an example: cluster-03: datacenter: DC-01 addr: 10.0.1.1 labels: - org: meg # add an org label with the value \"meg\" - ns: rtp # add a namespace label with the value \"rtp\" These settings add two key-value pairs to each metric collected from cluster-03 like this: node_vol_cifs_write_data{org=\"meg\",ns=\"rtp\",datacenter=\"DC-01\",cluster=\"cluster-03\",node=\"umeng-aff300-05\"} 10 Keep in mind that each unique combination of key-value pairs increases the amount of stored data. Use them sparingly. See PrometheusNaming for details. Authentication \u00b6 When authenticating with ONTAP and StorageGRID clusters, Harvest supports both client certificates and basic authentication. These methods of authentication are defined in the Pollers or Defaults section of your harvest.yml using one or more of the following parameters. parameter description default Link auth_sytle One of basic_auth or certificate_auth Optional when using credentials_file or credentials_script basic_auth link username Username used for authenticating to the remote system link password Password used for authenticating to the remote system link credentials_file Relative or absolute path to a yaml file that contains cluster credentials link credentials_script External script Harvest executes to retrieve credentials link When multiple authentication parameters are defined at the same time, Harvest tries each method listed below, in the following order, to resolve authentication requests. The first method that returns a non-empty password stops the search. When these parameters exist in both the Pollers and Defaults section, the Pollers section will be consulted before the Defaults . section parameter Pollers auth_style: certificate_auth Pollers auth_style: basic_auth with username and password Pollers credentials_script Pollers credentials_file Defaults auth_style: certificate_auth Defaults auth_style: basic_auth with username and password Defaults credentials_script Defaults credentials_file Credentials File \u00b6 If you would rather not list cluster credentials in your harvest.yml , you can use the credentials_file section in your harvest.yml to point to a file that contains the credentials. At runtime, the credentials_file will be read and the included credentials will be used to authenticate with the matching cluster(s). This is handy when integrating with 3rd party credential stores. See #884 for examples. The format of the credentials_file is similar to harvest.yml and can contain multiple cluster credentials. Example: Snippet from harvest.yml : Pollers : cluster1 : addr : 10.193.48.11 credentials_file : secrets/cluster1.yml exporters : - prom1 File secrets/cluster1.yml : Pollers : cluster1 : username : harvest password : foo Credentials Script \u00b6 You can fetch authentication information via an external script by using the credentials_script section in the Pollers section of your harvest.yml as shown in the example below . At runtime, Harvest will invoke the script referenced in the credentials_script path section. Harvest will call the script with two arguments via standard in , in this order: 1. address of the cluster taken from your harvest.yaml file, section Pollers addr 2. username of the cluster taken from your harvest.yaml file, section Pollers username The script should use the two arguments to look up and return the password via the script's standard out . If the script doesn't finish within the specified timeout , Harvest will kill the script and any spawned processes. Credential scripts are defined in your harvest.yml under the Pollers credentials_script section. Below are the options for the credentials_script section parameter type description default path string absolute path to script that takes two arguments: addr and username, in that order schedule go duration or always schedule used to call the authentication script. If the value is always , the script will be called everytime a password is requested, otherwise use the earlier cached value 24h timeout go duration amount of time Harvest will wait for the script to finish before killing it and descendents 10s Example \u00b6 Pollers : ontap1 : datacenter : rtp addr : 10.1.1.1 collectors : - Rest - RestPerf credentials_script : path : ./get_pass schedule : 3h timeout : 10s Troubleshooting \u00b6 Make sure your script is executable Ensure the user/group that executes your poller also has read and execute permissions on the script. su as the user/group that runs Harvest and make sure you can execute the script too.","title":"Configure Harvest (basic)"},{"location":"configure-harvest-basic/#pollers","text":"All pollers are defined in harvest.yml , the main configuration file of Harvest, under the section Pollers . parameter type description default Poller name (header) required Poller name, user-defined value datacenter required Datacenter name, user-defined value addr required by some collectors IPv4 or FQDN of the target system collectors required List of collectors to run for this poller exporters required List of exporter names from the Exporters section. Note: this should be the name of the exporter (e.g. prometheus1 ), not the value of the exporter key (e.g. Prometheus ) auth_style required by Zapi* collectors Either basic_auth or certificate_auth See authentication for details basic_auth username , password required if auth_style is basic_auth ssl_cert , ssl_key optional if auth_style is certificate_auth Absolute paths to SSL (client) certificate and key used to authenticate with the target system. If not provided, the poller will look for <hostname>.key and <hostname>.pem in $HARVEST_HOME/cert/ . To create certificates for ONTAP systems, see using certificate authentication use_insecure_tls optional, bool If true, disable TLS verification when connecting to ONTAP cluster false credentials_file optional, string Path to a yaml file that contains cluster credentials. The file should have the same shape as harvest.yml . See here for examples. Path can be relative to harvest.yml or absolute. credentials_script optional, section Section that defines how Harvest should fetch credentials via external script. See here for details. tls_min_version optional, string Minimum TLS version to use when connecting to ONTAP cluster: One of tls10, tls11, tls12 or tls13 Platform decides labels optional, list of key-value pairs Each of the key-value pairs will be added to a poller's metrics. Details below log_max_bytes Maximum size of the log file before it will be rotated 5_242_880 (5 MB) log_max_files Number of rotated log files to keep 5 log optional, list of collector names Matching collectors log their ZAPI request/response prefer_zapi optional, bool Use the ZAPI API if the cluster supports it, otherwise allow Harvest to choose REST or ZAPI, whichever is appropriate to the ONTAP version. See rest-strategy for details.","title":"Pollers"},{"location":"configure-harvest-basic/#defaults","text":"This section is optional. If there are parameters identical for all your pollers (e.g. datacenter, authentication method, login preferences), they can be grouped under this section. The poller section will be checked first and if the values aren't found there, the defaults will be consulted.","title":"Defaults"},{"location":"configure-harvest-basic/#exporters","text":"All exporters need two types of parameters: exporter parameters - defined in harvest.yml under Exporters section export_options - these options are defined in the Matrix data structure that is emitted from collectors and plugins The following two parameters are required for all exporters: parameter type description default Exporter name (header) required Name of the exporter instance, this is a user-defined value exporter required Name of the exporter class (e.g. Prometheus, InfluxDB, Http) - these can be found under the cmd/exporters/ directory Note: when we talk about the Prometheus Exporter or InfluxDB Exporter , we mean the Harvest modules that send the data to a database, NOT the names used to refer to the actual databases.","title":"Exporters"},{"location":"configure-harvest-basic/#prometheus-exporter","text":"","title":"Prometheus Exporter"},{"location":"configure-harvest-basic/#influxdb-exporter","text":"","title":"InfluxDB Exporter"},{"location":"configure-harvest-basic/#tools","text":"This section is optional. You can uncomment the grafana_api_token key and add your Grafana API token so harvest does not prompt you for the key when importing dashboards. Tools: #grafana_api_token: 'aaa-bbb-ccc-ddd'","title":"Tools"},{"location":"configure-harvest-basic/#configuring-collectors","text":"Collectors are configured by their own configuration files ( templates ), which are stored in subdirectories in conf/ . Most collectors run concurrently and collect a subset of related metrics. For example, node related metrics are grouped together and run independently of the disk related metrics. Below is a snippet from conf/zapi/default.yaml In this example, the default.yaml template contains a list of objects (e.g. Node) that reference sub-templates (e.g. node.yaml). This decomposition groups related metrics together and at runtime, a Zapi collector per object will be created and each of these collectors will run concurrently. Using the snippet below, we expect there to be four Zapi collectors running, each with a different subtemplate and object. collector: Zapi objects: Node: node.yaml Aggregate: aggr.yaml Volume: volume.yaml SnapMirror: snapmirror.yaml At start-up, Harvest looks for two files ( default.yaml and custom.yaml ) in the conf directory of the collector (e.g. conf/zapi/default.yaml ). The default.yaml is installed by default, while the custom.yaml is an optional file you can create to add new templates . When present, the custom.yaml file will be merged with the default.yaml file. This behavior can be overridden in your harvest.yml , see here for an example. For a list of collector-specific parameters, refer to their individual documentation.","title":"Configuring collectors"},{"location":"configure-harvest-basic/#zapi-and-zapiperf","text":"","title":"Zapi and ZapiPerf"},{"location":"configure-harvest-basic/#rest-and-restperf","text":"","title":"Rest and RestPerf"},{"location":"configure-harvest-basic/#ems","text":"","title":"EMS"},{"location":"configure-harvest-basic/#storagegrid","text":"","title":"StorageGRID"},{"location":"configure-harvest-basic/#unix","text":"","title":"Unix"},{"location":"configure-harvest-basic/#labels","text":"Labels offer a way to add additional key-value pairs to a poller's metrics. These allow you to tag a cluster's metrics in a cross-cutting fashion. Here's an example: cluster-03: datacenter: DC-01 addr: 10.0.1.1 labels: - org: meg # add an org label with the value \"meg\" - ns: rtp # add a namespace label with the value \"rtp\" These settings add two key-value pairs to each metric collected from cluster-03 like this: node_vol_cifs_write_data{org=\"meg\",ns=\"rtp\",datacenter=\"DC-01\",cluster=\"cluster-03\",node=\"umeng-aff300-05\"} 10 Keep in mind that each unique combination of key-value pairs increases the amount of stored data. Use them sparingly. See PrometheusNaming for details.","title":"Labels"},{"location":"configure-harvest-basic/#authentication","text":"When authenticating with ONTAP and StorageGRID clusters, Harvest supports both client certificates and basic authentication. These methods of authentication are defined in the Pollers or Defaults section of your harvest.yml using one or more of the following parameters. parameter description default Link auth_sytle One of basic_auth or certificate_auth Optional when using credentials_file or credentials_script basic_auth link username Username used for authenticating to the remote system link password Password used for authenticating to the remote system link credentials_file Relative or absolute path to a yaml file that contains cluster credentials link credentials_script External script Harvest executes to retrieve credentials link When multiple authentication parameters are defined at the same time, Harvest tries each method listed below, in the following order, to resolve authentication requests. The first method that returns a non-empty password stops the search. When these parameters exist in both the Pollers and Defaults section, the Pollers section will be consulted before the Defaults . section parameter Pollers auth_style: certificate_auth Pollers auth_style: basic_auth with username and password Pollers credentials_script Pollers credentials_file Defaults auth_style: certificate_auth Defaults auth_style: basic_auth with username and password Defaults credentials_script Defaults credentials_file","title":"Authentication"},{"location":"configure-harvest-basic/#credentials-file","text":"If you would rather not list cluster credentials in your harvest.yml , you can use the credentials_file section in your harvest.yml to point to a file that contains the credentials. At runtime, the credentials_file will be read and the included credentials will be used to authenticate with the matching cluster(s). This is handy when integrating with 3rd party credential stores. See #884 for examples. The format of the credentials_file is similar to harvest.yml and can contain multiple cluster credentials. Example: Snippet from harvest.yml : Pollers : cluster1 : addr : 10.193.48.11 credentials_file : secrets/cluster1.yml exporters : - prom1 File secrets/cluster1.yml : Pollers : cluster1 : username : harvest password : foo","title":"Credentials File"},{"location":"configure-harvest-basic/#credentials-script","text":"You can fetch authentication information via an external script by using the credentials_script section in the Pollers section of your harvest.yml as shown in the example below . At runtime, Harvest will invoke the script referenced in the credentials_script path section. Harvest will call the script with two arguments via standard in , in this order: 1. address of the cluster taken from your harvest.yaml file, section Pollers addr 2. username of the cluster taken from your harvest.yaml file, section Pollers username The script should use the two arguments to look up and return the password via the script's standard out . If the script doesn't finish within the specified timeout , Harvest will kill the script and any spawned processes. Credential scripts are defined in your harvest.yml under the Pollers credentials_script section. Below are the options for the credentials_script section parameter type description default path string absolute path to script that takes two arguments: addr and username, in that order schedule go duration or always schedule used to call the authentication script. If the value is always , the script will be called everytime a password is requested, otherwise use the earlier cached value 24h timeout go duration amount of time Harvest will wait for the script to finish before killing it and descendents 10s","title":"Credentials Script"},{"location":"configure-harvest-basic/#example","text":"Pollers : ontap1 : datacenter : rtp addr : 10.1.1.1 collectors : - Rest - RestPerf credentials_script : path : ./get_pass schedule : 3h timeout : 10s","title":"Example"},{"location":"configure-harvest-basic/#troubleshooting","text":"Make sure your script is executable Ensure the user/group that executes your poller also has read and execute permissions on the script. su as the user/group that runs Harvest and make sure you can execute the script too.","title":"Troubleshooting"},{"location":"configure-rest/","text":"Rest Collector \u00b6 The Rest collectors uses the REST protocol to collect data from ONTAP systems. The RestPerf collector is an extension of this collector, therefore they share many parameters and configuration settings. Target System \u00b6 Target system can be cDot ONTAP system. 9.12.1 and after are supported, however the default configuration files may not completely match with all versions. See REST Strategy for more details. Requirements \u00b6 No SDK or other requirements. It is recommended to create a read-only user for Harvest on the ONTAP system (see prepare monitored clusters for details) Metrics \u00b6 The collector collects a dynamic set of metrics. ONTAP returns JSON documents and Harvest allows you to define templates to extract values from the JSON document via a dot notation path. You can view ONTAP's full set of REST APIs by visiting https://docs.netapp.com/us-en/ontap-automation/reference/api_reference.html#access-a-copy-of-the-ontap-rest-api-reference-documentation As an example, the /api/storage/aggregates endpoint, lists all data aggregates in the cluster. Below is an example response from this endpoint: { \"records\" : [ { \"uuid\" : \"3e59547d-298a-4967-bd0f-8ae96cead08c\" , \"name\" : \"umeng_aff300_aggr2\" , \"space\" : { \"block_storage\" : { \"size\" : 8117898706944 , \"available\" : 4889853616128 } }, \"state\" : \"online\" , \"volume_count\" : 36 } ] } The Rest collector will take this document, extract the records section and convert the metrics above into: name , space.block_storage.size , space.block_storage.available , state and volume_count . Metric names will be taken, as is, unless you specify a short display name. See counters for more details. Parameters \u00b6 The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) Rest configuration file (default: conf/rest/default.yaml ) Each object has its own configuration file (located in conf/rest/$version/ ) Except for addr and datacenter , all other parameters of the Rest collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level ones. This allows you to configure each object individually, or use the same parameters for all objects. The full set of parameters are described below . Collector configuration file \u00b6 This configuration file contains a list of objects that should be collected and the filenames of their templates ( explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well. parameter type description default client_timeout duration (Go-syntax) how long to wait for server responses 30s schedule list, required how frequently to retrieve metrics from ONTAP - data duration (Go-syntax) how frequently this collector/object should retrieve metrics from ONTAP 3 minutes The template should define objects in the objects section. Example: objects : Aggregate : aggr.yaml For each object, we define the filename of the object configuration file. The object configuration files are located in subdirectories matching the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches the version of the target ONTAP system. Object configuration file \u00b6 The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string, required display name of the collector that will collect this object query string, required REST endpoint used to issue a REST request object string, required short name of the object counters string list of counters to collect (see notes below) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below) counters \u00b6 This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from ONTAP and updated periodically. The display name of a counter can be changed with => (e.g., space.block_storage.size => space_total ). Counters that are stored as labels will only be exported if they are included in the export_options section. export_options \u00b6 Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate data-point include_all_labels (bool): export all labels with each data-point (overrides previous two parameters) RestPerf Collector \u00b6 RestPerf collects performance metrics from ONTAP systems using the REST protocol. The collector is designed to be easily extendable to collect new objects or to collect additional counters from already configured objects. This collector is an extension of the Rest collector . The major difference between them is that RestPerf collects only the performance ( perf ) APIs. Additionally, RestPerf always calculates final values from the deltas of two subsequent polls. Metrics \u00b6 RestPerf metrics are calculated the same as ZapiPerf metrics. More details about how performance metrics are calculated can be found here . Parameters \u00b6 The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) RestPerf configuration file (default: conf/restperf/default.yaml ) Each object has its own configuration file (located in conf/restperf/$version/ ) Except for addr , datacenter and auth_style , all other parameters of the RestPerf collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level file. This allows the user to configure each objects individually, or use the same parameters for all objects. The full set of parameters are described below . RestPerf configuration file \u00b6 This configuration file (the \"template\") contains a list of objects that should be collected and the filenames of their configuration (explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. (As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well). parameter type description default use_insecure_tls bool, optional skip verifying TLS certificate of the target system false client_timeout duration (Go-syntax) how long to wait for server responses 30s latency_io_reqd int, optional threshold of IOPs for calculating latency metrics (latencies based on very few IOPs are unreliable) 100 schedule list, required the poll frequencies of the collector/object, should include exactly these three elements in the exact same other: - counter duration (Go-syntax) poll frequency of updating the counter metadata cache 20 minutes - instance duration (Go-syntax) poll frequency of updating the instance cache 10 minutes - data duration (Go-syntax) poll frequency of updating the data cache Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system, as many counters are aggregated on-demand. Some metric values become less significant if they are calculated for very short intervals (e.g. latencies) 1 minute The template should define objects in the objects section. Example: objects : SystemNode : system_node.yaml HostAdapter : hostadapter.yaml Note that for each object we only define the filename of the object configuration file. The object configuration files are located in subdirectories matching to the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches to the version of the target ONTAP system. (A mismatch is tolerated since RestPerf will fetch and validate counter metadata from the system.) Object configuration file \u00b6 Refer Object configuration file counters \u00b6 Refer Counters Some counters require a \"base-counter\" for post-processing. If the base-counter is missing, RestPerf will still run, but the missing data won't be exported. export_options \u00b6 Refer Export Options","title":"REST"},{"location":"configure-rest/#rest-collector","text":"The Rest collectors uses the REST protocol to collect data from ONTAP systems. The RestPerf collector is an extension of this collector, therefore they share many parameters and configuration settings.","title":"Rest Collector"},{"location":"configure-rest/#target-system","text":"Target system can be cDot ONTAP system. 9.12.1 and after are supported, however the default configuration files may not completely match with all versions. See REST Strategy for more details.","title":"Target System"},{"location":"configure-rest/#requirements","text":"No SDK or other requirements. It is recommended to create a read-only user for Harvest on the ONTAP system (see prepare monitored clusters for details)","title":"Requirements"},{"location":"configure-rest/#metrics","text":"The collector collects a dynamic set of metrics. ONTAP returns JSON documents and Harvest allows you to define templates to extract values from the JSON document via a dot notation path. You can view ONTAP's full set of REST APIs by visiting https://docs.netapp.com/us-en/ontap-automation/reference/api_reference.html#access-a-copy-of-the-ontap-rest-api-reference-documentation As an example, the /api/storage/aggregates endpoint, lists all data aggregates in the cluster. Below is an example response from this endpoint: { \"records\" : [ { \"uuid\" : \"3e59547d-298a-4967-bd0f-8ae96cead08c\" , \"name\" : \"umeng_aff300_aggr2\" , \"space\" : { \"block_storage\" : { \"size\" : 8117898706944 , \"available\" : 4889853616128 } }, \"state\" : \"online\" , \"volume_count\" : 36 } ] } The Rest collector will take this document, extract the records section and convert the metrics above into: name , space.block_storage.size , space.block_storage.available , state and volume_count . Metric names will be taken, as is, unless you specify a short display name. See counters for more details.","title":"Metrics"},{"location":"configure-rest/#parameters","text":"The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) Rest configuration file (default: conf/rest/default.yaml ) Each object has its own configuration file (located in conf/rest/$version/ ) Except for addr and datacenter , all other parameters of the Rest collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level ones. This allows you to configure each object individually, or use the same parameters for all objects. The full set of parameters are described below .","title":"Parameters"},{"location":"configure-rest/#collector-configuration-file","text":"This configuration file contains a list of objects that should be collected and the filenames of their templates ( explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well. parameter type description default client_timeout duration (Go-syntax) how long to wait for server responses 30s schedule list, required how frequently to retrieve metrics from ONTAP - data duration (Go-syntax) how frequently this collector/object should retrieve metrics from ONTAP 3 minutes The template should define objects in the objects section. Example: objects : Aggregate : aggr.yaml For each object, we define the filename of the object configuration file. The object configuration files are located in subdirectories matching the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches the version of the target ONTAP system.","title":"Collector configuration file"},{"location":"configure-rest/#object-configuration-file","text":"The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string, required display name of the collector that will collect this object query string, required REST endpoint used to issue a REST request object string, required short name of the object counters string list of counters to collect (see notes below) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below)","title":"Object configuration file"},{"location":"configure-rest/#counters","text":"This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from ONTAP and updated periodically. The display name of a counter can be changed with => (e.g., space.block_storage.size => space_total ). Counters that are stored as labels will only be exported if they are included in the export_options section.","title":"counters"},{"location":"configure-rest/#export_options","text":"Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate data-point include_all_labels (bool): export all labels with each data-point (overrides previous two parameters)","title":"export_options"},{"location":"configure-rest/#restperf-collector","text":"RestPerf collects performance metrics from ONTAP systems using the REST protocol. The collector is designed to be easily extendable to collect new objects or to collect additional counters from already configured objects. This collector is an extension of the Rest collector . The major difference between them is that RestPerf collects only the performance ( perf ) APIs. Additionally, RestPerf always calculates final values from the deltas of two subsequent polls.","title":"RestPerf Collector"},{"location":"configure-rest/#metrics_1","text":"RestPerf metrics are calculated the same as ZapiPerf metrics. More details about how performance metrics are calculated can be found here .","title":"Metrics"},{"location":"configure-rest/#parameters_1","text":"The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) RestPerf configuration file (default: conf/restperf/default.yaml ) Each object has its own configuration file (located in conf/restperf/$version/ ) Except for addr , datacenter and auth_style , all other parameters of the RestPerf collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level file. This allows the user to configure each objects individually, or use the same parameters for all objects. The full set of parameters are described below .","title":"Parameters"},{"location":"configure-rest/#restperf-configuration-file","text":"This configuration file (the \"template\") contains a list of objects that should be collected and the filenames of their configuration (explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. (As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well). parameter type description default use_insecure_tls bool, optional skip verifying TLS certificate of the target system false client_timeout duration (Go-syntax) how long to wait for server responses 30s latency_io_reqd int, optional threshold of IOPs for calculating latency metrics (latencies based on very few IOPs are unreliable) 100 schedule list, required the poll frequencies of the collector/object, should include exactly these three elements in the exact same other: - counter duration (Go-syntax) poll frequency of updating the counter metadata cache 20 minutes - instance duration (Go-syntax) poll frequency of updating the instance cache 10 minutes - data duration (Go-syntax) poll frequency of updating the data cache Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system, as many counters are aggregated on-demand. Some metric values become less significant if they are calculated for very short intervals (e.g. latencies) 1 minute The template should define objects in the objects section. Example: objects : SystemNode : system_node.yaml HostAdapter : hostadapter.yaml Note that for each object we only define the filename of the object configuration file. The object configuration files are located in subdirectories matching to the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches to the version of the target ONTAP system. (A mismatch is tolerated since RestPerf will fetch and validate counter metadata from the system.)","title":"RestPerf configuration file"},{"location":"configure-rest/#object-configuration-file_1","text":"Refer Object configuration file","title":"Object configuration file"},{"location":"configure-rest/#counters_1","text":"Refer Counters Some counters require a \"base-counter\" for post-processing. If the base-counter is missing, RestPerf will still run, but the missing data won't be exported.","title":"counters"},{"location":"configure-rest/#export_options_1","text":"Refer Export Options","title":"export_options"},{"location":"configure-storagegrid/","text":"StorageGRID Collector \u00b6 The StorageGRID collector uses REST calls to collect data from StorageGRID systems. Target System \u00b6 All StorageGRID versions are supported, however the default configuration files may not completely match with older systems. Requirements \u00b6 No SDK or other requirements. It is recommended to create a read-only user for Harvest on the StorageGRID system (see prepare monitored clusters for details) Metrics \u00b6 The collector collects a dynamic set of metrics via StorageGRID's REST API. StorageGRID returns JSON documents and Harvest allows you to define templates to extract values from the JSON document via a dot notation path. You can view StorageGRID's full set of REST APIs by visiting https://$STORAGE_GRID_HOSTNAME/grid/apidocs.html As an example, the /grid/accounts-cache endpoint, lists the tenant accounts in the cache and includes additional information, such as objectCount and dataBytes. Below is an example response from this endpoint: { \"data\" : [ { \"id\" : \"95245224059574669217\" , \"name\" : \"foople\" , \"policy\" : { \"quotaObjectBytes\" : 50000000000 }, \"objectCount\" : 6 , \"dataBytes\" : 10473454261 } ] } The StorageGRID collector will take this document, extract the data section and convert the metrics above into: name , policy.quotaObjectBytes , objectCount , and dataBytes . Metric names will be taken, as is, unless you specify a short display name. See counters for more details. Parameters \u00b6 The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) StorageGRID configuration file (default: conf/storagegrid/default.yaml ) Each object has its own configuration file (located in conf/storagegrid/$version/ ) Except for addr and datacenter , all other parameters of the StorageGRID collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level ones. This allows you to configure each object individually, or use the same parameters for all objects. The full set of parameters are described below . Harvest configuration file \u00b6 Parameters in the poller section should define the following required parameters. parameter type description default Poller name (header) string, required Poller name, user-defined value addr string, required address (IP or FQDN) of the ONTAP system datacenter string, required Datacenter name, user-defined value username , password string, required StorageGRID username and password with at least Tenant accounts permissions collectors list, required Name of collector to run for this poller, use StorageGrid for this collector StorageGRID configuration file \u00b6 This configuration file contains a list of objects that should be collected and the filenames of their templates ( explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well. parameter type description default client_timeout duration (Go-syntax) how long to wait for server responses 30s schedule list, required how frequently to retrieve metrics from StorageGRID - data duration (Go-syntax) how frequently this collector/object should retrieve metrics from StorageGRID 5 minutes The template should define objects in the objects section. Example: objects : Tenant : tenant.yaml For each object, we define the filename of the object configuration file. The object configuration files are located in subdirectories matching the StorageGRID version that was used to create these files. It is possible to have multiple version-subdirectories for multiple StorageGRID versions. At runtime, the collector will select the object configuration file that closest matches the version of the target StorageGRID system. Object configuration file \u00b6 The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string, required display name of the collector that will collect this object query string, required REST endpoint used to issue a REST request object string, required short name of the object api string StorageGRID REST endpoint version to use, overrides default management API version 3 counters list list of counters to collect (see notes below) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below) counters \u00b6 This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from StorageGRID and updated periodically. The display name of a counter can be changed with => (e.g., policy.quotaObjectBytes => logical_quota ). Counters that are stored as labels will only be exported if they are included in the export_options section. export_options \u00b6 Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate _label metric include_all_labels (bool): export all labels with each data-point (overrides previous two parameters)","title":"StorageGRID"},{"location":"configure-storagegrid/#storagegrid-collector","text":"The StorageGRID collector uses REST calls to collect data from StorageGRID systems.","title":"StorageGRID Collector"},{"location":"configure-storagegrid/#target-system","text":"All StorageGRID versions are supported, however the default configuration files may not completely match with older systems.","title":"Target System"},{"location":"configure-storagegrid/#requirements","text":"No SDK or other requirements. It is recommended to create a read-only user for Harvest on the StorageGRID system (see prepare monitored clusters for details)","title":"Requirements"},{"location":"configure-storagegrid/#metrics","text":"The collector collects a dynamic set of metrics via StorageGRID's REST API. StorageGRID returns JSON documents and Harvest allows you to define templates to extract values from the JSON document via a dot notation path. You can view StorageGRID's full set of REST APIs by visiting https://$STORAGE_GRID_HOSTNAME/grid/apidocs.html As an example, the /grid/accounts-cache endpoint, lists the tenant accounts in the cache and includes additional information, such as objectCount and dataBytes. Below is an example response from this endpoint: { \"data\" : [ { \"id\" : \"95245224059574669217\" , \"name\" : \"foople\" , \"policy\" : { \"quotaObjectBytes\" : 50000000000 }, \"objectCount\" : 6 , \"dataBytes\" : 10473454261 } ] } The StorageGRID collector will take this document, extract the data section and convert the metrics above into: name , policy.quotaObjectBytes , objectCount , and dataBytes . Metric names will be taken, as is, unless you specify a short display name. See counters for more details.","title":"Metrics"},{"location":"configure-storagegrid/#parameters","text":"The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) StorageGRID configuration file (default: conf/storagegrid/default.yaml ) Each object has its own configuration file (located in conf/storagegrid/$version/ ) Except for addr and datacenter , all other parameters of the StorageGRID collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level ones. This allows you to configure each object individually, or use the same parameters for all objects. The full set of parameters are described below .","title":"Parameters"},{"location":"configure-storagegrid/#harvest-configuration-file","text":"Parameters in the poller section should define the following required parameters. parameter type description default Poller name (header) string, required Poller name, user-defined value addr string, required address (IP or FQDN) of the ONTAP system datacenter string, required Datacenter name, user-defined value username , password string, required StorageGRID username and password with at least Tenant accounts permissions collectors list, required Name of collector to run for this poller, use StorageGrid for this collector","title":"Harvest configuration file"},{"location":"configure-storagegrid/#storagegrid-configuration-file","text":"This configuration file contains a list of objects that should be collected and the filenames of their templates ( explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well. parameter type description default client_timeout duration (Go-syntax) how long to wait for server responses 30s schedule list, required how frequently to retrieve metrics from StorageGRID - data duration (Go-syntax) how frequently this collector/object should retrieve metrics from StorageGRID 5 minutes The template should define objects in the objects section. Example: objects : Tenant : tenant.yaml For each object, we define the filename of the object configuration file. The object configuration files are located in subdirectories matching the StorageGRID version that was used to create these files. It is possible to have multiple version-subdirectories for multiple StorageGRID versions. At runtime, the collector will select the object configuration file that closest matches the version of the target StorageGRID system.","title":"StorageGRID configuration file"},{"location":"configure-storagegrid/#object-configuration-file","text":"The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string, required display name of the collector that will collect this object query string, required REST endpoint used to issue a REST request object string, required short name of the object api string StorageGRID REST endpoint version to use, overrides default management API version 3 counters list list of counters to collect (see notes below) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below)","title":"Object configuration file"},{"location":"configure-storagegrid/#counters","text":"This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from StorageGRID and updated periodically. The display name of a counter can be changed with => (e.g., policy.quotaObjectBytes => logical_quota ). Counters that are stored as labels will only be exported if they are included in the export_options section.","title":"counters"},{"location":"configure-storagegrid/#export_options","text":"Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate _label metric include_all_labels (bool): export all labels with each data-point (overrides previous two parameters)","title":"export_options"},{"location":"configure-templates/","text":"Creating/editing templates \u00b6 This document covers how to use Collector and Object templates to extend Harvest. How to add a new object template How to extend an existing object template There are a couple of ways to learn about ZAPIs and their attributes: ONTAP's documentation Using Harvest's zapi tool to explore available APIs and metrics on your cluster. Examples: $ harvest zapi --poller <poller> show apis # will print list of apis that are available # usually apis with the \"get-iter\" suffix can provide useful metrics $ harvest zapi --poller <poller> show attrs --api volume-get-iter # will print the attribute tree of the API $ harvest zapi --poller <poller> show data --api volume-get-iter # will print raw data of the API attribute tree (Replace <poller> with the name of a poller that can connect to an ONTAP system.) Collector templates \u00b6 Collector templates define which set of objects Harvest should collect from the system being monitored. In your harvest.yml configuration file, when you say that you want to use a Zapi collector, that collector will read the matching conf/zapi/default.yaml - same with ZapiPerf , it will read the conf/zapiperf/default.yaml file. Belows's a snippet from conf/zapi/default.yaml . Each object is mapped to a corresponding object template file. For example, the Node object searches for the most appropriate version of the node.yaml file in the conf/zapi/cdot/** directory. collector: Zapi objects: Node: node.yaml Aggregate: aggr.yaml Volume: volume.yaml Disk: disk.yaml Each collector will also check if a matching file named, custom.yaml exists, and if it does, it will read that file and merge it with default.yaml . The custom.yaml file should be located beside the matching default.yaml file. ( eg. conf/zapi/custom.yaml is beside conf/zapi/default.yaml ). Let's take a look at some examples. Define a poller that uses the default Zapi collector. Using the default template is the easiest and most used option. Pollers : jamaica : datacenter : munich addr : 10.10.10.10 collectors : - Zapi # will use conf/zapi/default.yaml and optionally merge with conf/zapi/custom.yaml Define a poller that uses the Zapi collector, but with a custom template file: Pollers : jamaica : datacenter : munich addr : 10.10.10.10 collectors : - ZapiPerf : - limited.yaml # will use conf/zapiperf/limited.yaml # more templates can be added, they will be merged Object Templates \u00b6 Object templates (example: conf/zapi/cdot/9.8.0/lun.yaml ) describe what to collect and export. These templates are used by collectors to gather metrics and send them to your time-series db. Object templates are made up of the following parts: the name of the object (or resource) to collect the ZAPI or REST query used to collect the object a list of object counters to collect and how to export them Instead of editing one of the existing templates, it's better to extend one of them. That way, your custom template will not be overwritten when upgrading Harvest. For example, if you want to extend conf/zapi/cdot/9.8.0/aggr.yaml , first create a copy (e.g., conf/zapi/cdot/9.8.0/custom_aggr.yaml ), and then tell Harvest to use your custom template by adding these lines to conf/zapi/custom.yaml : objects : Aggregate : custom_aggr.yaml After restarting your pollers, aggr.yaml and custom_aggr.yaml will be merged. Create a new object template \u00b6 In this example, imagine that Harvest doesn't already collect environment sensor data and you wanted to collect it. Sensor does comes from the environment-sensors-get-iter ZAPI. Here are the steps to add a new object template. Create the file conf/zapi/cdot/9.8.0/sensor.yaml (optionally replace 9.8.0 with the earliest version of ONTAP that supports sensor data. Refer to Harvest Versioned Templates for more information. Add the following content to your new sensor.yaml file. name : Sensor # this name must match the key in your custom.yaml file query : environment-sensors-get-iter object : sensor metric_type : int64 counters : environment-sensors-info : - critical-high-threshold => critical_high - critical-low-threshold => critical_low - ^discrete-sensor-state => discrete_state - ^discrete-sensor-value => discrete_value - ^^node-name => node - ^^sensor-name => sensor - ^sensor-type => type - ^threshold-sensor-state => threshold_state - threshold-sensor-value => threshold_value - ^value-units => unit - ^warning-high-threshold => warning_high - ^warning-low-threshold => warning_low export_options : include_all_labels : true Enable the new object template \u00b6 To enable the new sensor object template, create the conf/zapi/custom.yaml file with the lines shown below. objects : Sensor : sensor.yaml # this key must match the name in your sensor.yaml file The Sensor key used in the custom.yaml must match the name defined in the sensor.yaml file. That mapping is what connects this object with its template. In the future, if you add more object templates, you can add those in your existing custom.yaml file. Test your object template changes \u00b6 Test your new Sensor template with a single poller like this: ./bin/harvest start <poller> --foreground --verbose --collectors Zapi --objects Sensor Replace <poller> with the name of one of your ONTAP pollers. Once you have confirmed that the new template works, restart any already running pollers that you want to use the new template(s). Check the metrics \u00b6 If you are using the Prometheus exporter, you can scrape the poller's HTTP endpoint with curl or a web browser. E.g., my poller exports its data on port 15001. Adjust as needed for your exporter. curl -s 'http://localhost:15001/metrics' | grep ^sensor_ # sensor_ name matches the object: value in your sensor.yaml file. sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"3664\",node=\"shopfloor-02\",sensor=\"P3.3V STBY\",type=\"voltage\",warning_low=\"3040\",critical_low=\"2960\",threshold_state=\"normal\",unit=\"mV\",warning_high=\"3568\"} 3280 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"P1.2V STBY\",type=\"voltage\",threshold_state=\"normal\",warning_high=\"1299\",warning_low=\"1105\",critical_low=\"1086\",node=\"shopfloor-02\",critical_high=\"1319\",unit=\"mV\"} 1193 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",unit=\"mV\",critical_high=\"15810\",critical_low=\"0\",node=\"shopfloor-02\",sensor=\"P12V STBY\",type=\"voltage\",threshold_state=\"normal\"} 11842 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"P12V STBY Curr\",type=\"current\",threshold_state=\"normal\",unit=\"mA\",critical_high=\"3182\",critical_low=\"0\",node=\"shopfloor-02\"} 748 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_low=\"1470\",node=\"shopfloor-02\",sensor=\"Sysfan2 F2 Speed\",type=\"fan\",threshold_state=\"normal\",unit=\"RPM\",warning_low=\"1560\"} 2820 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"PSU2 Fan1 Speed\",type=\"fan\",threshold_state=\"normal\",unit=\"RPM\",warning_low=\"4600\",critical_low=\"4500\",node=\"shopfloor-01\"} 6900 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"PSU1 InPwr Monitor\",type=\"unknown\",threshold_state=\"normal\",unit=\"mW\",node=\"shopfloor-01\"} 132000 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"58\",type=\"thermal\",unit=\"C\",warning_high=\"53\",critical_low=\"0\",node=\"shopfloor-01\",sensor=\"Bat Temp\",threshold_state=\"normal\",warning_low=\"5\"} 24 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"9000\",node=\"shopfloor-01\",sensor=\"Bat Charge Volt\",type=\"voltage\",threshold_state=\"normal\",unit=\"mV\",warning_high=\"8900\"} 8200 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",node=\"shopfloor-02\",sensor=\"PSU1 InPwr Monitor\",type=\"unknown\",threshold_state=\"normal\",unit=\"mW\"} 132000 Extend an existing object template \u00b6 How to extend a Rest/RestPerf/Ems collector's existing object template \u00b6 Instead of editing one of the existing templates, it's better to copy one and edit the copy. That way, your custom template will not be overwritten when upgrading Harvest. For example, if you want to change conf/rest/cdot/9.12.0/aggr.yaml , first create a copy (e.g., conf/rest/cdot/9.12.0/custom_aggr.yaml ), then add these lines to conf/rest/custom.yaml : objects : Aggregate : custom_aggr.yaml After restarting pollers, aggr.yaml will be ignored and the new, custom_aggr.yaml subtemplate will be used instead. How to extend a Zapi/ZapiPerf collector's existing object template \u00b6 In this example, we want to extend one of the existing object templates that Harvest ships with, e.g. conf/zapi/cdot/9.8.0/lun.yaml and collect additional information as outlined below. Let's say you want to extend lun.yaml to: Increase client_timeout (You want to increase the default timeout of the lun ZAPI because it keeps timing out ) Add additional counters, e.g. multiprotocol-type , application Add a new counter to the already collected lun metrics using the value_to_num plugin Add a new application instance_keys and labels to the collected metrics Let's assume the existing template is located at conf/zapi/cdot/9.8.0/lun.yaml and contains the following. name : Lun query : lun-get-iter object : lun counters : lun-info : - ^node - ^path - ^qtree - size - size-used - ^state - ^^uuid - ^volume - ^vserver => svm plugins : - LabelAgent : # metric label zapi_value rest_value `default_value` value_to_num : - new_status state online online `0` split : - path `/` ,,,lun export_options : instance_keys : - node - qtree - lun - volume - svm instance_labels : - state To extend the out-of-the-box lun.yaml template, create a conf/zapi/custom.yaml file if it doesn't already exist and add the lines shown below: objects : Lun : custom_lun.yaml Create a new object template conf/zapi/cdot/9.8.0/custom_lun.yaml with the lines shown below. client_timeout : 5m counters : lun-info : - ^multiprotocol-type - ^application plugins : - LabelAgent : value_to_num : - custom_status state online online `0` export_options : instance_keys : - application When you restart your pollers, Harvest will take the out-of-the-box template ( lun.yaml ) and your new one ( custom_lun.yaml ) and merge them into the following: name : Lun query : lun-get-iter object : lun counters : lun-info : - ^node - ^path - ^qtree - size - size-used - ^state - ^^uuid - ^volume - ^vserver => svm - ^multiprotocol-type - ^application plugins : LabelAgent : value_to_num : - new_status state online online `0` - custom_status state online online `0` split : - path `/` ,,,lun export_options : instance_keys : - node - qtree - lun - volume - svm - application client_timeout : 5m To help understand the merging process and the resulting combined template, you can view the result with: bin/harvest doctor merge --template conf/zapi/cdot/9.8.0/lun.yaml --with conf/zapi/cdot/9.8.0/custom_lun.yaml Replace an existing object template for Zapi/ZapiPerf Collector \u00b6 You can only extend existing templates for Zapi/ZapiPerf Collector as explained above . If you need to replace one of the existing object templates, let us know on Discord or GitHub. Harvest Versioned Templates \u00b6 Harvest ships with a set of versioned templates tailored for specific versions of ONTAP. At runtime, Harvest uses a BestFit heuristic to pick the most appropriate template. The BestFit heuristic compares the list of Harvest templates with the ONTAP version and selects the best match. There are versioned templates for both the ZAPI and REST collectors. Below is an example of how the BestFit algorithm works - assume Harvest has these templated versions: 9.6.0 9.6.1 9.8.0 9.9.0 9.10.1 if you are monitoring a cluster at these versions, Harvest will select the indicated template: ONTAP version 9.4.1, Harvest will select the templates for 9.6.0 ONTAP version 9.6.0, Harvest will select the templates for 9.6.0 ONTAP version 9.7.X, Harvest will select the templates for 9.6.1 ONTAP version 9.12, Harvest will select the templates for 9.10.1 counters \u00b6 This section contains the complete or partial attribute tree of the queried API. Since the collector does not get counter metadata from the ONTAP system, two additional symbols are used for non-numeric attributes: ^ used as a prefix indicates that the attribute should be stored as a label ^^ indicates that the attribute is a label and an instance key (i.e., a label that uniquely identifies an instance, such as name , uuid ). If a single label does not uniquely identify an instance, then multiple instance keys should be indicated. Additionally, the symbol => can be used to set a custom display name for both instance labels and numeric counters. Example: name : Spare query : aggr-spare-get-iter object : spare collect_only_labels : true counters : aggr-spare-disk-info : - ^^disk # creates label aggr-disk - ^disk-type # creates label aggr-disk-type - ^is-disk-zeroed => is_disk_zeroed # creates label is_disk_zeroed - ^^original-owner => original_owner # creates label original_owner export_options : instance_keys : - disk - original_owner instance_labels : - disk_type - is_disk_zeroed Harvest does its best to determine a unique display name for each template's label and metric. Instead of relying on this heuristic, it is better to be explicit in your templates and define a display name using the caret ( ^ ) mapping. For example, instead of this: aggr-spare-disk-info: - ^^disk - ^disk-type do this: aggr-spare-disk-info: - ^^disk => disk - ^disk-type => disk_type See also #585","title":"Templates"},{"location":"configure-templates/#creatingediting-templates","text":"This document covers how to use Collector and Object templates to extend Harvest. How to add a new object template How to extend an existing object template There are a couple of ways to learn about ZAPIs and their attributes: ONTAP's documentation Using Harvest's zapi tool to explore available APIs and metrics on your cluster. Examples: $ harvest zapi --poller <poller> show apis # will print list of apis that are available # usually apis with the \"get-iter\" suffix can provide useful metrics $ harvest zapi --poller <poller> show attrs --api volume-get-iter # will print the attribute tree of the API $ harvest zapi --poller <poller> show data --api volume-get-iter # will print raw data of the API attribute tree (Replace <poller> with the name of a poller that can connect to an ONTAP system.)","title":"Creating/editing templates"},{"location":"configure-templates/#collector-templates","text":"Collector templates define which set of objects Harvest should collect from the system being monitored. In your harvest.yml configuration file, when you say that you want to use a Zapi collector, that collector will read the matching conf/zapi/default.yaml - same with ZapiPerf , it will read the conf/zapiperf/default.yaml file. Belows's a snippet from conf/zapi/default.yaml . Each object is mapped to a corresponding object template file. For example, the Node object searches for the most appropriate version of the node.yaml file in the conf/zapi/cdot/** directory. collector: Zapi objects: Node: node.yaml Aggregate: aggr.yaml Volume: volume.yaml Disk: disk.yaml Each collector will also check if a matching file named, custom.yaml exists, and if it does, it will read that file and merge it with default.yaml . The custom.yaml file should be located beside the matching default.yaml file. ( eg. conf/zapi/custom.yaml is beside conf/zapi/default.yaml ). Let's take a look at some examples. Define a poller that uses the default Zapi collector. Using the default template is the easiest and most used option. Pollers : jamaica : datacenter : munich addr : 10.10.10.10 collectors : - Zapi # will use conf/zapi/default.yaml and optionally merge with conf/zapi/custom.yaml Define a poller that uses the Zapi collector, but with a custom template file: Pollers : jamaica : datacenter : munich addr : 10.10.10.10 collectors : - ZapiPerf : - limited.yaml # will use conf/zapiperf/limited.yaml # more templates can be added, they will be merged","title":"Collector templates"},{"location":"configure-templates/#object-templates","text":"Object templates (example: conf/zapi/cdot/9.8.0/lun.yaml ) describe what to collect and export. These templates are used by collectors to gather metrics and send them to your time-series db. Object templates are made up of the following parts: the name of the object (or resource) to collect the ZAPI or REST query used to collect the object a list of object counters to collect and how to export them Instead of editing one of the existing templates, it's better to extend one of them. That way, your custom template will not be overwritten when upgrading Harvest. For example, if you want to extend conf/zapi/cdot/9.8.0/aggr.yaml , first create a copy (e.g., conf/zapi/cdot/9.8.0/custom_aggr.yaml ), and then tell Harvest to use your custom template by adding these lines to conf/zapi/custom.yaml : objects : Aggregate : custom_aggr.yaml After restarting your pollers, aggr.yaml and custom_aggr.yaml will be merged.","title":"Object Templates"},{"location":"configure-templates/#create-a-new-object-template","text":"In this example, imagine that Harvest doesn't already collect environment sensor data and you wanted to collect it. Sensor does comes from the environment-sensors-get-iter ZAPI. Here are the steps to add a new object template. Create the file conf/zapi/cdot/9.8.0/sensor.yaml (optionally replace 9.8.0 with the earliest version of ONTAP that supports sensor data. Refer to Harvest Versioned Templates for more information. Add the following content to your new sensor.yaml file. name : Sensor # this name must match the key in your custom.yaml file query : environment-sensors-get-iter object : sensor metric_type : int64 counters : environment-sensors-info : - critical-high-threshold => critical_high - critical-low-threshold => critical_low - ^discrete-sensor-state => discrete_state - ^discrete-sensor-value => discrete_value - ^^node-name => node - ^^sensor-name => sensor - ^sensor-type => type - ^threshold-sensor-state => threshold_state - threshold-sensor-value => threshold_value - ^value-units => unit - ^warning-high-threshold => warning_high - ^warning-low-threshold => warning_low export_options : include_all_labels : true","title":"Create a new object template"},{"location":"configure-templates/#enable-the-new-object-template","text":"To enable the new sensor object template, create the conf/zapi/custom.yaml file with the lines shown below. objects : Sensor : sensor.yaml # this key must match the name in your sensor.yaml file The Sensor key used in the custom.yaml must match the name defined in the sensor.yaml file. That mapping is what connects this object with its template. In the future, if you add more object templates, you can add those in your existing custom.yaml file.","title":"Enable the new object template"},{"location":"configure-templates/#test-your-object-template-changes","text":"Test your new Sensor template with a single poller like this: ./bin/harvest start <poller> --foreground --verbose --collectors Zapi --objects Sensor Replace <poller> with the name of one of your ONTAP pollers. Once you have confirmed that the new template works, restart any already running pollers that you want to use the new template(s).","title":"Test your object template changes"},{"location":"configure-templates/#check-the-metrics","text":"If you are using the Prometheus exporter, you can scrape the poller's HTTP endpoint with curl or a web browser. E.g., my poller exports its data on port 15001. Adjust as needed for your exporter. curl -s 'http://localhost:15001/metrics' | grep ^sensor_ # sensor_ name matches the object: value in your sensor.yaml file. sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"3664\",node=\"shopfloor-02\",sensor=\"P3.3V STBY\",type=\"voltage\",warning_low=\"3040\",critical_low=\"2960\",threshold_state=\"normal\",unit=\"mV\",warning_high=\"3568\"} 3280 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"P1.2V STBY\",type=\"voltage\",threshold_state=\"normal\",warning_high=\"1299\",warning_low=\"1105\",critical_low=\"1086\",node=\"shopfloor-02\",critical_high=\"1319\",unit=\"mV\"} 1193 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",unit=\"mV\",critical_high=\"15810\",critical_low=\"0\",node=\"shopfloor-02\",sensor=\"P12V STBY\",type=\"voltage\",threshold_state=\"normal\"} 11842 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"P12V STBY Curr\",type=\"current\",threshold_state=\"normal\",unit=\"mA\",critical_high=\"3182\",critical_low=\"0\",node=\"shopfloor-02\"} 748 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_low=\"1470\",node=\"shopfloor-02\",sensor=\"Sysfan2 F2 Speed\",type=\"fan\",threshold_state=\"normal\",unit=\"RPM\",warning_low=\"1560\"} 2820 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"PSU2 Fan1 Speed\",type=\"fan\",threshold_state=\"normal\",unit=\"RPM\",warning_low=\"4600\",critical_low=\"4500\",node=\"shopfloor-01\"} 6900 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",sensor=\"PSU1 InPwr Monitor\",type=\"unknown\",threshold_state=\"normal\",unit=\"mW\",node=\"shopfloor-01\"} 132000 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"58\",type=\"thermal\",unit=\"C\",warning_high=\"53\",critical_low=\"0\",node=\"shopfloor-01\",sensor=\"Bat Temp\",threshold_state=\"normal\",warning_low=\"5\"} 24 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",critical_high=\"9000\",node=\"shopfloor-01\",sensor=\"Bat Charge Volt\",type=\"voltage\",threshold_state=\"normal\",unit=\"mV\",warning_high=\"8900\"} 8200 sensor_value{datacenter=\"WDRF\",cluster=\"shopfloor\",node=\"shopfloor-02\",sensor=\"PSU1 InPwr Monitor\",type=\"unknown\",threshold_state=\"normal\",unit=\"mW\"} 132000","title":"Check the metrics"},{"location":"configure-templates/#extend-an-existing-object-template","text":"","title":"Extend an existing object template"},{"location":"configure-templates/#how-to-extend-a-restrestperfems-collectors-existing-object-template","text":"Instead of editing one of the existing templates, it's better to copy one and edit the copy. That way, your custom template will not be overwritten when upgrading Harvest. For example, if you want to change conf/rest/cdot/9.12.0/aggr.yaml , first create a copy (e.g., conf/rest/cdot/9.12.0/custom_aggr.yaml ), then add these lines to conf/rest/custom.yaml : objects : Aggregate : custom_aggr.yaml After restarting pollers, aggr.yaml will be ignored and the new, custom_aggr.yaml subtemplate will be used instead.","title":"How to extend a Rest/RestPerf/Ems collector's existing object template"},{"location":"configure-templates/#how-to-extend-a-zapizapiperf-collectors-existing-object-template","text":"In this example, we want to extend one of the existing object templates that Harvest ships with, e.g. conf/zapi/cdot/9.8.0/lun.yaml and collect additional information as outlined below. Let's say you want to extend lun.yaml to: Increase client_timeout (You want to increase the default timeout of the lun ZAPI because it keeps timing out ) Add additional counters, e.g. multiprotocol-type , application Add a new counter to the already collected lun metrics using the value_to_num plugin Add a new application instance_keys and labels to the collected metrics Let's assume the existing template is located at conf/zapi/cdot/9.8.0/lun.yaml and contains the following. name : Lun query : lun-get-iter object : lun counters : lun-info : - ^node - ^path - ^qtree - size - size-used - ^state - ^^uuid - ^volume - ^vserver => svm plugins : - LabelAgent : # metric label zapi_value rest_value `default_value` value_to_num : - new_status state online online `0` split : - path `/` ,,,lun export_options : instance_keys : - node - qtree - lun - volume - svm instance_labels : - state To extend the out-of-the-box lun.yaml template, create a conf/zapi/custom.yaml file if it doesn't already exist and add the lines shown below: objects : Lun : custom_lun.yaml Create a new object template conf/zapi/cdot/9.8.0/custom_lun.yaml with the lines shown below. client_timeout : 5m counters : lun-info : - ^multiprotocol-type - ^application plugins : - LabelAgent : value_to_num : - custom_status state online online `0` export_options : instance_keys : - application When you restart your pollers, Harvest will take the out-of-the-box template ( lun.yaml ) and your new one ( custom_lun.yaml ) and merge them into the following: name : Lun query : lun-get-iter object : lun counters : lun-info : - ^node - ^path - ^qtree - size - size-used - ^state - ^^uuid - ^volume - ^vserver => svm - ^multiprotocol-type - ^application plugins : LabelAgent : value_to_num : - new_status state online online `0` - custom_status state online online `0` split : - path `/` ,,,lun export_options : instance_keys : - node - qtree - lun - volume - svm - application client_timeout : 5m To help understand the merging process and the resulting combined template, you can view the result with: bin/harvest doctor merge --template conf/zapi/cdot/9.8.0/lun.yaml --with conf/zapi/cdot/9.8.0/custom_lun.yaml","title":"How to extend a Zapi/ZapiPerf collector's existing object template"},{"location":"configure-templates/#replace-an-existing-object-template-for-zapizapiperf-collector","text":"You can only extend existing templates for Zapi/ZapiPerf Collector as explained above . If you need to replace one of the existing object templates, let us know on Discord or GitHub.","title":"Replace an existing object template for Zapi/ZapiPerf Collector"},{"location":"configure-templates/#harvest-versioned-templates","text":"Harvest ships with a set of versioned templates tailored for specific versions of ONTAP. At runtime, Harvest uses a BestFit heuristic to pick the most appropriate template. The BestFit heuristic compares the list of Harvest templates with the ONTAP version and selects the best match. There are versioned templates for both the ZAPI and REST collectors. Below is an example of how the BestFit algorithm works - assume Harvest has these templated versions: 9.6.0 9.6.1 9.8.0 9.9.0 9.10.1 if you are monitoring a cluster at these versions, Harvest will select the indicated template: ONTAP version 9.4.1, Harvest will select the templates for 9.6.0 ONTAP version 9.6.0, Harvest will select the templates for 9.6.0 ONTAP version 9.7.X, Harvest will select the templates for 9.6.1 ONTAP version 9.12, Harvest will select the templates for 9.10.1","title":"Harvest Versioned Templates"},{"location":"configure-templates/#counters","text":"This section contains the complete or partial attribute tree of the queried API. Since the collector does not get counter metadata from the ONTAP system, two additional symbols are used for non-numeric attributes: ^ used as a prefix indicates that the attribute should be stored as a label ^^ indicates that the attribute is a label and an instance key (i.e., a label that uniquely identifies an instance, such as name , uuid ). If a single label does not uniquely identify an instance, then multiple instance keys should be indicated. Additionally, the symbol => can be used to set a custom display name for both instance labels and numeric counters. Example: name : Spare query : aggr-spare-get-iter object : spare collect_only_labels : true counters : aggr-spare-disk-info : - ^^disk # creates label aggr-disk - ^disk-type # creates label aggr-disk-type - ^is-disk-zeroed => is_disk_zeroed # creates label is_disk_zeroed - ^^original-owner => original_owner # creates label original_owner export_options : instance_keys : - disk - original_owner instance_labels : - disk_type - is_disk_zeroed Harvest does its best to determine a unique display name for each template's label and metric. Instead of relying on this heuristic, it is better to be explicit in your templates and define a display name using the caret ( ^ ) mapping. For example, instead of this: aggr-spare-disk-info: - ^^disk - ^disk-type do this: aggr-spare-disk-info: - ^^disk => disk - ^disk-type => disk_type See also #585","title":"counters"},{"location":"configure-unix/","text":"Unix \u00b6 This collector polls resource usage by Harvest pollers on the local system. Collector might be extended in the future to monitor any local or remote process. Target System \u00b6 The machine where Harvest is running (\"localhost\"). Requirements \u00b6 Collector requires any OS where the proc-filesystem is available. If you are a developer, you are welcome to add support for other platforms. Currently, supported platforms includes most Unix/Unix-like systems: Android / Termux DragonFly BSD FreeBSD IBM AIX Linux NetBSD Plan9 Solaris (On FreeBSD and NetBSD the proc-filesystem needs to be manually mounted). Parameters \u00b6 parameter type description default mount_point string, optional path to the proc filesystem `/proc Metrics \u00b6 The Collector follows the Linux proc(5) manual to parse a static set of metrics. Unless otherwise stated, the metric has a scalar value: metric type unit description start_time counter, float64 seconds process uptime cpu_percent gauge, float64 percent CPU used since last poll memory_percent gauge, float64 percent Memory used (RSS) since last poll cpu histogram, float64 seconds CPU used since last poll ( system , user , iowait ) memory histogram, uint64 kB Memory used since last poll ( rss , vms , swap , etc) io histogram, uint64 byte count IOs performed by process: rchar , wchar , read_bytes , write_bytes - read/write IOs syscr , syscw - syscalls for IO operations net histogram, uint64 count/byte Different IO operations over network devices ctx histogram, uint64 count Number of context switched ( voluntary , involuntary ) threads counter, uint64 count Number of threads fds counter, uint64 count Number of file descriptors Additionally, the collector provides the following instance labels: label description poller name of the poller pid PID of the poller Issues \u00b6 Collector will fail on WSL because some non-critical files, in the proc-filesystem, are not present.","title":"Unix"},{"location":"configure-unix/#unix","text":"This collector polls resource usage by Harvest pollers on the local system. Collector might be extended in the future to monitor any local or remote process.","title":"Unix"},{"location":"configure-unix/#target-system","text":"The machine where Harvest is running (\"localhost\").","title":"Target System"},{"location":"configure-unix/#requirements","text":"Collector requires any OS where the proc-filesystem is available. If you are a developer, you are welcome to add support for other platforms. Currently, supported platforms includes most Unix/Unix-like systems: Android / Termux DragonFly BSD FreeBSD IBM AIX Linux NetBSD Plan9 Solaris (On FreeBSD and NetBSD the proc-filesystem needs to be manually mounted).","title":"Requirements"},{"location":"configure-unix/#parameters","text":"parameter type description default mount_point string, optional path to the proc filesystem `/proc","title":"Parameters"},{"location":"configure-unix/#metrics","text":"The Collector follows the Linux proc(5) manual to parse a static set of metrics. Unless otherwise stated, the metric has a scalar value: metric type unit description start_time counter, float64 seconds process uptime cpu_percent gauge, float64 percent CPU used since last poll memory_percent gauge, float64 percent Memory used (RSS) since last poll cpu histogram, float64 seconds CPU used since last poll ( system , user , iowait ) memory histogram, uint64 kB Memory used since last poll ( rss , vms , swap , etc) io histogram, uint64 byte count IOs performed by process: rchar , wchar , read_bytes , write_bytes - read/write IOs syscr , syscw - syscalls for IO operations net histogram, uint64 count/byte Different IO operations over network devices ctx histogram, uint64 count Number of context switched ( voluntary , involuntary ) threads counter, uint64 count Number of threads fds counter, uint64 count Number of file descriptors Additionally, the collector provides the following instance labels: label description poller name of the poller pid PID of the poller","title":"Metrics"},{"location":"configure-unix/#issues","text":"Collector will fail on WSL because some non-critical files, in the proc-filesystem, are not present.","title":"Issues"},{"location":"configure-zapi/","text":"What about REST? ZAPI will reach end of availablity in ONTAP 9.13.1 released Q2 2023. Don't worry, Harvest has you covered. Switch to Harvest's REST collectors and collect idential metrics. See REST Strategy for more details. Zapi Collector \u00b6 The Zapi collectors uses the ZAPI protocol to collect data from ONTAP systems. The collector submits data as received from the target system, and does not perform any calculations or post-processing. Since the attributes of most APIs have an irregular tree structure, sometimes a plugin will be required to collect all metrics from an API. The ZapiPerf collector is an extension of this collector, therefore they share many parameters and configuration settings. Target System \u00b6 Target system can be any cDot or 7Mode ONTAP system. Any version is supported, however the default configuration files may not completely match with older systems. Requirements \u00b6 No SDK or other requirements. It is recommended to create a read-only user for Harvest on the ONTAP system (see prepare monitored clusters for details) Metrics \u00b6 The collector collects a dynamic set of metrics. Since most ZAPIs have a tree structure, the collector converts that structure into a flat metric representation. No post-processing or calculation is performed on the collected data itself. As an example, the aggr-get-iter ZAPI provides the following partial attribute tree: aggr-attributes : - aggr-raid-attributes : - disk-count - aggr-snapshot-attributes : - files-total The Zapi collector will convert this tree into two \"flat\" metrics: aggr_raid_disk_count and aggr_snapshot_files_total . (The algorithm to generate a name for the metrics will attempt to keep it as simple as possible, but sometimes it's useful to manually set a short display name. See counters for more details. Parameters \u00b6 The parameters and configuration are similar to those of the ZapiPerf collector . Only the differences will be discussed below. Collector configuration file \u00b6 Parameters different from ZapiPerf: parameter type description default schedule required same as for ZapiPerf, but only two elements: instance and data (collector does not run a counter poll) no_max_records bool, optional don't add max-records to the ZAPI request collect_only_labels bool, optional don't look for numeric metrics, only submit labels (suppresses the ErrNoMetrics error) only_cluster_instance bool, optional don't look for instance keys and assume only instance is the cluster itself Object configuration file \u00b6 The Zapi collector does not have the parameters instance_key and override parameters. The optional parameter metric_type allows you to override the default metric type ( uint64 ). The value of this parameter should be one of the metric types supported by the matrix data-structure . ZapiPerf Collector \u00b6 ZapiPerf \u00b6 ZapiPerf collects performance metrics from ONTAP systems using the ZAPI protocol. The collector is designed to be easily extendable to collect new objects or to collect additional counters from already configured objects. This collector is an extension of the Zapi collector . The major difference between them is that ZapiPerf collects only the performance ( perf ) APIs. Additionally, ZapiPerf always calculates final values from the deltas of two subsequent polls. Metrics \u00b6 The collector collects a dynamic set of metrics. The metric values are calculated from two consecutive polls (therefore, no metrics are emitted after the first poll). The calculation algorithm depends on the property and base-counter attributes of each metric, the following properties are supported: property formula description raw x = x i no post-processing, value x is submitted as it is delta x = x i - x i-1 delta of two poll values, x i and x i-1 rate x = (x i - x i-1 ) / (t i - t i-1 ) delta divided by the interval of the two polls in seconds average x = (x i - x i-1 ) / (y i - y i-1 ) delta divided by the delta of the base counter y percent x = 100 * (x i - x i-1 ) / (y i - y i-1 ) average multiplied by 100 Parameters \u00b6 The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) ZapiPerf configuration file (default: conf/zapiperf/default.yaml ) Each object has its own configuration file (located in conf/zapiperf/cdot/ and conf/zapiperf/7mode/ for cDot and 7Mode systems respectively) Except for addr , datacenter and auth_style , all other parameters of the ZapiPerf collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level file. This allows the user to configure each objects individually, or use the same parameters for all objects. The full set of parameters are described below . Harvest configuration file \u00b6 Parameters in poller section should define (at least) the address and authentication method of the target system: parameter type description default addr string, required address (IP or FQDN) of the ONTAP system datacenter string, required name of the datacenter where the target system is located auth_style string, optional authentication method: either basic_auth or certificate_auth basic_auth ssl_cert , ssl_key string, optional full path of the SSL certificate and key pairs (when using certificate_auth ) username , password string, optional full path of the SSL certificate and key pairs (when using basic_auth ) ZapiPerf configuration file \u00b6 This configuration file (the \"template\") contains a list of objects that should be collected and the filenames of their configuration (explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. (As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well). parameter type description default use_insecure_tls bool, optional skip verifying TLS certificate of the target system false client_timeout duration (Go-syntax) how long to wait for server responses 30s batch_size int, optional max instances per API request 500 latency_io_reqd int, optional threshold of IOPs for calculating latency metrics (latencies based on very few IOPs are unreliable) 100 schedule list, required the poll frequencies of the collector/object, should include exactly these three elements in the exact same other: - counter duration (Go-syntax) poll frequency of updating the counter metadata cache (example value: 1200s = 20m ) - instance duration (Go-syntax) poll frequency of updating the instance cache (example value: 600s = 10m ) - data duration (Go-syntax) poll frequency of updating the data cache (example value: 60s = 1m ) Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system, as many counters are aggregated on-demand. Some metric values become less significant if they are calculated for very short intervals (e.g. latencies) The template should define objects in the objects section. Example: objects : SystemNode : system_node.yaml HostAdapter : hostadapter.yaml Note that for each object we only define the filename of the object configuration file. The object configuration files are located in subdirectories matching to the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches to the version of the target ONTAP system. (A mismatch is tolerated since ZapiPerf will fetch and validate counter metadata from the system.) Object configuration file \u00b6 The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string display name of the collector that will collect this object object string short name of the object query string raw object name used to issue a ZAPI request counters list list of counters to collect (see notes below) instance_key string label to use as instance key (either name or uuid ) override list of key-value pairs override counter properties that we get from ONTAP (allows circumventing ZAPI bugs) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below) counters \u00b6 This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from ONTAP and updated periodically. Some counters require a \"base-counter\" for post-processing. If the base-counter is missing, ZapiPerf will still run, but the missing data won't be exported. The display name of a counter can be changed with => (e.g., nfsv3_ops => ops ). There's one conversion Harvest does for you by default, the instance_name counter will be renamed to the value of object . Counters that are stored as labels will only be exported if they are included in the export_options section. export_options \u00b6 Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate data-point include_all_labels (bool): export all labels with each data-point (overrides previous two parameters)","title":"ZAPI"},{"location":"configure-zapi/#zapi-collector","text":"The Zapi collectors uses the ZAPI protocol to collect data from ONTAP systems. The collector submits data as received from the target system, and does not perform any calculations or post-processing. Since the attributes of most APIs have an irregular tree structure, sometimes a plugin will be required to collect all metrics from an API. The ZapiPerf collector is an extension of this collector, therefore they share many parameters and configuration settings.","title":"Zapi Collector"},{"location":"configure-zapi/#target-system","text":"Target system can be any cDot or 7Mode ONTAP system. Any version is supported, however the default configuration files may not completely match with older systems.","title":"Target System"},{"location":"configure-zapi/#requirements","text":"No SDK or other requirements. It is recommended to create a read-only user for Harvest on the ONTAP system (see prepare monitored clusters for details)","title":"Requirements"},{"location":"configure-zapi/#metrics","text":"The collector collects a dynamic set of metrics. Since most ZAPIs have a tree structure, the collector converts that structure into a flat metric representation. No post-processing or calculation is performed on the collected data itself. As an example, the aggr-get-iter ZAPI provides the following partial attribute tree: aggr-attributes : - aggr-raid-attributes : - disk-count - aggr-snapshot-attributes : - files-total The Zapi collector will convert this tree into two \"flat\" metrics: aggr_raid_disk_count and aggr_snapshot_files_total . (The algorithm to generate a name for the metrics will attempt to keep it as simple as possible, but sometimes it's useful to manually set a short display name. See counters for more details.","title":"Metrics"},{"location":"configure-zapi/#parameters","text":"The parameters and configuration are similar to those of the ZapiPerf collector . Only the differences will be discussed below.","title":"Parameters"},{"location":"configure-zapi/#collector-configuration-file","text":"Parameters different from ZapiPerf: parameter type description default schedule required same as for ZapiPerf, but only two elements: instance and data (collector does not run a counter poll) no_max_records bool, optional don't add max-records to the ZAPI request collect_only_labels bool, optional don't look for numeric metrics, only submit labels (suppresses the ErrNoMetrics error) only_cluster_instance bool, optional don't look for instance keys and assume only instance is the cluster itself","title":"Collector configuration file"},{"location":"configure-zapi/#object-configuration-file","text":"The Zapi collector does not have the parameters instance_key and override parameters. The optional parameter metric_type allows you to override the default metric type ( uint64 ). The value of this parameter should be one of the metric types supported by the matrix data-structure .","title":"Object configuration file"},{"location":"configure-zapi/#zapiperf-collector","text":"","title":"ZapiPerf Collector"},{"location":"configure-zapi/#zapiperf","text":"ZapiPerf collects performance metrics from ONTAP systems using the ZAPI protocol. The collector is designed to be easily extendable to collect new objects or to collect additional counters from already configured objects. This collector is an extension of the Zapi collector . The major difference between them is that ZapiPerf collects only the performance ( perf ) APIs. Additionally, ZapiPerf always calculates final values from the deltas of two subsequent polls.","title":"ZapiPerf"},{"location":"configure-zapi/#metrics_1","text":"The collector collects a dynamic set of metrics. The metric values are calculated from two consecutive polls (therefore, no metrics are emitted after the first poll). The calculation algorithm depends on the property and base-counter attributes of each metric, the following properties are supported: property formula description raw x = x i no post-processing, value x is submitted as it is delta x = x i - x i-1 delta of two poll values, x i and x i-1 rate x = (x i - x i-1 ) / (t i - t i-1 ) delta divided by the interval of the two polls in seconds average x = (x i - x i-1 ) / (y i - y i-1 ) delta divided by the delta of the base counter y percent x = 100 * (x i - x i-1 ) / (y i - y i-1 ) average multiplied by 100","title":"Metrics"},{"location":"configure-zapi/#parameters_1","text":"The parameters of the collector are distributed across three files: Harvest configuration file (default: harvest.yml ) ZapiPerf configuration file (default: conf/zapiperf/default.yaml ) Each object has its own configuration file (located in conf/zapiperf/cdot/ and conf/zapiperf/7mode/ for cDot and 7Mode systems respectively) Except for addr , datacenter and auth_style , all other parameters of the ZapiPerf collector can be defined in either of these three files. Parameters defined in the lower-level file, override parameters in the higher-level file. This allows the user to configure each objects individually, or use the same parameters for all objects. The full set of parameters are described below .","title":"Parameters"},{"location":"configure-zapi/#harvest-configuration-file","text":"Parameters in poller section should define (at least) the address and authentication method of the target system: parameter type description default addr string, required address (IP or FQDN) of the ONTAP system datacenter string, required name of the datacenter where the target system is located auth_style string, optional authentication method: either basic_auth or certificate_auth basic_auth ssl_cert , ssl_key string, optional full path of the SSL certificate and key pairs (when using certificate_auth ) username , password string, optional full path of the SSL certificate and key pairs (when using basic_auth )","title":"Harvest configuration file"},{"location":"configure-zapi/#zapiperf-configuration-file","text":"This configuration file (the \"template\") contains a list of objects that should be collected and the filenames of their configuration (explained in the next section). Additionally, this file contains the parameters that are applied as defaults to all objects. (As mentioned before, any of these parameters can be defined in the Harvest or object configuration files as well). parameter type description default use_insecure_tls bool, optional skip verifying TLS certificate of the target system false client_timeout duration (Go-syntax) how long to wait for server responses 30s batch_size int, optional max instances per API request 500 latency_io_reqd int, optional threshold of IOPs for calculating latency metrics (latencies based on very few IOPs are unreliable) 100 schedule list, required the poll frequencies of the collector/object, should include exactly these three elements in the exact same other: - counter duration (Go-syntax) poll frequency of updating the counter metadata cache (example value: 1200s = 20m ) - instance duration (Go-syntax) poll frequency of updating the instance cache (example value: 600s = 10m ) - data duration (Go-syntax) poll frequency of updating the data cache (example value: 60s = 1m ) Note Harvest allows defining poll intervals on sub-second level (e.g. 1ms ), however keep in mind the following: API response of an ONTAP system can take several seconds, so the collector is likely to enter failed state if the poll interval is less than client_timeout . Small poll intervals will create significant workload on the ONTAP system, as many counters are aggregated on-demand. Some metric values become less significant if they are calculated for very short intervals (e.g. latencies) The template should define objects in the objects section. Example: objects : SystemNode : system_node.yaml HostAdapter : hostadapter.yaml Note that for each object we only define the filename of the object configuration file. The object configuration files are located in subdirectories matching to the ONTAP version that was used to create these files. It is possible to have multiple version-subdirectories for multiple ONTAP versions. At runtime, the collector will select the object configuration file that closest matches to the version of the target ONTAP system. (A mismatch is tolerated since ZapiPerf will fetch and validate counter metadata from the system.)","title":"ZapiPerf configuration file"},{"location":"configure-zapi/#object-configuration-file_1","text":"The Object configuration file (\"subtemplate\") should contain the following parameters: parameter type description default name string display name of the collector that will collect this object object string short name of the object query string raw object name used to issue a ZAPI request counters list list of counters to collect (see notes below) instance_key string label to use as instance key (either name or uuid ) override list of key-value pairs override counter properties that we get from ONTAP (allows circumventing ZAPI bugs) plugins list plugins and their parameters to run on the collected data export_options list parameters to pass to exporters (see notes below)","title":"Object configuration file"},{"location":"configure-zapi/#counters","text":"This section defines the list of counters that will be collected. These counters can be labels, numeric metrics or histograms. The exact property of each counter is fetched from ONTAP and updated periodically. Some counters require a \"base-counter\" for post-processing. If the base-counter is missing, ZapiPerf will still run, but the missing data won't be exported. The display name of a counter can be changed with => (e.g., nfsv3_ops => ops ). There's one conversion Harvest does for you by default, the instance_name counter will be renamed to the value of object . Counters that are stored as labels will only be exported if they are included in the export_options section.","title":"counters"},{"location":"configure-zapi/#export_options","text":"Parameters in this section tell the exporters how to handle the collected data. The set of parameters varies by exporter. For Prometheus and InfluxDB exporters, the following parameters can be defined: instances_keys (list): display names of labels to export with each data-point instance_labels (list): display names of labels to export as a separate data-point include_all_labels (bool): export all labels with each data-point (overrides previous two parameters)","title":"export_options"},{"location":"dashboards/","text":"Harvest can be used to import dashboards to Grafana. The bin/harvest grafana utility requires the address (hostname or IP), port of the Grafana server, and a Grafana API token. The port can be omitted if Grafana is configured to redirect the URL. Use the -d flag to point to the directory that contains the dashboards. Grafana API token \u00b6 The utility tool asks for an API token which can be generated from the Grafana web-gui. Click on Configuration in the left menu bar (1), click on API Keys (2) and click on the New API Key button. Choose a Key name (3), choose Editor for role (4) and click on add (5). Copy the generated key and paste it in your terminal or add the token to the Tools section of your configuration file. (see below) For example, let's say your Grafana server is on http://my.grafana.server:3000 and you want to import the Prometheus-based dashboards from the grafana directory. You would run this: $ bin/harvest grafana import --addr my.grafana.server:3000 Similarly, to export: $ bin/harvest grafana export --addr my.grafana.server:3000 --directory /path/to/export/directory --serverfolder grafanaFolderName By default, the dashboards are connected to the Prometheus datasource defined in Grafana. If your datasource has a different name, use the --datasource flag during import/export. CLI \u00b6 The bin/harvest grafana tool includes CLI help when passing the --help command line argument flag like so: bin/harvest grafana import --help The labels argument requires more explanation. Labels \u00b6 The grafana import --labels argument goes hand-in-hand with a poller's Labels section described here . Labels are used to add additional key-value pairs to a poller's metrics. When you run bin/harvest grafana import , you may optionally pass a set of labels like so: bin/harvest grafana import --labels org --labels dept This will cause Harvest to do the following for each dashboard: 1. Parse each dashboard and add a new variable for each label passed on the command line 2. Modify each dashboard variable to use the new label variable(s) in a chained query. Here's an example: bin/harvest grafana import --labels \"org,dept\" This will add the Org and Dept variables, as shown below, and modify the existing variables as shown. Results in","title":"Dashboards"},{"location":"dashboards/#grafana-api-token","text":"The utility tool asks for an API token which can be generated from the Grafana web-gui. Click on Configuration in the left menu bar (1), click on API Keys (2) and click on the New API Key button. Choose a Key name (3), choose Editor for role (4) and click on add (5). Copy the generated key and paste it in your terminal or add the token to the Tools section of your configuration file. (see below) For example, let's say your Grafana server is on http://my.grafana.server:3000 and you want to import the Prometheus-based dashboards from the grafana directory. You would run this: $ bin/harvest grafana import --addr my.grafana.server:3000 Similarly, to export: $ bin/harvest grafana export --addr my.grafana.server:3000 --directory /path/to/export/directory --serverfolder grafanaFolderName By default, the dashboards are connected to the Prometheus datasource defined in Grafana. If your datasource has a different name, use the --datasource flag during import/export.","title":"Grafana API token"},{"location":"dashboards/#cli","text":"The bin/harvest grafana tool includes CLI help when passing the --help command line argument flag like so: bin/harvest grafana import --help The labels argument requires more explanation.","title":"CLI"},{"location":"dashboards/#labels","text":"The grafana import --labels argument goes hand-in-hand with a poller's Labels section described here . Labels are used to add additional key-value pairs to a poller's metrics. When you run bin/harvest grafana import , you may optionally pass a set of labels like so: bin/harvest grafana import --labels org --labels dept This will cause Harvest to do the following for each dashboard: 1. Parse each dashboard and add a new variable for each label passed on the command line 2. Modify each dashboard variable to use the new label variable(s) in a chained query. Here's an example: bin/harvest grafana import --labels \"org,dept\" This will add the Org and Dept variables, as shown below, and modify the existing variables as shown. Results in","title":"Labels"},{"location":"influxdb-exporter/","text":"InfluxDB Exporter \u00b6 InfluxDB Install The information below describes how to setup Harvest's InfluxDB exporter. If you need help installing or setting up InfluxDB, check out their documention . Overview \u00b6 The InfluxDB Exporter will format metrics into the InfluxDB's line protocol and write it into a bucket. The Exporter is compatible with InfluxDB v2.0. For explanation about bucket , org and precision , see InfluxDB API documentation . If you are monitoring both CDOT and 7mode clusters, it is strongly recommended to use two different buckets. Parameters \u00b6 Overview of all parameters is provided below. Only one of url or addr should be provided and at least one of them is required. If addr is specified, it should be a valid TCP address or hostname of the InfluxDB server and should not include the scheme. When using addr , the bucket , org , and token key/values are required. addr only works with HTTP. If you need to use HTTPS, you should use url instead. If url is specified, you must add all arguments to the url. Harvest will do no additional processing and use exactly what you specify. ( e.g. url: https://influxdb.example.com:8086/write?db=netapp&u=user&p=pass&precision=2 . When using url , the bucket , org , port , and precision fields will be ignored. parameter type description default url string URL of the database, format: SCHEME://HOST[:PORT] addr string address of the database, format: HOST (HTTP only) port int, optional port of the database 8086 bucket string, required with addr InfluxDB bucket to write org string, required with addr InfluxDB organization name precision string, required with addr Preferred timestamp precision in seconds 2 client_timeout int, optional client timeout in seconds 5 token string token for authentication Example \u00b6 snippet from harvest.yml using addr : (supports HTTP only)) Exporters : my_influx : exporter : InfluxDB addr : localhost bucket : harvest org : harvest token : ZTTrt%24@#WNFM2VZTTNNT25wZWUdtUmhBZEdVUmd3dl@# snippet from harvest.yml using url : (supports both HTTP/HTTPS)) Exporters : influx2 : exporter : InfluxDB url : https://localhost:8086/api/v2/write?org=harvest&bucket=harvest&precision=s token : my-token== Notice: InfluxDB stores a token in ~/.influxdbv2/configs , but you can also retrieve it from the UI (usually serving on localhost:8086 ): click on \"Data\" on the left task bar, then on \"Tokens\".","title":"InfluxDB"},{"location":"influxdb-exporter/#influxdb-exporter","text":"InfluxDB Install The information below describes how to setup Harvest's InfluxDB exporter. If you need help installing or setting up InfluxDB, check out their documention .","title":"InfluxDB Exporter"},{"location":"influxdb-exporter/#overview","text":"The InfluxDB Exporter will format metrics into the InfluxDB's line protocol and write it into a bucket. The Exporter is compatible with InfluxDB v2.0. For explanation about bucket , org and precision , see InfluxDB API documentation . If you are monitoring both CDOT and 7mode clusters, it is strongly recommended to use two different buckets.","title":"Overview"},{"location":"influxdb-exporter/#parameters","text":"Overview of all parameters is provided below. Only one of url or addr should be provided and at least one of them is required. If addr is specified, it should be a valid TCP address or hostname of the InfluxDB server and should not include the scheme. When using addr , the bucket , org , and token key/values are required. addr only works with HTTP. If you need to use HTTPS, you should use url instead. If url is specified, you must add all arguments to the url. Harvest will do no additional processing and use exactly what you specify. ( e.g. url: https://influxdb.example.com:8086/write?db=netapp&u=user&p=pass&precision=2 . When using url , the bucket , org , port , and precision fields will be ignored. parameter type description default url string URL of the database, format: SCHEME://HOST[:PORT] addr string address of the database, format: HOST (HTTP only) port int, optional port of the database 8086 bucket string, required with addr InfluxDB bucket to write org string, required with addr InfluxDB organization name precision string, required with addr Preferred timestamp precision in seconds 2 client_timeout int, optional client timeout in seconds 5 token string token for authentication","title":"Parameters"},{"location":"influxdb-exporter/#example","text":"snippet from harvest.yml using addr : (supports HTTP only)) Exporters : my_influx : exporter : InfluxDB addr : localhost bucket : harvest org : harvest token : ZTTrt%24@#WNFM2VZTTNNT25wZWUdtUmhBZEdVUmd3dl@# snippet from harvest.yml using url : (supports both HTTP/HTTPS)) Exporters : influx2 : exporter : InfluxDB url : https://localhost:8086/api/v2/write?org=harvest&bucket=harvest&precision=s token : my-token== Notice: InfluxDB stores a token in ~/.influxdbv2/configs , but you can also retrieve it from the UI (usually serving on localhost:8086 ): click on \"Data\" on the left task bar, then on \"Tokens\".","title":"Example"},{"location":"license/","text":"Harvest's License","title":"License"},{"location":"manage-harvest/","text":"Coming Soon","title":"Manage Harvest Pollers"},{"location":"monitor-harvest/","text":"Harvest Metadata \u00b6 Harvest publishes metadata metrics about the key components of Harvest. Many of these metrics are used in the Harvest Metadata dashboard. If you want to understand more about these metrics, read on! Metrics are published for: collectors pollers clusters being monitored exporters Here's a high-level summary of the metadata metrics Harvest publishes with details below. Metric Description Units metadata_collector_api_time amount of time to collect data from monitored cluster object microseconds metadata_collector_instances number of objects collected from monitored cluster scalar metadata_collector_metrics number of counters collected from monitored cluster scalar metadata_collector_parse_time amount of time to parse XML, JSON, etc. for cluster object microseconds metadata_collector_plugin_time amount of time for all plugins to post-process metrics microseconds metadata_collector_poll_time amount of time it took for the poll to finish microseconds metadata_collector_task_time amount of time it took for each collector's subtasks to complete microseconds metadata_component_count number of metrics collected for each object scalar metadata_component_status status of the collector - 0 means running, 1 means standby, 2 means failed enum metadata_exporter_count number of metrics and labels exported scalar metadata_exporter_time amount of time it took to render, export, and serve exported data microseconds metadata_target_goroutines number of goroutines that exist within the poller scalar metadata_target_status status of the system being monitored. 0 means reachable, 1 means unreachable enum metadata_collector_calc_time amount of time it took to compute metrics between two successive polls, specifically using properties like raw, delta, rate, average, and percent. This metric is available for ZapiPerf/RestPerf collectors. microseconds metadata_collector_skips number of metrics that were not calculated between two successive polls. This metric is available for ZapiPerf/RestPerf collectors. scalar Collector Metadata \u00b6 A poller publishes the metadata metrics for each collector and exporter associated with it. Let's say we start a poller with the Zapi collector and the out-of-the-box default.yaml exporting metrics to Prometheus. That means you will be monitoring 22 different objects (uncommented lines in default.yaml as of 23.02). When we start this poller, we expect it to export 23 metadata_component_status metrics. One for each of the 22 objects, plus one for the Prometheus exporter. The following curl confirms there are 23 metadata_component_status metrics reported. curl -s http://localhost:12990/metrics | grep -v \"#\" | grep metadata_component_status | wc -l 23 These metrics also tell us which collectors are in an standby or failed state. For example, filtering on components not in the running state shows the following since this cluster doesn't have any ClusterPeers , SecurityAuditDestinations , or SnapMirrors . The reason is listed as no instances and the metric value is 1 which means standby. curl -s http://localhost:12990/metrics | grep -v \"#\" | grep metadata_component_status | grep -Evo \"running\" metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"ClusterPeer\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"SecurityAuditDestination\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"SnapMirror\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 The log files for the poller show a similar story. The poller starts with 22 collectors, but drops to 19 after three of the collectors go to standby because there are no instances to collect. 2023 -04-17T13:14:18-04:00 INF ./poller.go:539 > updated status, up collectors: 22 ( of 22 ) , up exporters: 1 ( of 1 ) Poller = u2 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:SecurityAuditDestination task = data 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:ClusterPeer task = data 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:SnapMirror task = data 2023 -04-17T13:15:18-04:00 INF ./poller.go:539 > updated status, up collectors: 19 ( of 22 ) , up exporters: 1 ( of 1 ) Poller = u2","title":"Monitor Harvest"},{"location":"monitor-harvest/#harvest-metadata","text":"Harvest publishes metadata metrics about the key components of Harvest. Many of these metrics are used in the Harvest Metadata dashboard. If you want to understand more about these metrics, read on! Metrics are published for: collectors pollers clusters being monitored exporters Here's a high-level summary of the metadata metrics Harvest publishes with details below. Metric Description Units metadata_collector_api_time amount of time to collect data from monitored cluster object microseconds metadata_collector_instances number of objects collected from monitored cluster scalar metadata_collector_metrics number of counters collected from monitored cluster scalar metadata_collector_parse_time amount of time to parse XML, JSON, etc. for cluster object microseconds metadata_collector_plugin_time amount of time for all plugins to post-process metrics microseconds metadata_collector_poll_time amount of time it took for the poll to finish microseconds metadata_collector_task_time amount of time it took for each collector's subtasks to complete microseconds metadata_component_count number of metrics collected for each object scalar metadata_component_status status of the collector - 0 means running, 1 means standby, 2 means failed enum metadata_exporter_count number of metrics and labels exported scalar metadata_exporter_time amount of time it took to render, export, and serve exported data microseconds metadata_target_goroutines number of goroutines that exist within the poller scalar metadata_target_status status of the system being monitored. 0 means reachable, 1 means unreachable enum metadata_collector_calc_time amount of time it took to compute metrics between two successive polls, specifically using properties like raw, delta, rate, average, and percent. This metric is available for ZapiPerf/RestPerf collectors. microseconds metadata_collector_skips number of metrics that were not calculated between two successive polls. This metric is available for ZapiPerf/RestPerf collectors. scalar","title":"Harvest Metadata"},{"location":"monitor-harvest/#collector-metadata","text":"A poller publishes the metadata metrics for each collector and exporter associated with it. Let's say we start a poller with the Zapi collector and the out-of-the-box default.yaml exporting metrics to Prometheus. That means you will be monitoring 22 different objects (uncommented lines in default.yaml as of 23.02). When we start this poller, we expect it to export 23 metadata_component_status metrics. One for each of the 22 objects, plus one for the Prometheus exporter. The following curl confirms there are 23 metadata_component_status metrics reported. curl -s http://localhost:12990/metrics | grep -v \"#\" | grep metadata_component_status | wc -l 23 These metrics also tell us which collectors are in an standby or failed state. For example, filtering on components not in the running state shows the following since this cluster doesn't have any ClusterPeers , SecurityAuditDestinations , or SnapMirrors . The reason is listed as no instances and the metric value is 1 which means standby. curl -s http://localhost:12990/metrics | grep -v \"#\" | grep metadata_component_status | grep -Evo \"running\" metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"ClusterPeer\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"SecurityAuditDestination\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 metadata_component_status { name = \"Zapi\" , reason = \"no instances\" ,target = \"SnapMirror\" ,type = \"collector\" ,version = \"23.04.1417\" } 1 The log files for the poller show a similar story. The poller starts with 22 collectors, but drops to 19 after three of the collectors go to standby because there are no instances to collect. 2023 -04-17T13:14:18-04:00 INF ./poller.go:539 > updated status, up collectors: 22 ( of 22 ) , up exporters: 1 ( of 1 ) Poller = u2 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:SecurityAuditDestination task = data 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:ClusterPeer task = data 2023 -04-17T13:14:18-04:00 INF collector/collector.go:342 > no instances, entering standby Poller = u2 collector = Zapi:SnapMirror task = data 2023 -04-17T13:15:18-04:00 INF ./poller.go:539 > updated status, up collectors: 19 ( of 22 ) , up exporters: 1 ( of 1 ) Poller = u2","title":"Collector Metadata"},{"location":"ontap-metrics/","text":"This document describes how Harvest metrics relate to their relevant ONTAP ZAPI and REST mappings, including: Details about which Harvest metrics each dashboard uses. These can be generated on demand by running bin/harvest grafana metrics . See #1577 for details. More information about ONTAP REST performance counters can be found here . Creation Date : 2023-May-03 ONTAP Version: 9.12.1 Understanding the structure \u00b6 Below is an annotated example of how to interpret the structure of each of the metrics . disk_io_queued Name of the metric exported by Harvest Number of I/Os queued to the disk but not yet issued Description of the ONTAP metric API will be one of REST or ZAPI depending on which collector is used to collect the metric Endpoint name of the REST or ZAPI API used to collect this metric Metric name of the ONTAP metric Template path of the template that collects the metric Performance related metrics also include: Unit the unit of the metric Type describes how to calculate a cooked metric from two consecutive ONTAP raw metrics Base some counters require a base counter for post-processing. When required, this property lists the base counter API Endpoint Metric Template REST api/cluster/counter/tables/disk:constituent io_queued Unit: none Type: average Base: base_for_disk_busy conf/restperf/9.12.0/disk.yaml ZAPI perf-object-get-instances disk:constituent io_queued Unit: none Type: average Base: base_for_disk_busy conf/zapiperf/cdot/9.8.0/disk.yaml Metrics \u00b6 aggr_efficiency_savings \u00b6 Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency.savings conf/rest/9.12.0/aggr.yaml aggr_efficiency_savings_wo_snapshots \u00b6 Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots.savings conf/rest/9.12.0/aggr.yaml aggr_efficiency_savings_wo_snapshots_flexclones \u00b6 Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots_flexclones.savings conf/rest/9.12.0/aggr.yaml aggr_hybrid_cache_size_total \u00b6 Total usable space in bytes of SSD cache. Only provided when hybrid_cache.enabled is 'true'. API Endpoint Metric Template REST api/storage/aggregates block_storage.hybrid_cache.size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.hybrid-cache-size-total conf/zapi/cdot/9.8.0/aggr.yaml aggr_hybrid_disk_count \u00b6 Number of disks used in the cache tier of the aggregate. Only provided when hybrid_cache.enabled is 'true'. API Endpoint Metric Template REST api/storage/aggregates block_storage.hybrid_cache.disk_count conf/rest/9.12.0/aggr.yaml aggr_inode_files_private_used \u00b6 Number of system metadata files used. If the referenced file system is restricted or offline, a value of 0 is returned.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_private_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-private-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_files_total \u00b6 Maximum number of user-visible files that this referenced file system can currently hold. If the referenced file system is restricted or offline, a value of 0 is returned. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-total conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_files_used \u00b6 Number of user-visible files used in the referenced file system. If the referenced file system is restricted or offline, a value of 0 is returned. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_inodefile_private_capacity \u00b6 Number of files that can currently be stored on disk for system metadata files. This number will dynamically increase as more system files are created.This is an advanced property; there is an added computationl cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.file_private_capacity conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.inodefile-private-capacity conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_inodefile_public_capacity \u00b6 Number of files that can currently be stored on disk for user-visible files. This number will dynamically increase as more user-visible files are created.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.file_public_capacity conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.inodefile-public-capacity conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_maxfiles_available \u00b6 The count of the maximum number of user-visible files currently allowable on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-available conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_maxfiles_possible \u00b6 The largest value to which the maxfiles-available parameter can be increased by reconfiguration, on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_possible conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-possible conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_maxfiles_used \u00b6 The number of user-visible files currently in use on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_inode_used_percent \u00b6 The percentage of disk space currently in use based on user-visible file count on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.percent-inode-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml aggr_logical_used_wo_snapshots \u00b6 Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-logical-used-wo-snapshots conf/zapi/cdot/9.9.0/aggr_efficiency.yaml aggr_logical_used_wo_snapshots_flexclones \u00b6 Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots_flexclones.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-logical-used-wo-snapshots-flexclones conf/zapi/cdot/9.9.0/aggr_efficiency.yaml aggr_physical_used_wo_snapshots \u00b6 Total Data Reduction Physical Used Without Snapshots API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-physical-used-wo-snapshots conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_physical_used_wo_snapshots_flexclones \u00b6 Total Data Reduction Physical Used without snapshots and flexclones API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-physical-used-wo-snapshots-flexclones conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_power \u00b6 Power consumed by aggregate in Watts. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml aggr_primary_disk_count \u00b6 Number of disks used in the aggregate. This includes parity disks, but excludes disks in the hybrid cache. API Endpoint Metric Template REST api/storage/aggregates block_storage.primary.disk_count conf/rest/9.12.0/aggr.yaml aggr_raid_disk_count \u00b6 Number of disks in the aggregate. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.disk-count conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_raid_plex_count \u00b6 Number of plexes in the aggregate API Endpoint Metric Template REST api/storage/aggregates block_storage.plexes.# conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.plex-count conf/zapi/cdot/9.8.0/aggr.yaml aggr_raid_size \u00b6 Option to specify the maximum number of disks that can be included in a RAID group. API Endpoint Metric Template REST api/storage/aggregates block_storage.primary.raid_size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.raid-size conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_files_total \u00b6 Total files allowed in Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.files_total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.files-total conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_files_used \u00b6 Total files created in Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.files-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_inode_used_percent \u00b6 The percentage of disk space currently in use based on user-visible file (inode) count on the referenced file system. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.percent-inode-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_maxfiles_available \u00b6 Maximum files available for Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.max_files_available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-available conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_maxfiles_possible \u00b6 The largest value to which the maxfiles-available parameter can be increased by reconfiguration, on the referenced file system. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-possible conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_snapshot_maxfiles_used \u00b6 Files in use by Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.max_files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_reserve_percent \u00b6 Percentage of space reserved for Snapshot copies API Endpoint Metric Template REST api/storage/aggregates space.snapshot.reserve_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.snapshot-reserve-percent conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_size_available \u00b6 Available space for Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-available conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_size_total \u00b6 Total space for Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-total conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_size_used \u00b6 Space used by Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_snapshot_used_percent \u00b6 Percentage of disk space used by Snapshot copies API Endpoint Metric Template REST api/storage/aggregates space.snapshot.used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.percent-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_available \u00b6 Space available in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-available conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_capacity_tier_used \u00b6 Used space in bytes in the cloud store. Only applicable for aggregates with a cloud store tier. API Endpoint Metric Template REST api/storage/aggregates space.cloud_storage.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.capacity-tier-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_data_compacted_count \u00b6 Amount of compacted data in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compacted_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compacted-count conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_data_compaction_saved \u00b6 Space saved in bytes by compacting the data. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compaction_space_saved conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compaction-space-saved conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_data_compaction_saved_percent \u00b6 Percentage saved by compacting the data. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compaction_space_saved_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compaction-space-saved-percent conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_performance_tier_inactive_user_data \u00b6 The size that is physically used in the block storage and has a cold temperature, in bytes. This property is only supported if the aggregate is either attached to a cloud store or can be attached to a cloud store.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either block_storage.inactive_user_data or **. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.inactive_user_data conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.performance-tier-inactive-user-data conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_performance_tier_inactive_user_data_percent \u00b6 The percentage of inactive user data in the block storage. This property is only supported if the aggregate is either attached to a cloud store or can be attached to a cloud store.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either block_storage.inactive_user_data_percent or **. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.inactive_user_data_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.performance-tier-inactive-user-data-percent conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_physical_used \u00b6 Total physical used size of an aggregate in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.physical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.physical-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_physical_used_percent \u00b6 Physical used percentage. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.physical_used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.physical-used-percent conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_reserved \u00b6 The total disk space in bytes that is reserved on the referenced file system. The reserved space is already counted in the used space, so this element can be used to see what portion of the used space represents space reserved for future use. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.total-reserved-space conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_sis_saved \u00b6 Amount of space saved in bytes by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_space_saved conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-space-saved conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_sis_saved_percent \u00b6 Percentage of space saved by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_space_saved_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-space-saved-percent conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_sis_shared_count \u00b6 Amount of shared bytes counted by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_shared_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-shared-count conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_total \u00b6 Total usable space in bytes, not including WAFL reserve and aggregate Snapshot copy reserve. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-total conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_used \u00b6 Space used or reserved in bytes. Includes volume guarantees and aggregate metadata. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-used conf/zapi/cdot/9.8.0/aggr.yaml aggr_space_used_percent \u00b6 The percentage of disk space currently in use on the referenced file system API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.percent-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_total_logical_used \u00b6 Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-logical-used conf/zapi/cdot/9.9.0/aggr_efficiency.yaml aggr_total_physical_used \u00b6 Total Physical Used API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-physical-used conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml aggr_volume_count_flexvol \u00b6 Number of flexvol volumes in the aggregate. API Endpoint Metric Template REST api/storage/aggregates volume_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-volume-count-attributes.flexvol-count conf/zapi/cdot/9.8.0/aggr.yaml cifs_session_connection_count \u00b6 A counter used to track requests that are sent to the volumes to the node. API Endpoint Metric Template REST api/protocols/cifs/sessions connection_count conf/rest/9.8.0/cifs_session.yaml ZAPI cifs-session-get-iter cifs-session.connection-count conf/zapi/cdot/9.8.0/cifs_session.yaml cloud_target_used \u00b6 The amount of cloud space used by all the aggregates attached to the target, in bytes. This field is only populated for FabricPool targets. The value is recalculated once every 5 minutes. API Endpoint Metric Template REST api/cloud/targets used conf/rest/9.12.0/cloud_target.yaml cluster_new_status \u00b6 It is an indicator of the overall health status of the cluster, with a value of 1 indicating a healthy status and a value of 0 indicating an unhealthy status. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/subsystem.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/subsystem.yaml cluster_subsystem_outstanding_alerts \u00b6 Number of outstanding alerts API Endpoint Metric Template REST api/private/cli/system/health/subsystem outstanding_alert_count conf/rest/9.12.0/subsystem.yaml ZAPI diagnosis-subsystem-config-get-iter diagnosis-subsystem-config-info.outstanding-alert-count conf/zapi/cdot/9.8.0/subsystem.yaml cluster_subsystem_suppressed_alerts \u00b6 Number of suppressed alerts API Endpoint Metric Template REST api/private/cli/system/health/subsystem suppressed_alert_count conf/rest/9.12.0/subsystem.yaml ZAPI diagnosis-subsystem-config-get-iter diagnosis-subsystem-config-info.suppressed-alert-count conf/zapi/cdot/9.8.0/subsystem.yaml copy_manager_bce_copy_count_curr \u00b6 Current number of copy requests being processed by the Block Copy Engine. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager block_copy_engine_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager bce_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml copy_manager_kb_copied \u00b6 Sum of kilo-bytes copied. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager KB_copied Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager KB_copied Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml copy_manager_ocs_copy_count_curr \u00b6 Current number of copy requests being processed by the ONTAP copy subsystem. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager ontap_copy_subsystem_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager ocs_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml copy_manager_sce_copy_count_curr \u00b6 Current number of copy requests being processed by the System Continuous Engineering. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager system_continuous_engineering_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager sce_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml copy_manager_spince_copy_count_curr \u00b6 Current number of copy requests being processed by the SpinCE. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager spince_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager spince_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml disk_bytes_per_sector \u00b6 Bytes per sector. API Endpoint Metric Template REST api/storage/disks bytes_per_sector conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-inventory-info.bytes-per-sector conf/zapi/cdot/9.8.0/disk.yaml disk_power_on_hours \u00b6 Hours powered on. API Endpoint Metric Template REST api/storage/disks stats.power_on_hours conf/rest/9.12.0/disk.yaml disk_sectors \u00b6 Number of sectors on the disk. API Endpoint Metric Template REST api/storage/disks sector_count conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-inventory-info.capacity-sectors conf/zapi/cdot/9.8.0/disk.yaml disk_stats_average_latency \u00b6 Average I/O latency across all active paths, in milliseconds. API Endpoint Metric Template REST api/storage/disks stats.average_latency conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.average-latency conf/zapi/cdot/9.8.0/disk.yaml disk_stats_io_kbps \u00b6 Total Disk Throughput in KBPS Across All Active Paths API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.disk-io-kbps conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk disk_io_kbps_total conf/rest/9.12.0/disk.yaml disk_stats_sectors_read \u00b6 Number of Sectors Read API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.sectors-read conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk sectors_read conf/rest/9.12.0/disk.yaml disk_stats_sectors_written \u00b6 Number of Sectors Written API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.sectors-written conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk sectors_written conf/rest/9.12.0/disk.yaml disk_uptime \u00b6 Number of seconds the drive has been powered on API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.power-on-time-interval conf/zapi/cdot/9.8.0/disk.yaml REST NA Harvest generated conf/rest/9.12.0/disk.yaml disk_usable_size \u00b6 Usable size of each disk, in bytes. API Endpoint Metric Template REST api/storage/disks usable_size conf/rest/9.12.0/disk.yaml environment_sensor_average_ambient_temperature \u00b6 Average temperature of all ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_average_fan_speed \u00b6 Average fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_average_temperature \u00b6 Average temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_max_fan_speed \u00b6 Maximum fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_max_temperature \u00b6 Maximum temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_min_ambient_temperature \u00b6 Minimum temperature of all ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_min_fan_speed \u00b6 Minimum fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_min_temperature \u00b6 Minimum temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_power \u00b6 Power consumed by a node in Watts. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml environment_sensor_threshold_value \u00b6 Provides the sensor reading. API Endpoint Metric Template REST api/cluster/sensors value conf/rest/9.12.0/sensor.yaml ZAPI environment-sensors-get-iter environment-sensors-info.threshold-sensor-value conf/zapi/cdot/9.8.0/sensor.yaml external_service_op_num_not_found_responses \u00b6 Number of 'Not Found' responses for calls to this operation. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_not_found_responses Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_num_request_failures \u00b6 A cumulative count of all request failures. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_request_failures Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_num_requests_sent \u00b6 Number of requests sent to this service. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_requests_sent Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_num_responses_received \u00b6 Number of responses received from the server (does not include timeouts). API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_responses_received Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_num_successful_responses \u00b6 Number of successful responses to this operation. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_successful_responses Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_num_timeouts \u00b6 Number of times requests to the server for this operation timed out, meaning no response was recevied in a given time period. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_timeouts Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_request_latency \u00b6 Average latency of requests for operations of this type on this server. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op request_latency Unit: microsec Type: average Base: num_requests_sent conf/zapiperf/cdot/9.8.0/external_service_operation.yaml external_service_op_request_latency_hist \u00b6 This histogram holds the latency values for requests of this operation to the specified server. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op request_latency_hist Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml fabricpool_average_latency \u00b6 Note This counter is deprecated and will be removed in a future release. Average latencies executed during various phases of command execution. The execution-start latency represents the average time taken to start executing a operation. The request-prepare latency represent the average time taken to prepare the commplete request that needs to be sent to the server. The send latency represents the average time taken to send requests to the server. The execution-start-to-send-complete represents the average time taken to send a operation out since its execution started. The execution-start-to-first-byte-received represent the average time taken to to receive the first byte of a response since the command's request execution started. These counters can be used to identify performance bottlenecks within the object store client module. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op average_latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml fabricpool_cloud_bin_op_latency_average \u00b6 Cloud bin operation latency average in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_comp_aggr_vol_bin cloud_bin_op_latency_average Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_comp_aggr_vol_bin.yaml ZAPI perf-object-get-instances wafl_comp_aggr_vol_bin cloud_bin_op_latency_average Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_comp_aggr_vol_bin.yaml fabricpool_cloud_bin_operation \u00b6 Cloud bin operation counters. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_comp_aggr_vol_bin cloud_bin_op Unit: none Type: delta Base: conf/restperf/9.12.0/wafl_comp_aggr_vol_bin.yaml ZAPI perf-object-get-instances wafl_comp_aggr_vol_bin cloud_bin_operation Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl_comp_aggr_vol_bin.yaml fabricpool_get_throughput_bytes \u00b6 Note This counter is deprecated and will be removed in a future release. Counter that indicates the throughput for GET command in bytes per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op get_throughput_bytes Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml fabricpool_put_throughput_bytes \u00b6 Note This counter is deprecated and will be removed in a future release. Counter that indicates the throughput for PUT command in bytes per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op put_throughput_bytes Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml fabricpool_stats \u00b6 Note This counter is deprecated and will be removed in a future release. Counter that indicates the number of object store operations sent, and their success and failure counts. The objstore_client_op_name array indicate the operation name such as PUT, GET, etc. The objstore_client_op_stats_name array contain the total number of operations, their success and failure counter for each operation. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op stats Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml fabricpool_throughput_ops \u00b6 Counter that indicates the throughput for commands in ops per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op throughput_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml fcp_avg_other_latency \u00b6 Average latency for operations other than read and write API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_avg_read_latency \u00b6 Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_avg_write_latency \u00b6 Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_discarded_frames_count \u00b6 Number of discarded frames. API Endpoint Metric Template REST api/cluster/counter/tables/fcp discarded_frames_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port discarded_frames_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_int_count \u00b6 Number of interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_invalid_crc \u00b6 Number of invalid cyclic redundancy checks (CRC count) API Endpoint Metric Template REST api/cluster/counter/tables/fcp invalid.crc Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port invalid_crc Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_invalid_transmission_word \u00b6 Number of invalid transmission words API Endpoint Metric Template REST api/cluster/counter/tables/fcp invalid.transmission_word Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port invalid_transmission_word Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_isr_count \u00b6 Number of interrupt responses API Endpoint Metric Template REST api/cluster/counter/tables/fcp isr.count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port isr_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_lif_avg_latency \u00b6 Average latency for FCP operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_avg_other_latency \u00b6 Average latency for operations other than read and write API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_avg_read_latency \u00b6 Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_avg_write_latency \u00b6 Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_other_ops \u00b6 Number of operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_read_data \u00b6 Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_read_ops \u00b6 Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_total_ops \u00b6 Total number of operations. API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_write_data \u00b6 Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_lif_write_ops \u00b6 Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml fcp_link_down \u00b6 Number of times the Fibre Channel link was lost API Endpoint Metric Template REST api/cluster/counter/tables/fcp link.down Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port link_down Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_link_failure \u00b6 Number of link failures API Endpoint Metric Template REST api/cluster/counter/tables/fcp link_failure Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port link_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_loss_of_signal \u00b6 Number of times this port lost signal API Endpoint Metric Template REST api/cluster/counter/tables/fcp loss_of_signal Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port loss_of_signal Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_loss_of_sync \u00b6 Number of times this port lost sync API Endpoint Metric Template REST api/cluster/counter/tables/fcp loss_of_sync Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port loss_of_sync Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_nvmf_avg_other_latency \u00b6 Average latency for operations other than read and write (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_other_latency Unit: microsec Type: average Base: nvmf.other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_other_latency Unit: microsec Type: average Base: nvmf_other_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_avg_read_latency \u00b6 Average latency for read operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_read_latency Unit: microsec Type: average Base: nvmf.read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_read_latency Unit: microsec Type: average Base: nvmf_read_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_avg_remote_other_latency \u00b6 Average latency for remote operations other than read and write (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_other_latency Unit: microsec Type: average Base: nvmf_remote.other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_other_latency Unit: microsec Type: average Base: nvmf_remote_other_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_avg_remote_read_latency \u00b6 Average latency for remote read operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_read_latency Unit: microsec Type: average Base: nvmf_remote.read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_read_latency Unit: microsec Type: average Base: nvmf_remote_read_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_avg_remote_write_latency \u00b6 Average latency for remote write operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_write_latency Unit: microsec Type: average Base: nvmf_remote.write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_write_latency Unit: microsec Type: average Base: nvmf_remote_write_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_avg_write_latency \u00b6 Average latency for write operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_write_latency Unit: microsec Type: average Base: nvmf.write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_write_latency Unit: microsec Type: average Base: nvmf_write_ops conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_caw_data \u00b6 Amount of CAW data sent to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.caw_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_caw_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_caw_ops \u00b6 Number of FC-NVMe CAW operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.caw_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_caw_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_command_slots \u00b6 Number of command slots that have been used by initiators logging into this port. This shows the command fan-in on the port. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.command_slots Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_command_slots Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_other_ops \u00b6 Number of NVMF operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_read_data \u00b6 Amount of data read from the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_read_ops \u00b6 Number of FC-NVMe read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_caw_data \u00b6 Amount of remote CAW data sent to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.caw_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_caw_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_caw_ops \u00b6 Number of FC-NVMe remote CAW operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.caw_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_caw_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_other_ops \u00b6 Number of NVMF remote operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_read_data \u00b6 Amount of remote data read from the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_read_ops \u00b6 Number of FC-NVMe remote read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_total_data \u00b6 Amount of remote FC-NVMe traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_total_ops \u00b6 Total number of remote FC-NVMe operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_write_data \u00b6 Amount of remote data written to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_remote_write_ops \u00b6 Number of FC-NVMe remote write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_total_data \u00b6 Amount of FC-NVMe traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_total_ops \u00b6 Total number of FC-NVMe operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_write_data \u00b6 Amount of data written to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_nvmf_write_ops \u00b6 Number of FC-NVMe write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml fcp_other_ops \u00b6 Number of operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_prim_seq_err \u00b6 Number of primitive sequence errors API Endpoint Metric Template REST api/cluster/counter/tables/fcp primitive_seq_err Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port prim_seq_err Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_queue_full \u00b6 Number of times a queue full condition occurred. API Endpoint Metric Template REST api/cluster/counter/tables/fcp queue_full Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port queue_full Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_read_data \u00b6 Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_read_ops \u00b6 Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_reset_count \u00b6 Number of physical port resets API Endpoint Metric Template REST api/cluster/counter/tables/fcp reset_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port reset_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_shared_int_count \u00b6 Number of shared interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp shared_interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port shared_int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_spurious_int_count \u00b6 Number of spurious interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp spurious_interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port spurious_int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_threshold_full \u00b6 Number of times the total number of outstanding commands on the port exceeds the threshold supported by this port. API Endpoint Metric Template REST api/cluster/counter/tables/fcp threshold_full Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port threshold_full Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_total_data \u00b6 Amount of FCP traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_total_ops \u00b6 Total number of FCP operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_write_data \u00b6 Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcp_write_ops \u00b6 Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml fcvi_rdma_write_avg_latency \u00b6 Average RDMA write I/O latency. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_average_latency Unit: microsec Type: average Base: rdma.write_ops conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_avg_latency Unit: microsec Type: average Base: rdma_write_ops conf/zapiperf/cdot/9.8.0/fcvi.yaml fcvi_rdma_write_ops \u00b6 Number of RDMA write I/Os issued per second. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_ops Unit: none Type: rate Base: conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_ops Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/fcvi.yaml fcvi_rdma_write_throughput \u00b6 RDMA write throughput in bytes per second. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_throughput Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_throughput Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcvi.yaml flashcache_accesses \u00b6 External cache accesses per second API Endpoint Metric Template REST api/cluster/counter/tables/external_cache accesses Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj accesses Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_disk_reads_replaced \u00b6 Estimated number of disk reads per second replaced by cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache disk_reads_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj disk_reads_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_evicts \u00b6 Number of blocks evicted from the external cache to make room for new blocks API Endpoint Metric Template REST api/cluster/counter/tables/external_cache evicts Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj evicts Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit \u00b6 Number of WAFL buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit_directory \u00b6 Number of directory buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.directory Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_directory Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit_indirect \u00b6 Number of indirect file buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.indirect Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_indirect Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit_metadata_file \u00b6 Number of metadata file buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.metadata_file Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_metadata_file Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit_normal_lev0 \u00b6 Number of normal level 0 WAFL buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.normal_level_zero Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_normal_lev0 Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_hit_percent \u00b6 External cache hit rate API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.percent Unit: percent Type: average Base: accesses conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_percent Unit: percent Type: percent Base: accesses conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_inserts \u00b6 Number of WAFL buffers inserted into the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache inserts Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj inserts Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_invalidates \u00b6 Number of blocks invalidated in the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache invalidates Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj invalidates Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_miss \u00b6 External cache misses API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_miss_directory \u00b6 External cache misses accessing directory buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.directory Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_directory Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_miss_indirect \u00b6 External cache misses accessing indirect file buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.indirect Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_indirect Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_miss_metadata_file \u00b6 External cache misses accessing metadata file buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.metadata_file Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_metadata_file Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_miss_normal_lev0 \u00b6 External cache misses accessing normal level 0 buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.normal_level_zero Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_normal_lev0 Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashcache_usage \u00b6 Percentage of blocks in external cache currently containing valid data API Endpoint Metric Template REST api/cluster/counter/tables/external_cache usage Unit: percent Type: raw Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj usage Unit: percent Type: raw Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml flashpool_cache_stats \u00b6 Automated Working-set Analyzer (AWA) per-interval pseudo cache statistics for the most recent intervals. The number of intervals defined as recent is CM_WAFL_HYAS_INT_DIS_CNT. This array is a table with fields corresponding to the enum type of hyas_cache_stat_type_t. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_sizer cache_stats Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_sizer.yaml ZAPI perf-object-get-instances wafl_hya_sizer cache_stats Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_hya_sizer.yaml flashpool_evict_destage_rate \u00b6 Number of block destage per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate evict_destage_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr evict_destage_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_evict_remove_rate \u00b6 Number of block free per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate evict_remove_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr evict_remove_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_hya_read_hit_latency_average \u00b6 Average of RAID I/O latency on read hit. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_read_hit_latency_average Unit: none Type: average Base: hya_read_hit_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_read_hit_latency_average Unit: none Type: average Base: hya_read_hit_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_hya_read_miss_latency_average \u00b6 Average read miss latency. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_read_miss_latency_average Unit: none Type: average Base: hya_read_miss_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_read_miss_latency_average Unit: none Type: average Base: hya_read_miss_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_hya_write_hdd_latency_average \u00b6 Average write latency to HDD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_write_hdd_latency_average Unit: none Type: average Base: hya_write_hdd_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_write_hdd_latency_average Unit: none Type: average Base: hya_write_hdd_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_hya_write_ssd_latency_average \u00b6 Average of RAID I/O latency on write to SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_write_ssd_latency_average Unit: none Type: average Base: hya_write_ssd_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_write_ssd_latency_average Unit: none Type: average Base: hya_write_ssd_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_read_cache_ins_rate \u00b6 Cache insert rate blocks/sec. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_cache_insert_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_cache_ins_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_read_ops_replaced \u00b6 Number of HDD read operations replaced by SSD reads per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_ops_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_ops_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_read_ops_replaced_percent \u00b6 Percentage of HDD read operations replace by SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_ops_replaced_percent Unit: percent Type: percent Base: read_ops_total conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_ops_replaced_percent Unit: percent Type: percent Base: read_ops_total conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_ssd_available \u00b6 Total SSD blocks available. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_available Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_available Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_ssd_read_cached \u00b6 Total read cached SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_read_cached Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_read_cached Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_ssd_total \u00b6 Total SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_total Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_total Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_ssd_total_used \u00b6 Total SSD blocks used. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_total_used Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_total_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_ssd_write_cached \u00b6 Total write cached SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_write_cached Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_write_cached Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_wc_write_blks_total \u00b6 Number of write-cache blocks written per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate wc_write_blocks_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr wc_write_blks_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_write_blks_replaced \u00b6 Number of HDD write blocks replaced by SSD writes per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate write_blocks_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr write_blks_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml flashpool_write_blks_replaced_percent \u00b6 Percentage of blocks overwritten to write-cache among all disk writes. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate write_blocks_replaced_percent Unit: percent Type: average Base: estimated_write_blocks_total conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr write_blks_replaced_percent Unit: percent Type: average Base: est_write_blks_total conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml headroom_aggr_current_latency \u00b6 This is the storage aggregate average latency per message at the disk level. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_latency Unit: microsec Type: average Base: current_ops conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_latency Unit: microsec Type: average Base: current_ops conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_current_ops \u00b6 Total number of I/Os processed by the aggregate per second. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_current_utilization \u00b6 This is the storage aggregate average utilization of all the data disks in the aggregate. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_utilization Unit: percent Type: percent Base: current_utilization_denominator conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_utilization Unit: percent Type: percent Base: current_utilization_total conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_ewma_daily \u00b6 Daily exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.daily Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_daily Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_ewma_hourly \u00b6 Hourly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.hourly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_hourly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_ewma_monthly \u00b6 Monthly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.monthly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_monthly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_ewma_weekly \u00b6 Weekly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.weekly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_weekly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_optimal_point_confidence_factor \u00b6 The confidence factor for the optimal point value based on the observed resource latency and utilization. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.confidence_factor Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_confidence_factor Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_optimal_point_latency \u00b6 The latency component of the optimal point of the latency/utilization curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.latency Unit: microsec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_latency Unit: microsec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_optimal_point_ops \u00b6 The ops component of the optimal point derived from the latency/utilzation curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.ops Unit: per_sec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_ops Unit: per_sec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_aggr_optimal_point_utilization \u00b6 The utilization component of the optimal point of the latency/utilization curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.utilization Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_utilization Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml headroom_cpu_current_latency \u00b6 Current operation latency of the resource. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_latency Unit: microsec Type: average Base: current_ops conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_latency Unit: microsec Type: average Base: current_ops conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_current_ops \u00b6 Total number of operations per second (also referred to as dblade ops). API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_current_utilization \u00b6 Average processor utilization across all processors in the system. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_utilization Unit: percent Type: percent Base: elapsed_time conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_utilization Unit: percent Type: percent Base: current_utilization_total conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_ewma_daily \u00b6 Daily exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.daily Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_daily Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_ewma_hourly \u00b6 Hourly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.hourly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_hourly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_ewma_monthly \u00b6 Monthly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.monthly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_monthly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_ewma_weekly \u00b6 Weekly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.weekly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_weekly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_optimal_point_confidence_factor \u00b6 Confidence factor for the optimal point value based on the observed resource latency and utilization. The possible values are: 0 - unknown, 1 - low, 2 - medium, 3 - high. This counter can provide an average confidence factor over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.confidence_factor Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_confidence_factor Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_optimal_point_latency \u00b6 Latency component of the optimal point of the latency/utilization curve. This counter can provide an average latency over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.latency Unit: microsec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_latency Unit: microsec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_optimal_point_ops \u00b6 Ops component of the optimal point derived from the latency/utilization curve. This counter can provide an average ops over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.ops Unit: per_sec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_ops Unit: per_sec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml headroom_cpu_optimal_point_utilization \u00b6 Utilization component of the optimal point of the latency/utilization curve. This counter can provide an average utilization over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.utilization Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_utilization Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml hostadapter_bytes_read \u00b6 Bytes read through a host adapter API Endpoint Metric Template REST api/cluster/counter/tables/host_adapter bytes_read Unit: per_sec Type: rate Base: conf/restperf/9.12.0/hostadapter.yaml ZAPI perf-object-get-instances hostadapter bytes_read Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/hostadapter.yaml hostadapter_bytes_written \u00b6 Bytes written through a host adapter API Endpoint Metric Template REST api/cluster/counter/tables/host_adapter bytes_written Unit: per_sec Type: rate Base: conf/restperf/9.12.0/hostadapter.yaml ZAPI perf-object-get-instances hostadapter bytes_written Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/hostadapter.yaml iscsi_lif_avg_latency \u00b6 Average latency for iSCSI operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_latency Unit: microsec Type: average Base: cmd_transferred conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_latency Unit: microsec Type: average Base: cmd_transfered conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_avg_other_latency \u00b6 Average latency for operations other than read and write (for example, Inquiry, Report LUNs, SCSI Task Management Functions) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_avg_read_latency \u00b6 Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_avg_write_latency \u00b6 Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_cmd_transfered \u00b6 Command transfered by this iSCSI conn API Endpoint Metric Template ZAPI perf-object-get-instances iscsi_lif cmd_transfered Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_cmd_transferred \u00b6 Command transferred by this iSCSI connection API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif cmd_transferred Unit: none Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml iscsi_lif_iscsi_other_ops \u00b6 iSCSI other operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_iscsi_read_ops \u00b6 iSCSI read operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_iscsi_write_ops \u00b6 iSCSI write operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_protocol_errors \u00b6 Number of protocol errors from iSCSI sessions on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif protocol_errors Unit: none Type: delta Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif protocol_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_read_data \u00b6 Amount of data read from the storage system in bytes API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml iscsi_lif_write_data \u00b6 Amount of data written to the storage system in bytes API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml lif_recv_data \u00b6 Number of bytes received per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lif_recv_errors \u00b6 Number of received Errors per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_errors Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_errors Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lif_recv_packet \u00b6 Number of packets received per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_packets Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_packet Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lif_sent_data \u00b6 Number of bytes sent per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lif_sent_errors \u00b6 Number of sent errors per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_errors Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_errors Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lif_sent_packet \u00b6 Number of packets sent per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_packets Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_packet Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml lun_avg_read_latency \u00b6 Average read latency in microseconds for all operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/lun.yaml lun_avg_write_latency \u00b6 Average write latency in microseconds for all operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/lun.yaml lun_avg_xcopy_latency \u00b6 Average latency in microseconds for xcopy requests API Endpoint Metric Template REST api/cluster/counter/tables/lun average_xcopy_latency Unit: microsec Type: average Base: xcopy_requests conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_xcopy_latency Unit: microsec Type: average Base: xcopy_reqs conf/zapiperf/cdot/9.8.0/lun.yaml lun_caw_reqs \u00b6 Number of compare and write requests API Endpoint Metric Template REST api/cluster/counter/tables/lun caw_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun caw_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_enospc \u00b6 Number of operations receiving ENOSPC errors API Endpoint Metric Template REST api/cluster/counter/tables/lun enospc Unit: none Type: delta Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun enospc Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_queue_full \u00b6 Queue full responses API Endpoint Metric Template REST api/cluster/counter/tables/lun queue_full Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun queue_full Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_read_align_histo \u00b6 Histogram of WAFL read alignment (number sectors off WAFL block start) API Endpoint Metric Template REST api/cluster/counter/tables/lun read_align_histogram Unit: percent Type: percent Base: read_ops_sent conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_align_histo Unit: percent Type: percent Base: read_ops_sent conf/zapiperf/cdot/9.8.0/lun.yaml lun_read_data \u00b6 Read bytes API Endpoint Metric Template REST api/cluster/counter/tables/lun read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_read_ops \u00b6 Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/lun read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_read_partial_blocks \u00b6 Percentage of reads whose size is not a multiple of WAFL block size API Endpoint Metric Template REST api/cluster/counter/tables/lun read_partial_blocks Unit: percent Type: percent Base: read_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_partial_blocks Unit: percent Type: percent Base: read_ops conf/zapiperf/cdot/9.8.0/lun.yaml lun_remote_bytes \u00b6 I/O to or from a LUN which is not owned by the storage system handling the I/O. API Endpoint Metric Template REST api/cluster/counter/tables/lun remote_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun remote_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_remote_ops \u00b6 Number of operations received by a storage system that does not own the LUN targeted by the operations. API Endpoint Metric Template REST api/cluster/counter/tables/lun remote_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun remote_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_size \u00b6 The total provisioned size of the LUN. The LUN size can be increased but not be made smaller using the REST interface. The maximum and minimum sizes listed here are the absolute maximum and absolute minimum sizes in bytes. The actual minimum and maxiumum sizes vary depending on the ONTAP version, ONTAP platform and the available space in the containing volume and aggregate. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/luns space.size conf/rest/9.12.0/lun.yaml ZAPI lun-get-iter lun-info.size conf/zapi/cdot/9.8.0/lun.yaml lun_size_used \u00b6 The amount of space consumed by the main data stream of the LUN. This value is the total space consumed in the volume by the LUN, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways SAN filesystems and applications utilize blocks within a LUN, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the LUN blocks are utilized outside of ONTAP, this property should not be used as an indicator for an out-of-space condition. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/luns space.used conf/rest/9.12.0/lun.yaml ZAPI lun-get-iter lun-info.size-used conf/zapi/cdot/9.8.0/lun.yaml lun_unmap_reqs \u00b6 Number of unmap command requests API Endpoint Metric Template REST api/cluster/counter/tables/lun unmap_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun unmap_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_write_align_histo \u00b6 Histogram of WAFL write alignment (number of sectors off WAFL block start) API Endpoint Metric Template REST api/cluster/counter/tables/lun write_align_histogram Unit: percent Type: percent Base: write_ops_sent conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_align_histo Unit: percent Type: percent Base: write_ops_sent conf/zapiperf/cdot/9.8.0/lun.yaml lun_write_data \u00b6 Write bytes API Endpoint Metric Template REST api/cluster/counter/tables/lun write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_write_ops \u00b6 Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/lun write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_write_partial_blocks \u00b6 Percentage of writes whose size is not a multiple of WAFL block size API Endpoint Metric Template REST api/cluster/counter/tables/lun write_partial_blocks Unit: percent Type: percent Base: write_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_partial_blocks Unit: percent Type: percent Base: write_ops conf/zapiperf/cdot/9.8.0/lun.yaml lun_writesame_reqs \u00b6 Number of write same command requests API Endpoint Metric Template REST api/cluster/counter/tables/lun writesame_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun writesame_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_writesame_unmap_reqs \u00b6 Number of write same commands requests with unmap bit set API Endpoint Metric Template REST api/cluster/counter/tables/lun writesame_unmap_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun writesame_unmap_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml lun_xcopy_reqs \u00b6 Total number of xcopy operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun xcopy_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun xcopy_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml metadata_collector_api_time \u00b6 amount of time to collect data from monitored cluster object API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_collector_calc_time \u00b6 amount of time it took to compute metrics between two successive polls, specifically using properties like raw, delta, rate, average, and percent. This metric is available for ZapiPerf/RestPerf collectors. API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_collector_instances \u00b6 number of objects collected from monitored cluster API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_collector_metrics \u00b6 number of counters collected from monitored cluster API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_collector_parse_time \u00b6 amount of time to parse XML, JSON, etc. for cluster object API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_collector_plugin_time \u00b6 amount of time for all plugins to post-process metrics API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_collector_poll_time \u00b6 amount of time it took for the poll to finish API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_collector_skips \u00b6 number of metrics that were not calculated between two successive polls. This metric is available for ZapiPerf/RestPerf collectors. API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_collector_task_time \u00b6 amount of time it took for each collector's subtasks to complete API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_component_count \u00b6 number of metrics collected for each object API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_component_status \u00b6 status of the collector - 0 means running, 1 means standby, 2 means failed API Endpoint Metric Template REST NA Harvest generated Unit: enum NA ZAPI NA Harvest generated Unit: enum NA metadata_exporter_count \u00b6 number of metrics and labels exported API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_exporter_time \u00b6 amount of time it took to render, export, and serve exported data API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA metadata_target_goroutines \u00b6 number of goroutines that exist within the poller API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA metadata_target_status \u00b6 status of the system being monitored. 0 means reachable, 1 means unreachable API Endpoint Metric Template REST NA Harvest generated Unit: enum NA ZAPI NA Harvest generated Unit: enum NA namespace_avg_other_latency \u00b6 Average other ops latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_avg_read_latency \u00b6 Average read latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_avg_write_latency \u00b6 Average write latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_block_size \u00b6 The size of blocks in the namespace in bytes. Valid in POST when creating an NVMe namespace that is not a clone of another. Disallowed in POST when creating a namespace clone. Valid in POST. API Endpoint Metric Template REST api/storage/namespaces space.block_size conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.block-size conf/zapi/cdot/9.8.0/namespace.yaml namespace_other_ops \u00b6 Number of other operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_read_data \u00b6 Read bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_read_ops \u00b6 Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_remote_bytes \u00b6 Remote read bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace remote.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace remote_bytes Unit: Type: Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_remote_ops \u00b6 Number of remote read operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace remote.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace remote_ops Unit: Type: Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_size \u00b6 The total provisioned size of the NVMe namespace. Valid in POST and PATCH. The NVMe namespace size can be increased but not be made smaller using the REST interface. The maximum and minimum sizes listed here are the absolute maximum and absolute minimum sizes in bytes. The maximum size is variable with respect to large NVMe namespace support in ONTAP. If large namespaces are supported, the maximum size is 128 TB (140737488355328 bytes) and if not supported, the maximum size is just under 16 TB (17557557870592 bytes). The minimum size supported is always 4096 bytes. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/namespaces space.size conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.size conf/zapi/cdot/9.8.0/namespace.yaml namespace_size_used \u00b6 The amount of space consumed by the main data stream of the NVMe namespace. This value is the total space consumed in the volume by the NVMe namespace, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways NVMe filesystems and applications utilize blocks within a namespace, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the namespace blocks are utilized outside of ONTAP, this property should not be used and an indicator for an out-of-space condition. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/namespaces space.used conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.size-used conf/zapi/cdot/9.8.0/namespace.yaml namespace_write_data \u00b6 Write bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml namespace_write_ops \u00b6 Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml net_port_mtu \u00b6 Maximum transmission unit, largest packet size on this network API Endpoint Metric Template REST api/network/ethernet/ports mtu conf/rest/9.12.0/netport.yaml ZAPI net-port-get-iter net-port-info.mtu conf/zapi/cdot/9.8.0/netport.yaml netstat_bytes_recvd \u00b6 Number of bytes received by a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat bytes_recvd Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_bytes_sent \u00b6 Number of bytes sent by a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat bytes_sent Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_cong_win \u00b6 Congestion window of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat cong_win Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_cong_win_th \u00b6 Congestion window threshold of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat cong_win_th Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_ooorcv_pkts \u00b6 Number of out-of-order packets received by this TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat ooorcv_pkts Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_recv_window \u00b6 Receive window size of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat recv_window Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_rexmit_pkts \u00b6 Number of packets retransmitted by this TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat rexmit_pkts Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml netstat_send_window \u00b6 Send window size of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat send_window Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml nfs_clients_idle_duration \u00b6 Specifies an ISO-8601 format of date and time to retrieve the idle time duration in hours, minutes, and seconds format. API Endpoint Metric Template REST api/protocols/nfs/connected-clients idle_duration conf/rest/9.7.0/nfs_clients.yaml nfs_diag_storePool_ByteLockAlloc \u00b6 Current number of byte range lock objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.byte_lock_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ByteLockAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_ByteLockMax \u00b6 Maximum number of byte range lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.byte_lock_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ByteLockMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_ClientAlloc \u00b6 Current number of client objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.client_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ClientAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_ClientMax \u00b6 Maximum number of client objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.client_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ClientMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_ConnectionParentSessionReferenceAlloc \u00b6 Current number of connection parent session reference objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.connection_parent_session_reference_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ConnectionParentSessionReferenceAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_ConnectionParentSessionReferenceMax \u00b6 Maximum number of connection parent session reference objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.connection_parent_session_reference_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ConnectionParentSessionReferenceMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_CopyStateAlloc \u00b6 Current number of copy state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.copy_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_CopyStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_CopyStateMax \u00b6 Maximum number of copy state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.copy_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_CopyStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_DelegAlloc \u00b6 Current number of delegation lock objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_DelegMax \u00b6 Maximum number delegation lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_DelegStateAlloc \u00b6 Current number of delegation state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_DelegStateMax \u00b6 Maximum number of delegation state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LayoutAlloc \u00b6 Current number of layout objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LayoutMax \u00b6 Maximum number of layout objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LayoutStateAlloc \u00b6 Current number of layout state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LayoutStateMax \u00b6 Maximum number of layout state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LockStateAlloc \u00b6 Current number of lock state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.lock_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LockStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_LockStateMax \u00b6 Maximum number of lock state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.lock_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LockStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OpenAlloc \u00b6 Current number of share objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.open_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OpenMax \u00b6 Maximum number of share lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.open_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OpenStateAlloc \u00b6 Current number of open state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.openstate_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OpenStateMax \u00b6 Maximum number of open state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.openstate_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OwnerAlloc \u00b6 Current number of owner objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.owner_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OwnerAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_OwnerMax \u00b6 Maximum number of owner objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.owner_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OwnerMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionAlloc \u00b6 Current number of session objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionConnectionHolderAlloc \u00b6 Current number of session connection holder objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_connection_holder_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionConnectionHolderAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionConnectionHolderMax \u00b6 Maximum number of session connection holder objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_connection_holder_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionConnectionHolderMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionHolderAlloc \u00b6 Current number of session holder objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_holder_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionHolderAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionHolderMax \u00b6 Maximum number of session holder objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_holder_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionHolderMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_SessionMax \u00b6 Maximum number of session objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_StateRefHistoryAlloc \u00b6 Current number of state reference callstack history objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.state_reference_history_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StateRefHistoryAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_StateRefHistoryMax \u00b6 Maximum number of state reference callstack history objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.state_reference_history_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StateRefHistoryMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_StringAlloc \u00b6 Current number of string objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.string_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StringAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nfs_diag_storePool_StringMax \u00b6 Maximum number of string objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.string_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StringMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml nic_link_up_to_downs \u00b6 Number of link state change from UP to DOWN. API Endpoint Metric Template REST api/cluster/counter/tables/nic_common link_up_to_down Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common link_up_to_downs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_alignment_errors \u00b6 Alignment errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_alignment_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_alignment_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_bytes \u00b6 Bytes received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_crc_errors \u00b6 CRC errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_crc_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_crc_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_errors \u00b6 Error received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_errors Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_errors Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_length_errors \u00b6 Length errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_length_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_length_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_rx_total_errors \u00b6 Total errors received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_total_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_total_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_tx_bytes \u00b6 Bytes sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_tx_errors \u00b6 Error sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_errors Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_errors Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_tx_hw_errors \u00b6 Transmit errors reported by hardware API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_hw_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_hw_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml nic_tx_total_errors \u00b6 Total errors sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_total_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_total_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml node_avg_processor_busy \u00b6 Average processor utilization across all processors in the system API Endpoint Metric Template REST api/cluster/counter/tables/system:node average_processor_busy_percent Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node avg_processor_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml node_cifs_connections \u00b6 Number of connections API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node connections Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_established_sessions \u00b6 Number of established SMB and SMB2 sessions API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node established_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node established_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_latency \u00b6 Average latency for CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node latency Unit: microsec Type: average Base: latency_base conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_latency Unit: microsec Type: average Base: cifs_latency_base conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_op_count \u00b6 Array of select CIFS operation counts API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node op_count Unit: none Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_op_count Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_open_files \u00b6 Number of open files over SMB and SMB2 API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node open_files Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node open_files Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_ops \u00b6 Number of CIFS operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node cifs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_cifs_read_latency \u00b6 Average latency for CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node average_read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_read_ops \u00b6 Total number of CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_total_ops \u00b6 Total number of CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_write_latency \u00b6 Average latency for CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node average_write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cifs_write_ops \u00b6 Total number of CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml node_cpu_busy \u00b6 System CPU resource utilization. Returns a computed percentage for the default CPU field. Basically computes a 'cpu usage summary' value which indicates how 'busy' the system is based upon the most heavily utilized domain. The idea is to determine the amount of available CPU until we're limited by either a domain maxing out OR we exhaust all available idle CPU cycles, whichever occurs first. API Endpoint Metric Template REST api/cluster/counter/tables/system:node cpu_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cpu_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml node_cpu_busytime \u00b6 The time (in hundredths of a second) that the CPU has been doing useful work since the last boot API Endpoint Metric Template ZAPI system-node-get-iter node-details-info.cpu-busytime conf/zapi/cdot/9.8.0/node.yaml REST api/private/cli/node cpu_busy_time conf/rest/9.12.0/node.yaml node_cpu_domain_busy \u00b6 Array of processor time in percentage spent in various domains API Endpoint Metric Template REST api/cluster/counter/tables/system:node domain_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node domain_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml node_cpu_elapsed_time \u00b6 Elapsed time since boot API Endpoint Metric Template REST api/cluster/counter/tables/system:node cpu_elapsed_time Unit: microsec Type: delta Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cpu_elapsed_time Unit: none Type: delta,no-display Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_disk_data_read \u00b6 Number of disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node disk_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node disk_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_disk_data_written \u00b6 Number of disk kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node disk_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node disk_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_failed_fan \u00b6 Specifies a count of the number of chassis fans that are not operating within the recommended RPM range. API Endpoint Metric Template REST api/cluster/nodes controller.failed_fan.count conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.env-failed-fan-count conf/zapi/cdot/9.8.0/node.yaml node_failed_power \u00b6 Number of failed power supply units. API Endpoint Metric Template REST api/cluster/nodes controller.failed_power_supply.count conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.env-failed-power-supply-count conf/zapi/cdot/9.8.0/node.yaml node_fcp_data_recv \u00b6 Number of FCP kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_fcp_data_sent \u00b6 Number of FCP kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_fcp_ops \u00b6 Number of FCP operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_hdd_data_read \u00b6 Number of HDD Disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node hdd_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node hdd_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_hdd_data_written \u00b6 Number of HDD kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node hdd_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node hdd_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_iscsi_ops \u00b6 Number of iSCSI operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node iscsi_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node iscsi_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_memory \u00b6 Total memory in megabytes (MB) API Endpoint Metric Template REST api/cluster/counter/tables/system:node memory Unit: none Type: raw Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node memory Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_net_data_recv \u00b6 Number of network kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node network_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node net_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_net_data_sent \u00b6 Number of network kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node network_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node net_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_nfs_access_avg_latency \u00b6 Average latency of ACCESS procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node access.average_latency Unit: microsec Type: average Base: access.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node access_avg_latency Unit: microsec Type: average,no-zero-values Base: access_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_access_total \u00b6 Total number of ACCESS procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node access.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node access_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_backchannel_ctl_avg_latency \u00b6 Average latency of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node backchannel_ctl.average_latency Unit: microsec Type: average Base: backchannel_ctl.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node backchannel_ctl_avg_latency Unit: microsec Type: average,no-zero-values Base: backchannel_ctl_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_backchannel_ctl_total \u00b6 Total number of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node backchannel_ctl.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node backchannel_ctl_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_bind_conn_to_session_avg_latency \u00b6 Average latency of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node bind_conn_to_session.average_latency Unit: microsec Type: average Base: bind_conn_to_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node bind_conn_to_session_avg_latency Unit: microsec Type: average,no-zero-values Base: bind_conn_to_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_bind_conn_to_session_total \u00b6 Total number of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node bind_conn_to_session.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node bind_conn_to_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_close_avg_latency \u00b6 Average latency of CLOSE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node close.average_latency Unit: microsec Type: average Base: close.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node close_avg_latency Unit: microsec Type: average,no-zero-values Base: close_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_close_total \u00b6 Total number of CLOSE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node close.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node close_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_commit_avg_latency \u00b6 Average latency of COMMIT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node commit.average_latency Unit: microsec Type: average Base: commit.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node commit_avg_latency Unit: microsec Type: average,no-zero-values Base: commit_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_commit_total \u00b6 Total number of COMMIT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node commit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node commit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_create_avg_latency \u00b6 Average latency of CREATE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node create.average_latency Unit: microsec Type: average Base: create.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node create_avg_latency Unit: microsec Type: average,no-zero-values Base: create_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_create_session_avg_latency \u00b6 Average latency of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node create_session.average_latency Unit: microsec Type: average Base: create_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node create_session_avg_latency Unit: microsec Type: average,no-zero-values Base: create_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_create_session_total \u00b6 Total number of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node create_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node create_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_create_total \u00b6 Total number of CREATE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node create.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node create_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_delegpurge_avg_latency \u00b6 Average latency of DELEGPURGE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegpurge.average_latency Unit: microsec Type: average Base: delegpurge.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegpurge_avg_latency Unit: microsec Type: average,no-zero-values Base: delegpurge_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_delegpurge_total \u00b6 Total number of DELEGPURGE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegpurge.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegpurge_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_delegreturn_avg_latency \u00b6 Average latency of DELEGRETURN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegreturn.average_latency Unit: microsec Type: average Base: delegreturn.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: delegreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_delegreturn_total \u00b6 Total number of DELEGRETURN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_destroy_clientid_avg_latency \u00b6 Average latency of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_clientid.average_latency Unit: microsec Type: average Base: destroy_clientid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_clientid_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_clientid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_destroy_clientid_total \u00b6 Total number of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_clientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_clientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_destroy_session_avg_latency \u00b6 Average latency of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_session.average_latency Unit: microsec Type: average Base: destroy_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_session_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_destroy_session_total \u00b6 Total number of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_exchange_id_avg_latency \u00b6 Average latency of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node exchange_id.average_latency Unit: microsec Type: average Base: exchange_id.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node exchange_id_avg_latency Unit: microsec Type: average,no-zero-values Base: exchange_id_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_exchange_id_total \u00b6 Total number of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node exchange_id.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node exchange_id_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_free_stateid_avg_latency \u00b6 Average latency of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node free_stateid.average_latency Unit: microsec Type: average Base: free_stateid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node free_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: free_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_free_stateid_total \u00b6 Total number of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node free_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node free_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_fsinfo_avg_latency \u00b6 Average latency of FSInfo procedure requests. The counter keeps track of the average response time of FSInfo requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsinfo.average_latency Unit: microsec Type: average Base: fsinfo.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: fsinfo_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_fsinfo_total \u00b6 Total number FSInfo of procedure requests. It is the total number of FSInfo success and FSInfo error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_fsstat_avg_latency \u00b6 Average latency of FSStat procedure requests. The counter keeps track of the average response time of FSStat requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsstat.average_latency Unit: microsec Type: average Base: fsstat.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsstat_avg_latency Unit: microsec Type: average,no-zero-values Base: fsstat_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_fsstat_total \u00b6 Total number FSStat of procedure requests. It is the total number of FSStat success and FSStat error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsstat.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsstat_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_get_dir_delegation_avg_latency \u00b6 Average latency of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node get_dir_delegation.average_latency Unit: microsec Type: average Base: get_dir_delegation.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node get_dir_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: get_dir_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_get_dir_delegation_total \u00b6 Total number of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node get_dir_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node get_dir_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_getattr_avg_latency \u00b6 Average latency of GETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getattr.average_latency Unit: microsec Type: average Base: getattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getattr_avg_latency Unit: microsec Type: average,no-zero-values Base: getattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_getattr_total \u00b6 Total number of GETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_getdeviceinfo_avg_latency \u00b6 Average latency of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdeviceinfo.average_latency Unit: microsec Type: average Base: getdeviceinfo.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdeviceinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: getdeviceinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_getdeviceinfo_total \u00b6 Total number of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdeviceinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdeviceinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_getdevicelist_avg_latency \u00b6 Average latency of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdevicelist.average_latency Unit: microsec Type: average Base: getdevicelist.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdevicelist_avg_latency Unit: microsec Type: average,no-zero-values Base: getdevicelist_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_getdevicelist_total \u00b6 Total number of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdevicelist.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdevicelist_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_getfh_avg_latency \u00b6 Average latency of GETFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getfh.average_latency Unit: microsec Type: average Base: getfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getfh_avg_latency Unit: microsec Type: average,no-zero-values Base: getfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_getfh_total \u00b6 Total number of GETFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_latency \u00b6 Average latency of NFSv4 requests. This counter keeps track of the average response time of NFSv4 requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node latency Unit: microsec Type: average,no-zero-values Base: total_ops conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_layoutcommit_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutcommit.average_latency Unit: microsec Type: average Base: layoutcommit.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutcommit_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutcommit_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_layoutcommit_total \u00b6 Total number of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutcommit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutcommit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_layoutget_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutget.average_latency Unit: microsec Type: average Base: layoutget.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutget_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutget_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_layoutget_total \u00b6 Total number of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutget.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutget_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_layoutreturn_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutreturn.average_latency Unit: microsec Type: average Base: layoutreturn.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_layoutreturn_total \u00b6 Total number of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_link_avg_latency \u00b6 Average latency of LINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node link.average_latency Unit: microsec Type: average Base: link.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node link_avg_latency Unit: microsec Type: average,no-zero-values Base: link_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_link_total \u00b6 Total number of LINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node link.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node link_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lock_avg_latency \u00b6 Average latency of LOCK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lock.average_latency Unit: microsec Type: average Base: lock.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lock_avg_latency Unit: microsec Type: average,no-zero-values Base: lock_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lock_total \u00b6 Total number of LOCK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lock.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lock_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lockt_avg_latency \u00b6 Average latency of LOCKT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lockt.average_latency Unit: microsec Type: average Base: lockt.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lockt_avg_latency Unit: microsec Type: average,no-zero-values Base: lockt_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lockt_total \u00b6 Total number of LOCKT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lockt.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lockt_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_locku_avg_latency \u00b6 Average latency of LOCKU procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node locku.average_latency Unit: microsec Type: average Base: locku.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node locku_avg_latency Unit: microsec Type: average,no-zero-values Base: locku_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_locku_total \u00b6 Total number of LOCKU procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node locku.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node locku_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lookup_avg_latency \u00b6 Average latency of LOOKUP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookup.average_latency Unit: microsec Type: average Base: lookup.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookup_avg_latency Unit: microsec Type: average,no-zero-values Base: lookup_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lookup_total \u00b6 Total number of LOOKUP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookup.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookup_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lookupp_avg_latency \u00b6 Average latency of LOOKUPP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookupp.average_latency Unit: microsec Type: average Base: lookupp.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookupp_avg_latency Unit: microsec Type: average,no-zero-values Base: lookupp_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_lookupp_total \u00b6 Total number of LOOKUPP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookupp.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookupp_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_mkdir_avg_latency \u00b6 Average latency of MkDir procedure requests. The counter keeps track of the average response time of MkDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mkdir.average_latency Unit: microsec Type: average Base: mkdir.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mkdir_avg_latency Unit: microsec Type: average,no-zero-values Base: mkdir_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_mkdir_total \u00b6 Total number MkDir of procedure requests. It is the total number of MkDir success and MkDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mkdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mkdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_mknod_avg_latency \u00b6 Average latency of MkNod procedure requests. The counter keeps track of the average response time of MkNod requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mknod.average_latency Unit: microsec Type: average Base: mknod.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mknod_avg_latency Unit: microsec Type: average,no-zero-values Base: mknod_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_mknod_total \u00b6 Total number MkNod of procedure requests. It is the total number of MkNod success and MkNod error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mknod.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mknod_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_null_avg_latency \u00b6 Average Latency of NULL procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node null.average_latency Unit: microsec Type: average Base: null.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node null_avg_latency Unit: microsec Type: average,no-zero-values Base: null_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_null_total \u00b6 Total number of NULL procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node null.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node null_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_nverify_avg_latency \u00b6 Average latency of NVERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node nverify.average_latency Unit: microsec Type: average Base: nverify.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nverify_avg_latency Unit: microsec Type: average,no-zero-values Base: nverify_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_nverify_total \u00b6 Total number of NVERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node nverify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nverify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_avg_latency \u00b6 Average latency of OPEN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open.average_latency Unit: microsec Type: average Base: open.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_avg_latency Unit: microsec Type: average,no-zero-values Base: open_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_confirm_avg_latency \u00b6 Average latency of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_confirm.average_latency Unit: microsec Type: average Base: open_confirm.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: open_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_confirm_total \u00b6 Total number of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_downgrade_avg_latency \u00b6 Average latency of OPEN_DOWNGRADE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_downgrade.average_latency Unit: microsec Type: average Base: open_downgrade.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_downgrade_avg_latency Unit: microsec Type: average,no-zero-values Base: open_downgrade_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_downgrade_total \u00b6 Total number of OPEN_DOWNGRADE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_downgrade.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_downgrade_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_open_total \u00b6 Total number of OPEN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_openattr_avg_latency \u00b6 Average latency of OPENATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node openattr.average_latency Unit: microsec Type: average Base: openattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node openattr_avg_latency Unit: microsec Type: average,no-zero-values Base: openattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_openattr_total \u00b6 Total number of OPENATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node openattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node openattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_ops \u00b6 Number of NFS operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nfs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nfs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_nfs_pathconf_avg_latency \u00b6 Average latency of PathConf procedure requests. The counter keeps track of the average response time of PathConf requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node pathconf.average_latency Unit: microsec Type: average Base: pathconf.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node pathconf_avg_latency Unit: microsec Type: average,no-zero-values Base: pathconf_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_pathconf_total \u00b6 Total number PathConf of procedure requests. It is the total number of PathConf success and PathConf error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node pathconf.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node pathconf_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_putfh_avg_latency \u00b6 Average latency of PUTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putfh.average_latency Unit: microsec Type: average Base: putfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_putfh_total \u00b6 Total number of PUTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_putpubfh_avg_latency \u00b6 Average latency of PUTPUBFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putpubfh.average_latency Unit: microsec Type: average Base: putpubfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putpubfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putpubfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_putpubfh_total \u00b6 Total number of PUTPUBFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putpubfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putpubfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_putrootfh_avg_latency \u00b6 Average latency of PUTROOTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putrootfh.average_latency Unit: microsec Type: average Base: putrootfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putrootfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putrootfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_putrootfh_total \u00b6 Total number of PUTROOTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putrootfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putrootfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_read_avg_latency \u00b6 Average latency of READ procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node read.average_latency Unit: microsec Type: average Base: read.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node read_avg_latency Unit: microsec Type: average,no-zero-values Base: read_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_read_ops \u00b6 Total observed NFSv3 read operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node nfsv3_read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_read_symlink_avg_latency \u00b6 Average latency of ReadSymLink procedure requests. The counter keeps track of the average response time of ReadSymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_symlink.average_latency Unit: microsec Type: average Base: read_symlink.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node read_symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: read_symlink_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_read_symlink_total \u00b6 Total number of ReadSymLink procedure requests. It is the total number of read symlink success and read symlink error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_symlink.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node read_symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_read_throughput \u00b6 NFSv4 read data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.read_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_read_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_read_total \u00b6 Total number of READ procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node read.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node read_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_readdir_avg_latency \u00b6 Average latency of READDIR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readdir.average_latency Unit: microsec Type: average Base: readdir.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readdir_avg_latency Unit: microsec Type: average,no-zero-values Base: readdir_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_readdir_total \u00b6 Total number of READDIR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_readdirplus_avg_latency \u00b6 Average latency of ReadDirPlus procedure requests. The counter keeps track of the average response time of ReadDirPlus requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node readdirplus.average_latency Unit: microsec Type: average Base: readdirplus.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node readdirplus_avg_latency Unit: microsec Type: average,no-zero-values Base: readdirplus_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_readdirplus_total \u00b6 Total number ReadDirPlus of procedure requests. It is the total number of ReadDirPlus success and ReadDirPlus error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node readdirplus.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node readdirplus_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_readlink_avg_latency \u00b6 Average latency of READLINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readlink.average_latency Unit: microsec Type: average Base: readlink.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readlink_avg_latency Unit: microsec Type: average,no-zero-values Base: readlink_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_readlink_total \u00b6 Total number of READLINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_reclaim_complete_avg_latency \u00b6 Average latency of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node reclaim_complete.average_latency Unit: microsec Type: average Base: reclaim_complete.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node reclaim_complete_avg_latency Unit: microsec Type: average,no-zero-values Base: reclaim_complete_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_reclaim_complete_total \u00b6 Total number of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node reclaim_complete.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node reclaim_complete_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_release_lock_owner_avg_latency \u00b6 Average Latency of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node release_lock_owner.average_latency Unit: microsec Type: average Base: release_lock_owner.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node release_lock_owner_avg_latency Unit: microsec Type: average,no-zero-values Base: release_lock_owner_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_release_lock_owner_total \u00b6 Total number of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node release_lock_owner.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node release_lock_owner_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_remove_avg_latency \u00b6 Average latency of REMOVE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node remove.average_latency Unit: microsec Type: average Base: remove.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node remove_avg_latency Unit: microsec Type: average,no-zero-values Base: remove_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_remove_total \u00b6 Total number of REMOVE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node remove.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node remove_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_rename_avg_latency \u00b6 Average latency of RENAME procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node rename.average_latency Unit: microsec Type: average Base: rename.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node rename_avg_latency Unit: microsec Type: average,no-zero-values Base: rename_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_rename_total \u00b6 Total number of RENAME procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node rename.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node rename_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_renew_avg_latency \u00b6 Average latency of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node renew.average_latency Unit: microsec Type: average Base: renew.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node renew_avg_latency Unit: microsec Type: average,no-zero-values Base: renew_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_renew_total \u00b6 Total number of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node renew.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node renew_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_restorefh_avg_latency \u00b6 Average latency of RESTOREFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node restorefh.average_latency Unit: microsec Type: average Base: restorefh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node restorefh_avg_latency Unit: microsec Type: average,no-zero-values Base: restorefh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_restorefh_total \u00b6 Total number of RESTOREFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node restorefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node restorefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_rmdir_avg_latency \u00b6 Average latency of RmDir procedure requests. The counter keeps track of the average response time of RmDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node rmdir.average_latency Unit: microsec Type: average Base: rmdir.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node rmdir_avg_latency Unit: microsec Type: average,no-zero-values Base: rmdir_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_rmdir_total \u00b6 Total number RmDir of procedure requests. It is the total number of RmDir success and RmDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node rmdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node rmdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_savefh_avg_latency \u00b6 Average latency of SAVEFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node savefh.average_latency Unit: microsec Type: average Base: savefh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node savefh_avg_latency Unit: microsec Type: average,no-zero-values Base: savefh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_savefh_total \u00b6 Total number of SAVEFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node savefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node savefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_secinfo_avg_latency \u00b6 Average latency of SECINFO procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node secinfo.average_latency Unit: microsec Type: average Base: secinfo.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node secinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_secinfo_no_name_avg_latency \u00b6 Average latency of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node secinfo_no_name.average_latency Unit: microsec Type: average Base: secinfo_no_name.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node secinfo_no_name_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_no_name_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_secinfo_no_name_total \u00b6 Total number of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node secinfo_no_name.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node secinfo_no_name_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_secinfo_total \u00b6 Total number of SECINFO procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node secinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node secinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_sequence_avg_latency \u00b6 Average latency of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node sequence.average_latency Unit: microsec Type: average Base: sequence.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node sequence_avg_latency Unit: microsec Type: average,no-zero-values Base: sequence_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_sequence_total \u00b6 Total number of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node sequence.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node sequence_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_set_ssv_avg_latency \u00b6 Average latency of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node set_ssv.average_latency Unit: microsec Type: average Base: set_ssv.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node set_ssv_avg_latency Unit: microsec Type: average,no-zero-values Base: set_ssv_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_set_ssv_total \u00b6 Total number of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node set_ssv.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node set_ssv_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_setattr_avg_latency \u00b6 Average latency of SETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setattr.average_latency Unit: microsec Type: average Base: setattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setattr_avg_latency Unit: microsec Type: average,no-zero-values Base: setattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_setattr_total \u00b6 Total number of SETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_setclientid_avg_latency \u00b6 Average latency of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid.average_latency Unit: microsec Type: average Base: setclientid.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_setclientid_confirm_avg_latency \u00b6 Average latency of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid_confirm.average_latency Unit: microsec Type: average Base: setclientid_confirm.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_setclientid_confirm_total \u00b6 Total number of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_setclientid_total \u00b6 Total number of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_symlink_avg_latency \u00b6 Average latency of SymLink procedure requests. The counter keeps track of the average response time of SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node symlink.average_latency Unit: microsec Type: average Base: symlink.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: symlink_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_symlink_total \u00b6 Total number SymLink of procedure requests. It is the total number of SymLink success and create SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node symlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_test_stateid_avg_latency \u00b6 Average latency of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node test_stateid.average_latency Unit: microsec Type: average Base: test_stateid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node test_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: test_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_test_stateid_total \u00b6 Total number of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node test_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node test_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_throughput \u00b6 NFSv4 data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_total_ops \u00b6 Total number of NFSv4 requests per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node total_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_verify_avg_latency \u00b6 Average latency of VERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node verify.average_latency Unit: microsec Type: average Base: verify.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node verify_avg_latency Unit: microsec Type: average,no-zero-values Base: verify_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_verify_total \u00b6 Total number of VERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node verify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node verify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_want_delegation_avg_latency \u00b6 Average latency of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node want_delegation.average_latency Unit: microsec Type: average Base: want_delegation.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node want_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: want_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_want_delegation_total \u00b6 Total number of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node want_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node want_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml node_nfs_write_avg_latency \u00b6 Average Latency of WRITE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node write.average_latency Unit: microsec Type: average Base: write.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node write_avg_latency Unit: microsec Type: average,no-zero-values Base: write_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_write_ops \u00b6 Total observed NFSv3 write operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node nfsv3_write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml node_nfs_write_throughput \u00b6 NFSv4 write data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.write_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_write_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nfs_write_total \u00b6 Total number of WRITE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node write.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node write_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml node_nvmf_data_recv \u00b6 NVMe/FC kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_nvmf_data_sent \u00b6 NVMe/FC kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_nvmf_ops \u00b6 NVMe/FC operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_ssd_data_read \u00b6 Number of SSD Disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node ssd_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node ssd_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_ssd_data_written \u00b6 Number of SSD Disk kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node ssd_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node ssd_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_total_data \u00b6 Total throughput in bytes API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_total_latency \u00b6 Average latency for all operations in the system in microseconds API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/system_node.yaml node_total_ops \u00b6 Total number of operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml node_uptime \u00b6 The total time, in seconds, that the node has been up. API Endpoint Metric Template REST api/cluster/nodes uptime conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.node-uptime conf/zapi/cdot/9.8.0/node.yaml node_vol_cifs_other_latency \u00b6 Average time for the WAFL filesystem to process other CIFS operations to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.other_latency Unit: microsec Type: average Base: cifs.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_other_latency Unit: microsec Type: average Base: cifs_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_other_ops \u00b6 Number of other CIFS operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_read_data \u00b6 Bytes read per second via CIFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_read_latency \u00b6 Average time for the WAFL filesystem to process CIFS read requests to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_latency Unit: microsec Type: average Base: cifs.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_read_ops \u00b6 Number of CIFS read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_write_data \u00b6 Bytes written per second via CIFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_write_latency \u00b6 Average time for the WAFL filesystem to process CIFS write requests to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_latency Unit: microsec Type: average Base: cifs.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_cifs_write_ops \u00b6 Number of CIFS write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_other_latency \u00b6 Average time for the WAFL filesystem to process other FCP protocol operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.other_latency Unit: microsec Type: average Base: fcp.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_other_latency Unit: microsec Type: average Base: fcp_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_other_ops \u00b6 Number of other block protocol operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_read_data \u00b6 Bytes read per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_read_latency \u00b6 Average time for the WAFL filesystem to process FCP protocol read operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_latency Unit: microsec Type: average Base: fcp.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_latency Unit: microsec Type: average Base: fcp_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_read_ops \u00b6 Number of block protocol read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_write_data \u00b6 Bytes written per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_write_latency \u00b6 Average time for the WAFL filesystem to process FCP protocol write operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_latency Unit: microsec Type: average Base: fcp.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_latency Unit: microsec Type: average Base: fcp_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_fcp_write_ops \u00b6 Number of block protocol write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_other_latency \u00b6 Average time for the WAFL filesystem to process other iSCSI protocol operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.other_latency Unit: microsec Type: average Base: iscsi.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_other_ops \u00b6 Number of other block protocol operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_read_data \u00b6 Bytes read per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_read_latency \u00b6 Average time for the WAFL filesystem to process iSCSI protocol read operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_latency Unit: microsec Type: average Base: iscsi.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_read_ops \u00b6 Number of block protocol read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_write_data \u00b6 Bytes written per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_write_latency \u00b6 Average time for the WAFL filesystem to process iSCSI protocol write operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_latency Unit: microsec Type: average Base: iscsi.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_iscsi_write_ops \u00b6 Number of block protocol write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_other_latency \u00b6 Average time for the WAFL filesystem to process other NFS operations to the volume; not including NFS protocol request processing or network communication time which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.other_latency Unit: microsec Type: average Base: nfs.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_other_latency Unit: microsec Type: average Base: nfs_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_other_ops \u00b6 Number of other NFS operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_read_data \u00b6 Bytes read per second via NFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_read_latency \u00b6 Average time for the WAFL filesystem to process NFS protocol read requests to the volume; not including NFS protocol request processing or network communication time which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_latency Unit: microsec Type: average Base: nfs.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_latency Unit: microsec Type: average Base: nfs_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_read_ops \u00b6 Number of NFS read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_write_data \u00b6 Bytes written per second via NFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_write_latency \u00b6 Average time for the WAFL filesystem to process NFS protocol write requests to the volume; not including NFS protocol request processing or network communication time, which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_latency Unit: microsec Type: average Base: nfs.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_latency Unit: microsec Type: average Base: nfs_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_nfs_write_ops \u00b6 Number of NFS write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_read_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:node read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml node_vol_write_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:node write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml nvme_lif_avg_latency \u00b6 Average latency for NVMF operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_avg_other_latency \u00b6 Average latency for operations other than read, write, compare or compare-and-write. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_avg_read_latency \u00b6 Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_avg_write_latency \u00b6 Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_other_ops \u00b6 Number of operations that are not read, write, compare or compare-and-write. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_read_data \u00b6 Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_read_ops \u00b6 Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_total_ops \u00b6 Total number of operations. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_write_data \u00b6 Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml nvme_lif_write_ops \u00b6 Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml ontaps3_logical_used_size \u00b6 Specifies the bucket logical used size up to this point. API Endpoint Metric Template REST api/protocols/s3/buckets logical_used_size conf/rest/9.7.0/ontap_s3.yaml ontaps3_size \u00b6 Specifies the bucket size in bytes; ranges from 80MB to 64TB. API Endpoint Metric Template REST api/protocols/s3/buckets size conf/rest/9.7.0/ontap_s3.yaml ontaps3_svm_abort_multipart_upload_failed \u00b6 Number of failed Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_abort_multipart_upload_failed_client_close \u00b6 Number of times Abort Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_abort_multipart_upload_latency \u00b6 Average latency for Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_latency Unit: microsec Type: average Base: abort_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_abort_multipart_upload_rate \u00b6 Number of Abort Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_abort_multipart_upload_total \u00b6 Number of Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_allow_access \u00b6 Number of times access was allowed. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server allow_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_anonymous_access \u00b6 Number of times anonymous access was allowed. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server anonymous_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_anonymous_deny_access \u00b6 Number of times anonymous access was denied. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server anonymous_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_authentication_failures \u00b6 Number of authentication failures. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server authentication_failures Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_chunked_upload_reqs \u00b6 Total number of object store server chunked object upload requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server chunked_upload_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_complete_multipart_upload_failed \u00b6 Number of failed Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_complete_multipart_upload_failed_client_close \u00b6 Number of times Complete Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_complete_multipart_upload_latency \u00b6 Average latency for Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_latency Unit: microsec Type: average Base: complete_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_complete_multipart_upload_rate \u00b6 Number of Complete Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_complete_multipart_upload_total \u00b6 Number of Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_connected_connections \u00b6 Number of object store server connections currently established API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server connected_connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_connections \u00b6 Total number of object store server connections. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server connections Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_create_bucket_failed \u00b6 Number of failed Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_create_bucket_failed_client_close \u00b6 Number of times Create Bucket operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_create_bucket_latency \u00b6 Average latency for Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_latency Unit: microsec Type: average,no-zero-values Base: create_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_create_bucket_rate \u00b6 Number of Create Bucket operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_create_bucket_total \u00b6 Number of Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_default_deny_access \u00b6 Number of times access was denied by default and not through any policy statement. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server default_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_bucket_failed \u00b6 Number of failed Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_bucket_failed_client_close \u00b6 Number of times Delete Bucket operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_bucket_latency \u00b6 Average latency for Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_latency Unit: microsec Type: average,no-zero-values Base: delete_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_bucket_rate \u00b6 Number of Delete Bucket operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_bucket_total \u00b6 Number of Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_failed \u00b6 Number of failed DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_failed_client_close \u00b6 Number of times DELETE object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_latency \u00b6 Average latency for DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_latency Unit: microsec Type: average Base: delete_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_rate \u00b6 Number of DELETE object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_tagging_failed \u00b6 Number of failed DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_tagging_failed_client_close \u00b6 Number of times DELETE object tagging operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_tagging_latency \u00b6 Average latency for DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_latency Unit: microsec Type: average,no-zero-values Base: delete_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_tagging_rate \u00b6 Number of DELETE object tagging operations per sec. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_tagging_total \u00b6 Number of DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_delete_object_total \u00b6 Number of DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_explicit_deny_access \u00b6 Number of times access was denied explicitly by a policy statement. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server explicit_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_bucket_acl_failed \u00b6 Number of failed GET Bucket ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_acl_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_bucket_acl_total \u00b6 Number of GET Bucket ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_acl_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_bucket_versioning_failed \u00b6 Number of failed Get Bucket Versioning operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_versioning_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_bucket_versioning_total \u00b6 Number of Get Bucket Versioning operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_versioning_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_data \u00b6 Rate of GET object data transfers per second API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_acl_failed \u00b6 Number of failed GET Object ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_acl_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_acl_total \u00b6 Number of GET Object ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_acl_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_failed \u00b6 Number of failed GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_failed_client_close \u00b6 Number of times GET object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_lastbyte_latency \u00b6 Average last-byte latency for GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_lastbyte_latency Unit: microsec Type: average Base: get_object_lastbyte_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_latency \u00b6 Average first-byte latency for GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_latency Unit: microsec Type: average Base: get_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_rate \u00b6 Number of GET object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_tagging_failed \u00b6 Number of failed GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_tagging_failed_client_close \u00b6 Number of times GET object tagging operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_tagging_latency \u00b6 Average latency for GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_latency Unit: microsec Type: average Base: get_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_tagging_rate \u00b6 Number of GET object tagging operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_tagging_total \u00b6 Number of GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_get_object_total \u00b6 Number of GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_group_policy_evaluated \u00b6 Number of times group policies were evaluated. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server group_policy_evaluated Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_bucket_failed \u00b6 Number of failed HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_bucket_failed_client_close \u00b6 Number of times HEAD bucket operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_bucket_latency \u00b6 Average latency for HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_latency Unit: microsec Type: average Base: head_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_bucket_rate \u00b6 Number of HEAD bucket operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_bucket_total \u00b6 Number of HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_object_failed \u00b6 Number of failed HEAD Object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_object_failed_client_close \u00b6 Number of times HEAD object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_object_latency \u00b6 Average latency for HEAD object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_latency Unit: microsec Type: average Base: head_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_object_rate \u00b6 Number of HEAD Object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_head_object_total \u00b6 Number of HEAD Object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_initiate_multipart_upload_failed \u00b6 Number of failed Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_initiate_multipart_upload_failed_client_close \u00b6 Number of times Initiate Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_initiate_multipart_upload_latency \u00b6 Average latency for Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_latency Unit: microsec Type: average Base: initiate_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_initiate_multipart_upload_rate \u00b6 Number of Initiate Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_initiate_multipart_upload_total \u00b6 Number of Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_input_flow_control_entry \u00b6 Number of times input flow control was entered. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server input_flow_control_entry Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_input_flow_control_exit \u00b6 Number of times input flow control was exited. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server input_flow_control_exit Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_buckets_failed \u00b6 Number of failed LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_buckets_failed_client_close \u00b6 Number of times LIST Bucket operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_buckets_latency \u00b6 Average latency for LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_latency Unit: microsec Type: average Base: head_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_buckets_rate \u00b6 Number of LIST Buckets operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_buckets_total \u00b6 Number of LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_object_versions_failed \u00b6 Number of failed LIST object versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_object_versions_failed_client_close \u00b6 Number of times LIST object versions operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_object_versions_latency \u00b6 Average latency for LIST Object versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_latency Unit: microsec Type: average,no-zero-values Base: list_object_versions_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_object_versions_rate \u00b6 Number of LIST Object Versions operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_object_versions_total \u00b6 Number of LIST Object Versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_objects_failed \u00b6 Number of failed LIST objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_objects_failed_client_close \u00b6 Number of times LIST objects operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_objects_latency \u00b6 Average latency for LIST Objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_latency Unit: microsec Type: average Base: list_objects_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_objects_rate \u00b6 Number of LIST Objects operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_objects_total \u00b6 Number of LIST Objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_uploads_failed \u00b6 Number of failed LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_uploads_failed_client_close \u00b6 Number of times LIST Uploads operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_uploads_latency \u00b6 Average latency for LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_latency Unit: microsec Type: average Base: list_uploads_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_uploads_rate \u00b6 Number of LIST Uploads operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_list_uploads_total \u00b6 Number of LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_max_cmds_per_connection \u00b6 Maximum commands pipelined at any instance on a connection. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_cmds_per_connection Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_max_connected_connections \u00b6 Maximum number of object store server connections established at one time API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_connected_connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_max_requests_outstanding \u00b6 Maximum number of object store server requests in process at one time API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_requests_outstanding Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_multi_delete_reqs \u00b6 Total number of object store server multiple object delete requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server multi_delete_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_output_flow_control_entry \u00b6 Number of output flow control was entered. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server output_flow_control_entry Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_output_flow_control_exit \u00b6 Number of times output flow control was exited. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server output_flow_control_exit Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_presigned_url_reqs \u00b6 Total number of presigned object store server URL requests. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server presigned_url_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_bucket_versioning_failed \u00b6 Number of failed Put Bucket Versioning operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_bucket_versioning_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_bucket_versioning_total \u00b6 Number of Put Bucket Versioning operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_bucket_versioning_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_data \u00b6 Rate of PUT object data transfers per second API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_failed \u00b6 Number of failed PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_failed_client_close \u00b6 Number of times PUT object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_latency \u00b6 Average latency for PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_latency Unit: microsec Type: average Base: put_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_rate \u00b6 Number of PUT object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_tagging_failed \u00b6 Number of failed PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_tagging_failed_client_close \u00b6 Number of times PUT object tagging operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_tagging_latency \u00b6 Average latency for PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_latency Unit: microsec Type: average,no-zero-values Base: put_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_tagging_rate \u00b6 Number of PUT object tagging operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_tagging_total \u00b6 Number of PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_put_object_total \u00b6 Number of PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_request_parse_errors \u00b6 Number of request parser errors due to malformed requests. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server request_parse_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_requests \u00b6 Total number of object store server requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server requests Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_requests_outstanding \u00b6 Number of object store server requests in process API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server requests_outstanding Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_root_user_access \u00b6 Number of times access was done by root user. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server root_user_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_server_connection_close \u00b6 Number of connection closes triggered by server due to fatal errors. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server server_connection_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_signature_v2_reqs \u00b6 Total number of object store server signature V2 requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server signature_v2_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_signature_v4_reqs \u00b6 Total number of object store server signature V4 requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server signature_v4_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_tagging \u00b6 Number of requests with tagging specified. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server tagging Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_upload_part_failed \u00b6 Number of failed Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_upload_part_failed_client_close \u00b6 Number of times Upload Part operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_upload_part_latency \u00b6 Average latency for Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_latency Unit: microsec Type: average Base: upload_part_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_upload_part_rate \u00b6 Number of Upload Part operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml ontaps3_svm_upload_part_total \u00b6 Number of Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml path_read_data \u00b6 The average read throughput in kilobytes per second read from the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path read_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_read_iops \u00b6 The number of I/O read operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path read_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_read_latency \u00b6 The average latency of I/O read operations sent from this controller to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path read_latency Unit: microsec Type: average Base: read_iops conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_latency Unit: microsec Type: average Base: read_iops conf/zapiperf/cdot/9.8.0/path.yaml path_total_data \u00b6 The average throughput in kilobytes per second read and written from/to the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path total_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path total_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_total_iops \u00b6 The number of total read/write I/O operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path total_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path total_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_write_data \u00b6 The average write throughput in kilobytes per second written to the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path write_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_write_iops \u00b6 The number of I/O write operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path write_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml path_write_latency \u00b6 The average latency of I/O write operations sent from this controller to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path write_latency Unit: microsec Type: average Base: write_iops conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_latency Unit: microsec Type: average Base: write_iops conf/zapiperf/cdot/9.8.0/path.yaml qos_concurrency \u00b6 This is the average number of concurrent requests for the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos concurrency Unit: none Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload concurrency Unit: none Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_detail_resource_latency \u00b6 average latency for workload on Data ONTAP subsystems API Endpoint Metric Template REST api/cluster/counter/tables/qos_detail Harvest generated Unit: microseconds Type: Base: conf/restperf/9.12.0/workload_detail.yaml ZAPI perf-object-get-instances workload_detail Harvest generated Unit: microseconds Type: Base: conf/zapiperf/9.12.0/workload_detail.yaml qos_detail_volume_resource_latency \u00b6 average latency for volume on Data ONTAP subsystems API Endpoint Metric Template REST api/cluster/counter/tables/qos_detail_volume Harvest generated Unit: microseconds Type: Base: conf/restperf/9.12.0/workload_detail_volume.yaml ZAPI perf-object-get-instances workload_detail_volume Harvest generated Unit: microseconds Type: Base: conf/zapiperf/9.12.0/workload_detail_volume.yaml qos_latency \u00b6 This is the average response time for requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos latency Unit: microsec Type: average Base: ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/workload.yaml qos_ops \u00b6 Workload operations executed per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_read_data \u00b6 This is the amount of data read per second from the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_read_io_type \u00b6 This is the percentage of read requests served from various components (such as buffer cache, ext_cache, disk, etc.). API Endpoint Metric Template REST api/cluster/counter/tables/qos read_io_type_percent Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/workload.yaml qos_read_latency \u00b6 This is the average response time for read requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_latency Unit: microsec Type: average,no-zero-values Base: read_ops conf/zapiperf/cdot/9.8.0/workload.yaml qos_read_ops \u00b6 This is the rate of this workload's read operations that completed during the measurement interval. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_sequential_reads \u00b6 This is the percentage of reads, performed on behalf of the workload, that were sequential. API Endpoint Metric Template REST api/cluster/counter/tables/qos sequential_reads_percent Unit: percent Type: percent Base: sequential_reads_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload sequential_reads Unit: percent Type: percent,no-zero-values Base: sequential_reads_base conf/zapiperf/cdot/9.8.0/workload.yaml qos_sequential_writes \u00b6 This is the percentage of writes, performed on behalf of the workload, that were sequential. This counter is only available on platforms with more than 4GB of NVRAM. API Endpoint Metric Template REST api/cluster/counter/tables/qos sequential_writes_percent Unit: percent Type: percent Base: sequential_writes_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload sequential_writes Unit: percent Type: percent,no-zero-values Base: sequential_writes_base conf/zapiperf/cdot/9.8.0/workload.yaml qos_total_data \u00b6 This is the total amount of data read/written per second from/to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload total_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_volume_latency \u00b6 This is the average response time for requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume latency Unit: microsec Type: average Base: ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_ops \u00b6 This field is the workload's rate of operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_read_data \u00b6 This is the amount of data read per second from the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_read_io_type \u00b6 This is the percentage of read requests served from various components (such as buffer cache, ext_cache, disk, etc.). API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_io_type_percent Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_read_latency \u00b6 This is the average response time for read requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_latency Unit: microsec Type: average,no-zero-values Base: read_ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_read_ops \u00b6 This is the rate of this workload's read operations that completed during the measurement interval. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_sequential_reads \u00b6 This is the percentage of reads, performed on behalf of the workload, that were sequential. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume sequential_reads_percent Unit: percent Type: percent Base: sequential_reads_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume sequential_reads Unit: percent Type: percent,no-zero-values Base: sequential_reads_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_sequential_writes \u00b6 This is the percentage of writes, performed on behalf of the workload, that were sequential. This counter is only available on platforms with more than 4GB of NVRAM. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume sequential_writes_percent Unit: percent Type: percent Base: sequential_writes_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume sequential_writes Unit: percent Type: percent,no-zero-values Base: sequential_writes_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_total_data \u00b6 This is the total amount of data read/written per second from/to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume total_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_write_data \u00b6 This is the amount of data written per second to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_write_latency \u00b6 This is the average response time for write requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_latency Unit: microsec Type: average,no-zero-values Base: write_ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_volume_write_ops \u00b6 This is the workload's write operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml qos_write_data \u00b6 This is the amount of data written per second to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qos_write_latency \u00b6 This is the average response time for write requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_latency Unit: microsec Type: average,no-zero-values Base: write_ops conf/zapiperf/cdot/9.8.0/workload.yaml qos_write_ops \u00b6 This is the workload's write operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml qtree_cifs_ops \u00b6 Number of CIFS operations per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree cifs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml qtree_id \u00b6 The identifier for the qtree, unique within the qtree's volume. API Endpoint Metric Template REST api/storage/qtrees id conf/rest/9.12.0/qtree.yaml qtree_internal_ops \u00b6 Number of internal operations generated by activites such as snapmirror and backup per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree internal_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree internal_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml qtree_nfs_ops \u00b6 Number of NFS operations per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree nfs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree nfs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml qtree_total_ops \u00b6 Summation of NFS ops, CIFS ops, CSS ops and internal ops API Endpoint Metric Template REST api/cluster/counter/tables/qtree total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml quota_disk_limit \u00b6 Maximum amount of disk space, in kilobytes, allowed for the quota target (hard disk space limit). The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports space.hard_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_disk_used \u00b6 Current amount of disk space, in kilobytes, used by the quota target. API Endpoint Metric Template REST api/storage/quota/reports space.used.total conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used conf/zapi/cdot/9.8.0/qtree.yaml quota_disk_used_pct_disk_limit \u00b6 Current disk space used expressed as a percentage of hard disk limit. API Endpoint Metric Template REST api/storage/quota/reports space.used.hard_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used-pct-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_disk_used_pct_soft_disk_limit \u00b6 Current disk space used expressed as a percentage of soft disk limit. API Endpoint Metric Template REST api/storage/quota/reports space.used.soft_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used-pct-soft-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_disk_used_pct_threshold \u00b6 Current disk space used expressed as a percentage of threshold. API Endpoint Metric Template ZAPI quota-report-iter disk-used-pct-threshold conf/zapi/cdot/9.8.0/qtree.yaml quota_file_limit \u00b6 Maximum number of files allowed for the quota target (hard files limit). The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports files.hard_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter file-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_files_used \u00b6 Current number of files used by the quota target. API Endpoint Metric Template REST api/storage/quota/reports files.used.total conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used conf/zapi/cdot/9.8.0/qtree.yaml quota_files_used_pct_file_limit \u00b6 Current number of files used expressed as a percentage of hard file limit. API Endpoint Metric Template REST api/storage/quota/reports files.used.hard_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used-pct-file-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_files_used_pct_soft_file_limit \u00b6 Current number of files used expressed as a percentage of soft file limit. API Endpoint Metric Template REST api/storage/quota/reports files.used.soft_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used-pct-soft-file-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_soft_disk_limit \u00b6 soft disk space limit, in kilobytes, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports space.soft_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter soft-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_soft_file_limit \u00b6 Soft file limit, in number of files, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports files.soft_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter soft-file-limit conf/zapi/cdot/9.8.0/qtree.yaml quota_threshold \u00b6 Disk space threshold, in kilobytes, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template ZAPI quota-report-iter threshold conf/zapi/cdot/9.8.0/qtree.yaml security_audit_destination_port \u00b6 The destination port used to forward the message. API Endpoint Metric Template ZAPI cluster-log-forward-get-iter cluster-log-forward-info.port conf/zapi/cdot/9.8.0/security_audit_dest.yaml security_certificate_expiry_time \u00b6 Certificate expiration time. Can be provided on POST if creating self-signed certificate. The expiration time range is between 1 day to 10 years. API Endpoint Metric Template REST api/security/certificates expiry_time conf/rest/9.12.0/security_certificate.yaml ZAPI security-certificate-get-iter certificate-info.expiration-date conf/zapi/cdot/9.8.0/security_certificate.yaml security_ssh_max_instances \u00b6 Maximum possible simultaneous connections. API Endpoint Metric Template REST api/security/ssh max_instances conf/rest/9.12.0/security_ssh.yaml shelf_average_ambient_temperature \u00b6 Average temperature of all ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_average_fan_speed \u00b6 Average fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_average_temperature \u00b6 Average temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_disk_count \u00b6 Disk count in a shelf. API Endpoint Metric Template REST api/storage/shelves disk_count conf/rest/9.12.0/shelf.yaml ZAPI storage-shelf-info-get-iter storage-shelf-info.disk-count conf/zapi/cdot/9.8.0/shelf.yaml shelf_max_fan_speed \u00b6 Maximum fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_max_temperature \u00b6 Maximum temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_min_ambient_temperature \u00b6 Minimum temperature of all ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_min_fan_speed \u00b6 Minimum fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_min_temperature \u00b6 Minimum temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml shelf_power \u00b6 Power consumed by shelf in Watts. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml smb2_close_latency \u00b6 Average latency for SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_latency Unit: microsec Type: average Base: close_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_close_latency_histogram \u00b6 Latency histogram for SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_close_ops \u00b6 Number of SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_create_latency \u00b6 Average latency for SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_latency Unit: microsec Type: average Base: create_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_create_latency_histogram \u00b6 Latency histogram for SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_create_ops \u00b6 Number of SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_lock_latency \u00b6 Average latency for SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_latency Unit: microsec Type: average Base: lock_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_lock_latency_histogram \u00b6 Latency histogram for SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_lock_ops \u00b6 Number of SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_negotiate_latency \u00b6 Average latency for SMB2_COM_NEGOTIATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 negotiate_latency Unit: microsec Type: average Base: negotiate_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_negotiate_ops \u00b6 Number of SMB2_COM_NEGOTIATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 negotiate_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_oplock_break_latency \u00b6 Average latency for SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_latency Unit: microsec Type: average Base: oplock_break_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_oplock_break_latency_histogram \u00b6 Latency histogram for SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_oplock_break_ops \u00b6 Number of SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_directory_latency \u00b6 Average latency for SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_latency Unit: microsec Type: average Base: query_directory_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_directory_latency_histogram \u00b6 Latency histogram for SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_directory_ops \u00b6 Number of SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_info_latency \u00b6 Average latency for SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_latency Unit: microsec Type: average Base: query_info_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_info_latency_histogram \u00b6 Latency histogram for SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_query_info_ops \u00b6 Number of SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_read_latency \u00b6 Average latency for SMB2_COM_READ operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_read_ops \u00b6 Number of SMB2_COM_READ operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_session_setup_latency \u00b6 Average latency for SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_latency Unit: microsec Type: average Base: session_setup_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_session_setup_latency_histogram \u00b6 Latency histogram for SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_session_setup_ops \u00b6 Number of SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_set_info_latency \u00b6 Average latency for SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_latency Unit: microsec Type: average Base: set_info_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_set_info_latency_histogram \u00b6 Latency histogram for SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_set_info_ops \u00b6 Number of SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_tree_connect_latency \u00b6 Average latency for SMB2_COM_TREE_CONNECT operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 tree_connect_latency Unit: microsec Type: average Base: tree_connect_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_tree_connect_ops \u00b6 Number of SMB2_COM_TREE_CONNECT operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 tree_connect_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_write_latency \u00b6 Average latency for SMB2_COM_WRITE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 write_latency Unit: microsec Type: average Base: write_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml smb2_write_ops \u00b6 Number of SMB2_COM_WRITE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml snapmirror_break_failed_count \u00b6 The number of failed SnapMirror break operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror break_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.break-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_break_successful_count \u00b6 The number of successful SnapMirror break operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror break_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.break-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_lag_time \u00b6 Amount of time since the last snapmirror transfer in seconds API Endpoint Metric Template REST api/private/cli/snapmirror lag_time conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.lag-time conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_last_transfer_duration \u00b6 Duration of the last SnapMirror transfer in seconds API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_duration conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-duration conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_last_transfer_end_timestamp \u00b6 The Timestamp of the end of the last transfer API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_end_timestamp conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-end-timestamp conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_last_transfer_size \u00b6 Size in kilobytes (1024 bytes) of the last transfer API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_size conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-size conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_newest_snapshot_timestamp \u00b6 The timestamp of the newest Snapshot copy on the destination volume API Endpoint Metric Template REST api/private/cli/snapmirror newest_snapshot_timestamp conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.newest-snapshot-timestamp conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_resync_failed_count \u00b6 The number of failed SnapMirror resync operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror resync_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.resync-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_resync_successful_count \u00b6 The number of successful SnapMirror resync operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror resync_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.resync-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_total_transfer_bytes \u00b6 Cumulative bytes transferred for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror total_transfer_bytes conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.total-transfer-bytes conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_total_transfer_time_secs \u00b6 Cumulative total transfer time in seconds for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror total_transfer_time_secs conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.total-transfer-time-secs conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_update_failed_count \u00b6 The number of successful SnapMirror update operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror update_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.update-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapmirror_update_successful_count \u00b6 Number of Successful Updates API Endpoint Metric Template REST api/private/cli/snapmirror update_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.update-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml snapshot_policy_total_schedules \u00b6 Total Number of Schedules in this Policy API Endpoint Metric Template REST api/private/cli/snapshot/policy total_schedules conf/rest/9.12.0/snapshotpolicy.yaml ZAPI snapshot-policy-get-iter snapshot-policy-info.total-schedules conf/zapi/cdot/9.8.0/snapshotpolicy.yaml svm_cifs_connections \u00b6 Number of connections API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs connections Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_established_sessions \u00b6 Number of established SMB and SMB2 sessions API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs established_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver established_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_latency \u00b6 Average latency for CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs latency Unit: microsec Type: average Base: latency_base conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_latency Unit: microsec Type: average Base: cifs_latency_base conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_op_count \u00b6 Array of select CIFS operation counts API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs op_count Unit: none Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_op_count Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_open_files \u00b6 Number of open files over SMB and SMB2 API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs open_files Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver open_files Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_ops \u00b6 Total number of CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_read_latency \u00b6 Average latency for CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs average_read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_read_ops \u00b6 Total number of CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_signed_sessions \u00b6 Number of signed SMB and SMB2 sessions. API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs signed_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver signed_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_write_latency \u00b6 Average latency for CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs average_write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_cifs_write_ops \u00b6 Total number of CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml svm_nfs_access_avg_latency \u00b6 Average latency of NFSv4.2 ACCESS operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 access.average_latency Unit: microsec Type: average Base: access.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 access_avg_latency Unit: microsec Type: average,no-zero-values Base: access_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_access_total \u00b6 Total number of NFSv4.2 ACCESS operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 access.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 access_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_backchannel_ctl_avg_latency \u00b6 Average latency of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 backchannel_ctl.average_latency Unit: microsec Type: average Base: backchannel_ctl.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 backchannel_ctl_avg_latency Unit: microsec Type: average,no-zero-values Base: backchannel_ctl_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_backchannel_ctl_total \u00b6 Total number of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 backchannel_ctl.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 backchannel_ctl_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_bind_conn_to_session_avg_latency \u00b6 Average latency of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 bind_conn_to_session.average_latency Unit: microsec Type: average Base: bind_conn_to_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 bind_conn_to_session_avg_latency Unit: microsec Type: average,no-zero-values Base: bind_conn_to_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_bind_conn_to_session_total \u00b6 Total number of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 bind_conn_to_session.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 bind_conn_to_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_close_avg_latency \u00b6 Average latency of NFSv4.2 CLOSE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 close.average_latency Unit: microsec Type: average Base: close.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 close_avg_latency Unit: microsec Type: average,no-zero-values Base: close_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_close_total \u00b6 Total number of NFSv4.2 CLOSE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 close.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 close_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_commit_avg_latency \u00b6 Average latency of NFSv4.2 COMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 commit.average_latency Unit: microsec Type: average Base: commit.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 commit_avg_latency Unit: microsec Type: average,no-zero-values Base: commit_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_commit_total \u00b6 Total number of NFSv4.2 COMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 commit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 commit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_create_avg_latency \u00b6 Average latency of NFSv4.2 CREATE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create.average_latency Unit: microsec Type: average Base: create.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_avg_latency Unit: microsec Type: average,no-zero-values Base: create_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_create_session_avg_latency \u00b6 Average latency of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create_session.average_latency Unit: microsec Type: average Base: create_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_session_avg_latency Unit: microsec Type: average,no-zero-values Base: create_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_create_session_total \u00b6 Total number of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_create_total \u00b6 Total number of NFSv4.2 CREATE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_delegpurge_avg_latency \u00b6 Average latency of NFSv4.2 DELEGPURGE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegpurge.average_latency Unit: microsec Type: average Base: delegpurge.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegpurge_avg_latency Unit: microsec Type: average,no-zero-values Base: delegpurge_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_delegpurge_total \u00b6 Total number of NFSv4.2 DELEGPURGE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegpurge.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegpurge_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_delegreturn_avg_latency \u00b6 Average latency of NFSv4.2 DELEGRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegreturn.average_latency Unit: microsec Type: average Base: delegreturn.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: delegreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_delegreturn_total \u00b6 Total number of NFSv4.2 DELEGRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_destroy_clientid_avg_latency \u00b6 Average latency of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_clientid.average_latency Unit: microsec Type: average Base: destroy_clientid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_clientid_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_clientid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_destroy_clientid_total \u00b6 Total number of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_clientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_clientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_destroy_session_avg_latency \u00b6 Average latency of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_session.average_latency Unit: microsec Type: average Base: destroy_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_session_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_destroy_session_total \u00b6 Total number of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_exchange_id_avg_latency \u00b6 Average latency of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 exchange_id.average_latency Unit: microsec Type: average Base: exchange_id.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 exchange_id_avg_latency Unit: microsec Type: average,no-zero-values Base: exchange_id_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_exchange_id_total \u00b6 Total number of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 exchange_id.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 exchange_id_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_free_stateid_avg_latency \u00b6 Average latency of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 free_stateid.average_latency Unit: microsec Type: average Base: free_stateid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 free_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: free_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_free_stateid_total \u00b6 Total number of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 free_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 free_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_fsinfo_avg_latency \u00b6 Average latency of FSInfo procedure requests. The counter keeps track of the average response time of FSInfo requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsinfo.average_latency Unit: microsec Type: average Base: fsinfo.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: fsinfo_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_fsinfo_total \u00b6 Total number FSInfo of procedure requests. It is the total number of FSInfo success and FSInfo error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_fsstat_avg_latency \u00b6 Average latency of FSStat procedure requests. The counter keeps track of the average response time of FSStat requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsstat.average_latency Unit: microsec Type: average Base: fsstat.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsstat_avg_latency Unit: microsec Type: average,no-zero-values Base: fsstat_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_fsstat_total \u00b6 Total number FSStat of procedure requests. It is the total number of FSStat success and FSStat error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsstat.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsstat_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_get_dir_delegation_avg_latency \u00b6 Average latency of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 get_dir_delegation.average_latency Unit: microsec Type: average Base: get_dir_delegation.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 get_dir_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: get_dir_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_get_dir_delegation_total \u00b6 Total number of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 get_dir_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 get_dir_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getattr_avg_latency \u00b6 Average latency of NFSv4.2 GETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getattr.average_latency Unit: microsec Type: average Base: getattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getattr_avg_latency Unit: microsec Type: average,no-zero-values Base: getattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getattr_total \u00b6 Total number of NFSv4.2 GETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getdeviceinfo_avg_latency \u00b6 Average latency of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdeviceinfo.average_latency Unit: microsec Type: average Base: getdeviceinfo.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdeviceinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: getdeviceinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getdeviceinfo_total \u00b6 Total number of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdeviceinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdeviceinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getdevicelist_avg_latency \u00b6 Average latency of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdevicelist.average_latency Unit: microsec Type: average Base: getdevicelist.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdevicelist_avg_latency Unit: microsec Type: average,no-zero-values Base: getdevicelist_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getdevicelist_total \u00b6 Total number of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdevicelist.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdevicelist_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getfh_avg_latency \u00b6 Average latency of NFSv4.2 GETFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getfh.average_latency Unit: microsec Type: average Base: getfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getfh_avg_latency Unit: microsec Type: average,no-zero-values Base: getfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_getfh_total \u00b6 Total number of NFSv4.2 GETFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_latency \u00b6 Average latency of nfsv42 requests. This counter keeps track of the average response time of nfsv42 requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 latency Unit: microsec Type: average,no-zero-values Base: total_ops conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutcommit_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutcommit.average_latency Unit: microsec Type: average Base: layoutcommit.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutcommit_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutcommit_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutcommit_total \u00b6 Total number of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutcommit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutcommit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutget_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutget.average_latency Unit: microsec Type: average Base: layoutget.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutget_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutget_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutget_total \u00b6 Total number of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutget.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutget_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutreturn_avg_latency \u00b6 Average latency of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutreturn.average_latency Unit: microsec Type: average Base: layoutreturn.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_layoutreturn_total \u00b6 Total number of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_link_avg_latency \u00b6 Average latency of NFSv4.2 LINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 link.average_latency Unit: microsec Type: average Base: link.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 link_avg_latency Unit: microsec Type: average,no-zero-values Base: link_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_link_total \u00b6 Total number of NFSv4.2 LINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 link.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 link_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lock_avg_latency \u00b6 Average latency of NFSv4.2 LOCK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lock.average_latency Unit: microsec Type: average Base: lock.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lock_avg_latency Unit: microsec Type: average,no-zero-values Base: lock_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lock_total \u00b6 Total number of NFSv4.2 LOCK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lock.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lock_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lockt_avg_latency \u00b6 Average latency of NFSv4.2 LOCKT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lockt.average_latency Unit: microsec Type: average Base: lockt.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lockt_avg_latency Unit: microsec Type: average,no-zero-values Base: lockt_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lockt_total \u00b6 Total number of NFSv4.2 LOCKT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lockt.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lockt_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_locku_avg_latency \u00b6 Average latency of NFSv4.2 LOCKU operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 locku.average_latency Unit: microsec Type: average Base: locku.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 locku_avg_latency Unit: microsec Type: average,no-zero-values Base: locku_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_locku_total \u00b6 Total number of NFSv4.2 LOCKU operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 locku.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 locku_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lookup_avg_latency \u00b6 Average latency of NFSv4.2 LOOKUP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookup.average_latency Unit: microsec Type: average Base: lookup.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookup_avg_latency Unit: microsec Type: average,no-zero-values Base: lookup_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lookup_total \u00b6 Total number of NFSv4.2 LOOKUP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookup.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookup_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lookupp_avg_latency \u00b6 Average latency of NFSv4.2 LOOKUPP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookupp.average_latency Unit: microsec Type: average Base: lookupp.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookupp_avg_latency Unit: microsec Type: average,no-zero-values Base: lookupp_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_lookupp_total \u00b6 Total number of NFSv4.2 LOOKUPP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookupp.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookupp_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_mkdir_avg_latency \u00b6 Average latency of MkDir procedure requests. The counter keeps track of the average response time of MkDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mkdir.average_latency Unit: microsec Type: average Base: mkdir.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mkdir_avg_latency Unit: microsec Type: average,no-zero-values Base: mkdir_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_mkdir_total \u00b6 Total number MkDir of procedure requests. It is the total number of MkDir success and MkDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mkdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mkdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_mknod_avg_latency \u00b6 Average latency of MkNod procedure requests. The counter keeps track of the average response time of MkNod requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mknod.average_latency Unit: microsec Type: average Base: mknod.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mknod_avg_latency Unit: microsec Type: average,no-zero-values Base: mknod_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_mknod_total \u00b6 Total number MkNod of procedure requests. It is the total number of MkNod success and MkNod error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mknod.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mknod_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_null_avg_latency \u00b6 Average latency of NFSv4.2 NULL procedures. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 null.average_latency Unit: microsec Type: average Base: null.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 null_avg_latency Unit: microsec Type: average,no-zero-values Base: null_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_null_total \u00b6 Total number of NFSv4.2 NULL procedures. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 null.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 null_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_nverify_avg_latency \u00b6 Average latency of NFSv4.2 NVERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 nverify.average_latency Unit: microsec Type: average Base: nverify.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nverify_avg_latency Unit: microsec Type: average,no-zero-values Base: nverify_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_nverify_total \u00b6 Total number of NFSv4.2 NVERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 nverify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nverify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_open_avg_latency \u00b6 Average latency of NFSv4.2 OPEN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open.average_latency Unit: microsec Type: average Base: open.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_avg_latency Unit: microsec Type: average,no-zero-values Base: open_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_open_confirm_avg_latency \u00b6 Average latency of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 open_confirm.average_latency Unit: microsec Type: average Base: open_confirm.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 open_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: open_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_open_confirm_total \u00b6 Total number of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 open_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 open_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_open_downgrade_avg_latency \u00b6 Average latency of NFSv4.2 OPEN_DOWNGRADE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open_downgrade.average_latency Unit: microsec Type: average Base: open_downgrade.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_downgrade_avg_latency Unit: microsec Type: average,no-zero-values Base: open_downgrade_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_open_downgrade_total \u00b6 Total number of NFSv4.2 OPEN_DOWNGRADE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open_downgrade.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_downgrade_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_open_total \u00b6 Total number of NFSv4.2 OPEN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_openattr_avg_latency \u00b6 Average latency of NFSv4.2 OPENATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 openattr.average_latency Unit: microsec Type: average Base: openattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 openattr_avg_latency Unit: microsec Type: average,no-zero-values Base: openattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_openattr_total \u00b6 Total number of NFSv4.2 OPENATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 openattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 openattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_ops \u00b6 Total number of nfsv42 requests per sec. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 total_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_pathconf_avg_latency \u00b6 Average latency of PathConf procedure requests. The counter keeps track of the average response time of PathConf requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 pathconf.average_latency Unit: microsec Type: average Base: pathconf.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 pathconf_avg_latency Unit: microsec Type: average,no-zero-values Base: pathconf_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_pathconf_total \u00b6 Total number PathConf of procedure requests. It is the total number of PathConf success and PathConf error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 pathconf.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 pathconf_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_putfh_avg_latency \u00b6 Average latency of NFSv4.2 PUTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putfh.average_latency Unit: microsec Type: average Base: putfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_putfh_total \u00b6 Total number of NFSv4.2 PUTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_putpubfh_avg_latency \u00b6 Average latency of NFSv4.2 PUTPUBFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putpubfh.average_latency Unit: microsec Type: average Base: putpubfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putpubfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putpubfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_putpubfh_total \u00b6 Total number of NFSv4.2 PUTPUBFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putpubfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putpubfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_putrootfh_avg_latency \u00b6 Average latency of NFSv4.2 PUTROOTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putrootfh.average_latency Unit: microsec Type: average Base: putrootfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putrootfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putrootfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_putrootfh_total \u00b6 Total number of NFSv4.2 PUTROOTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putrootfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putrootfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_read_avg_latency \u00b6 Average latency of NFSv4.2 READ operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 read.average_latency Unit: microsec Type: average Base: read.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 read_avg_latency Unit: microsec Type: average,no-zero-values Base: read_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_read_ops \u00b6 Total observed NFSv3 read operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 nfsv3_read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_read_symlink_avg_latency \u00b6 Average latency of ReadSymLink procedure requests. The counter keeps track of the average response time of ReadSymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_symlink.average_latency Unit: microsec Type: average Base: read_symlink.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 read_symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: read_symlink_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_read_symlink_total \u00b6 Total number of ReadSymLink procedure requests. It is the total number of read symlink success and read symlink error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_symlink.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 read_symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_read_throughput \u00b6 NFSv4.2 read data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.read_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_read_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_read_total \u00b6 Total number of NFSv4.2 READ operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 read.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 read_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_readdir_avg_latency \u00b6 Average latency of NFSv4.2 READDIR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readdir.average_latency Unit: microsec Type: average Base: readdir.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readdir_avg_latency Unit: microsec Type: average,no-zero-values Base: readdir_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_readdir_total \u00b6 Total number of NFSv4.2 READDIR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_readdirplus_avg_latency \u00b6 Average latency of ReadDirPlus procedure requests. The counter keeps track of the average response time of ReadDirPlus requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 readdirplus.average_latency Unit: microsec Type: average Base: readdirplus.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 readdirplus_avg_latency Unit: microsec Type: average,no-zero-values Base: readdirplus_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_readdirplus_total \u00b6 Total number ReadDirPlus of procedure requests. It is the total number of ReadDirPlus success and ReadDirPlus error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 readdirplus.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 readdirplus_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_readlink_avg_latency \u00b6 Average latency of NFSv4.2 READLINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readlink.average_latency Unit: microsec Type: average Base: readlink.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readlink_avg_latency Unit: microsec Type: average,no-zero-values Base: readlink_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_readlink_total \u00b6 Total number of NFSv4.2 READLINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_reclaim_complete_avg_latency \u00b6 Average latency of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 reclaim_complete.average_latency Unit: microsec Type: average Base: reclaim_complete.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 reclaim_complete_avg_latency Unit: microsec Type: average,no-zero-values Base: reclaim_complete_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_reclaim_complete_total \u00b6 Total number of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 reclaim_complete.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 reclaim_complete_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_release_lock_owner_avg_latency \u00b6 Average Latency of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 release_lock_owner.average_latency Unit: microsec Type: average Base: release_lock_owner.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 release_lock_owner_avg_latency Unit: microsec Type: average,no-zero-values Base: release_lock_owner_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_release_lock_owner_total \u00b6 Total number of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 release_lock_owner.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 release_lock_owner_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_remove_avg_latency \u00b6 Average latency of NFSv4.2 REMOVE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 remove.average_latency Unit: microsec Type: average Base: remove.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 remove_avg_latency Unit: microsec Type: average,no-zero-values Base: remove_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_remove_total \u00b6 Total number of NFSv4.2 REMOVE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 remove.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 remove_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_rename_avg_latency \u00b6 Average latency of NFSv4.2 RENAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 rename.average_latency Unit: microsec Type: average Base: rename.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 rename_avg_latency Unit: microsec Type: average,no-zero-values Base: rename_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_rename_total \u00b6 Total number of NFSv4.2 RENAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 rename.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 rename_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_renew_avg_latency \u00b6 Average latency of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 renew.average_latency Unit: microsec Type: average Base: renew.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 renew_avg_latency Unit: microsec Type: average,no-zero-values Base: renew_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_renew_total \u00b6 Total number of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 renew.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 renew_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_restorefh_avg_latency \u00b6 Average latency of NFSv4.2 RESTOREFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 restorefh.average_latency Unit: microsec Type: average Base: restorefh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 restorefh_avg_latency Unit: microsec Type: average,no-zero-values Base: restorefh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_restorefh_total \u00b6 Total number of NFSv4.2 RESTOREFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 restorefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 restorefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_rmdir_avg_latency \u00b6 Average latency of RmDir procedure requests. The counter keeps track of the average response time of RmDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 rmdir.average_latency Unit: microsec Type: average Base: rmdir.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 rmdir_avg_latency Unit: microsec Type: average,no-zero-values Base: rmdir_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_rmdir_total \u00b6 Total number RmDir of procedure requests. It is the total number of RmDir success and RmDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 rmdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 rmdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_savefh_avg_latency \u00b6 Average latency of NFSv4.2 SAVEFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 savefh.average_latency Unit: microsec Type: average Base: savefh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 savefh_avg_latency Unit: microsec Type: average,no-zero-values Base: savefh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_savefh_total \u00b6 Total number of NFSv4.2 SAVEFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 savefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 savefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_secinfo_avg_latency \u00b6 Average latency of NFSv4.2 SECINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo.average_latency Unit: microsec Type: average Base: secinfo.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_secinfo_no_name_avg_latency \u00b6 Average latency of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo_no_name.average_latency Unit: microsec Type: average Base: secinfo_no_name.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_no_name_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_no_name_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_secinfo_no_name_total \u00b6 Total number of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo_no_name.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_no_name_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_secinfo_total \u00b6 Total number of NFSv4.2 SECINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_sequence_avg_latency \u00b6 Average latency of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 sequence.average_latency Unit: microsec Type: average Base: sequence.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 sequence_avg_latency Unit: microsec Type: average,no-zero-values Base: sequence_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_sequence_total \u00b6 Total number of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 sequence.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 sequence_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_set_ssv_avg_latency \u00b6 Average latency of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 set_ssv.average_latency Unit: microsec Type: average Base: set_ssv.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 set_ssv_avg_latency Unit: microsec Type: average,no-zero-values Base: set_ssv_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_set_ssv_total \u00b6 Total number of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 set_ssv.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 set_ssv_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_setattr_avg_latency \u00b6 Average latency of NFSv4.2 SETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 setattr.average_latency Unit: microsec Type: average Base: setattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 setattr_avg_latency Unit: microsec Type: average,no-zero-values Base: setattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_setattr_total \u00b6 Total number of NFSv4.2 SETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 setattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 setattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_setclientid_avg_latency \u00b6 Average latency of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid.average_latency Unit: microsec Type: average Base: setclientid.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_setclientid_confirm_avg_latency \u00b6 Average latency of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid_confirm.average_latency Unit: microsec Type: average Base: setclientid_confirm.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_setclientid_confirm_total \u00b6 Total number of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_setclientid_total \u00b6 Total number of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml svm_nfs_symlink_avg_latency \u00b6 Average latency of SymLink procedure requests. The counter keeps track of the average response time of SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 symlink.average_latency Unit: microsec Type: average Base: symlink.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: symlink_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_symlink_total \u00b6 Total number SymLink of procedure requests. It is the total number of SymLink success and create SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 symlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_test_stateid_avg_latency \u00b6 Average latency of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 test_stateid.average_latency Unit: microsec Type: average Base: test_stateid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 test_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: test_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_test_stateid_total \u00b6 Total number of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 test_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 test_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_throughput \u00b6 NFSv4.2 write data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.write_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_verify_avg_latency \u00b6 Average latency of NFSv4.2 VERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 verify.average_latency Unit: microsec Type: average Base: verify.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 verify_avg_latency Unit: microsec Type: average,no-zero-values Base: verify_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_verify_total \u00b6 Total number of NFSv4.2 VERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 verify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 verify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_want_delegation_avg_latency \u00b6 Average latency of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 want_delegation.average_latency Unit: microsec Type: average Base: want_delegation.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 want_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: want_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_want_delegation_total \u00b6 Total number of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 want_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 want_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_write_avg_latency \u00b6 Average latency of NFSv4.2 WRITE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 write.average_latency Unit: microsec Type: average Base: write.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 write_avg_latency Unit: microsec Type: average,no-zero-values Base: write_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_write_ops \u00b6 Total observed NFSv3 write operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 nfsv3_write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml svm_nfs_write_throughput \u00b6 NFSv4.2 data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_write_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_nfs_write_total \u00b6 Total number of NFSv4.2 WRITE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 write.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 write_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml svm_vol_avg_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process all the operations on the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_other_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process other operations to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm other_latency Unit: microsec Type: average Base: total_other_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_other_ops \u00b6 Number of other operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_read_data \u00b6 Bytes read per second API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm bytes_read Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_read_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_read_ops \u00b6 Number of read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_total_ops \u00b6 Number of operations per second serviced by the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_write_data \u00b6 Bytes written per second API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm bytes_written Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_write_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vol_write_ops \u00b6 Number of write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml svm_vscan_connections_active \u00b6 Total number of current active connections API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan connections_active Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml svm_vscan_dispatch_latency \u00b6 Average dispatch latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan dispatch_latency Unit: microsec Type: average Base: dispatch_latency_base conf/zapiperf/cdot/9.8.0/vscan_svm.yaml svm_vscan_scan_latency \u00b6 Average scan latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_latency Unit: microsec Type: average Base: scan_latency_base conf/zapiperf/cdot/9.8.0/vscan_svm.yaml svm_vscan_scan_noti_received_rate \u00b6 Total number of scan notifications received by the dispatcher per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_noti_received_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml svm_vscan_scan_request_dispatched_rate \u00b6 Total number of scan requests sent to the Vscanner per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_request_dispatched_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml token_copy_bytes \u00b6 Total number of bytes copied. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_copy_failure \u00b6 Number of failed token copy requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_copy_success \u00b6 Number of successful token copy requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_create_bytes \u00b6 Total number of bytes for which tokens are created. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_create_failure \u00b6 Number of failed token create requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_create_success \u00b6 Number of successful token create requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_zero_bytes \u00b6 Total number of bytes zeroed. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_zero_failure \u00b6 Number of failed token zero requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml token_zero_success \u00b6 Number of successful token zero requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml volume_autosize_grow_threshold_percent \u00b6 Used space threshold size, in percentage, for the automatic growth of the volume. When the amount of used space in the volume becomes greater than this threhold, the volume automatically grows unless it has reached the maximum size. The volume grows when 'space.used' is greater than this percent of 'space.size'. The 'grow_threshold' size cannot be less than or equal to the 'shrink_threshold' size.. API Endpoint Metric Template REST api/storage/volumes autosize.grow_threshold conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-autosize-attributes.grow-threshold-percent conf/zapi/cdot/9.8.0/volume.yaml volume_autosize_maximum_size \u00b6 Maximum size in bytes up to which a volume grows automatically. This size cannot be less than the current volume size, or less than or equal to the minimum size of volume. API Endpoint Metric Template REST api/storage/volumes autosize.maximum conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-autosize-attributes.maximum-size conf/zapi/cdot/9.8.0/volume.yaml volume_avg_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process all the operations on the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/volume.yaml volume_filesystem_size \u00b6 Total usable size of the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.filesystem_size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.filesystem-size conf/zapi/cdot/9.8.0/volume.yaml volume_inode_files_total \u00b6 Total user-visible file (inode) count, i.e., current maximum number of user-visible files (inodes) that this volume can currently hold. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-inode-attributes.files-total conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume files conf/rest/9.12.0/volume.yaml volume_inode_files_used \u00b6 Number of user-visible files (inodes) used. This field is valid only when the volume is online. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-inode-attributes.files-used conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume files_used conf/rest/9.12.0/volume.yaml volume_inode_used_percent \u00b6 volume_inode_files_used / volume_inode_total API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml volume_other_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process other operations to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume other_latency Unit: microsec Type: average Base: total_other_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/volume.yaml volume_other_ops \u00b6 Number of other operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml volume_overwrite_reserve_available \u00b6 amount of storage space that is currently available for overwrites, calculated by subtracting the total amount of overwrite reserve space from the amount that has already been used. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml volume_overwrite_reserve_total \u00b6 Reserved space for overwrites, in bytes. API Endpoint Metric Template REST api/storage/volumes space.overwrite_reserve conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.overwrite-reserve conf/zapi/cdot/9.8.0/volume.yaml volume_overwrite_reserve_used \u00b6 Overwrite logical reserve space used, in bytes. API Endpoint Metric Template REST api/storage/volumes space.overwrite_reserve_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.overwrite-reserve-used conf/zapi/cdot/9.8.0/volume.yaml volume_read_data \u00b6 Bytes read per second API Endpoint Metric Template REST api/cluster/counter/tables/volume bytes_read Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml volume_read_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume.yaml volume_read_ops \u00b6 Number of read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml volume_sis_compress_saved \u00b6 The total disk space (in bytes) that is saved by compressing blocks on the referenced file system. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.compression-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume compression_space_saved conf/rest/9.12.0/volume.yaml volume_sis_compress_saved_percent \u00b6 Percentage of the total disk space that is saved by compressing blocks on the referenced file system API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-compression-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume compression_space_saved_percent conf/rest/9.12.0/volume.yaml volume_sis_dedup_saved \u00b6 The total disk space (in bytes) that is saved by deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.deduplication-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume dedupe_space_saved conf/rest/9.12.0/volume.yaml volume_sis_dedup_saved_percent \u00b6 Percentage of the total disk space that is saved by deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-deduplication-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume dedupe_space_saved_percent conf/rest/9.12.0/volume.yaml volume_sis_total_saved \u00b6 Total space saved (in bytes) in the volume due to deduplication, compression, and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.total-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume sis_space_saved conf/rest/9.12.0/volume.yaml volume_sis_total_saved_percent \u00b6 Percentage of total disk space that is saved by compressing blocks, deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-total-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume sis_space_saved_percent conf/rest/9.12.0/volume.yaml volume_size \u00b6 Total provisioned size. The default size is equal to the minimum size of 20MB, in bytes. API Endpoint Metric Template REST api/storage/volumes space.size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size conf/zapi/cdot/9.8.0/volume.yaml volume_size_available \u00b6 The available space, in bytes. API Endpoint Metric Template REST api/storage/volumes space.available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-available conf/zapi/cdot/9.8.0/volume.yaml volume_size_total \u00b6 Total size of AFS, excluding snap-reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.afs_total conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-total conf/zapi/cdot/9.8.0/volume.yaml volume_size_used \u00b6 The virtual space used (includes volume reserves) before storage efficiency, in bytes. API Endpoint Metric Template REST api/storage/volumes space.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-used conf/zapi/cdot/9.8.0/volume.yaml volume_size_used_percent \u00b6 percentage of utilized storage space in a volume relative to its total capacity API Endpoint Metric Template REST api/storage/volumes space.percent_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-size-used conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_count \u00b6 Number of Snapshot copies in the volume. API Endpoint Metric Template REST api/storage/volumes snapshot_count conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-snapshot-attributes.snapshot-count conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_reserve_available \u00b6 Size available for Snapshot copies within the Snapshot copy reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.snapshot-reserve-available conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_reserve_percent \u00b6 The space that has been set aside as a reserve for Snapshot copy usage, in percent. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-snapshot-reserve conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_reserve_size \u00b6 Size in the volume that has been set aside as a reserve for Snapshot copy usage, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.snapshot-reserve-size conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_reserve_used \u00b6 amount of storage space currently used by a volume's snapshot reserve, which is calculated by subtracting the snapshot reserve available space from the snapshot reserve size. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml volume_snapshot_reserve_used_percent \u00b6 Percentage of snapshot reserve size that has been used. API Endpoint Metric Template REST api/storage/volumes space.snapshot.space_used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-snapshot-reserve-used conf/zapi/cdot/9.8.0/volume.yaml volume_snapshots_size_available \u00b6 Available space for Snapshot copies from snap-reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.size_available_for_snapshots conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-available-for-snapshots conf/zapi/cdot/9.8.0/volume.yaml volume_snapshots_size_used \u00b6 The total space used by Snapshot copies in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-used-by-snapshots conf/zapi/cdot/9.8.0/volume.yaml volume_space_expected_available \u00b6 Size that should be available for the volume, irrespective of available size in the aggregate, in bytes. API Endpoint Metric Template REST api/storage/volumes space.expected_available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.expected-available conf/zapi/cdot/9.8.0/volume.yaml volume_space_logical_available \u00b6 The amount of space available in this volume with storage efficiency space considered used, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-available conf/zapi/cdot/9.8.0/volume.yaml volume_space_logical_used \u00b6 SUM of (physical-used, shared_refs, compression_saved_in_plane0, vbn_zero, future_blk_cnt), in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used conf/zapi/cdot/9.8.0/volume.yaml volume_space_logical_used_by_afs \u00b6 The virtual space used by AFS alone (includes volume reserves) and along with storage efficiency, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_by_afs conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-by-afs conf/zapi/cdot/9.8.0/volume.yaml volume_space_logical_used_by_snapshots \u00b6 Size that is logically used across all Snapshot copies in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_by_snapshots conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-by-snapshots conf/zapi/cdot/9.8.0/volume.yaml volume_space_logical_used_percent \u00b6 SUM of (physical-used, shared_refs, compression_saved_in_plane0, vbn_zero, future_blk_cnt), as a percentage. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-percent conf/zapi/cdot/9.8.0/volume.yaml volume_space_physical_used \u00b6 Size that is physically used in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.physical_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.physical-used conf/zapi/cdot/9.8.0/volume.yaml volume_space_physical_used_percent \u00b6 Size that is physically used in the volume, as a percentage. API Endpoint Metric Template REST api/storage/volumes space.physical_used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.physical-used-percent conf/zapi/cdot/9.8.0/volume.yaml volume_total_ops \u00b6 Number of operations per second serviced by the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml volume_write_data \u00b6 Bytes written per second API Endpoint Metric Template REST api/cluster/counter/tables/volume bytes_written Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml volume_write_latency \u00b6 Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume.yaml volume_write_ops \u00b6 Number of write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml vscan_scan_latency \u00b6 Average scan latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scan_latency Unit: microsec Type: average Base: scan_latency_base conf/zapiperf/cdot/9.8.0/vscan.yaml vscan_scan_request_dispatched_rate \u00b6 Total number of scan requests sent to the Vscanner per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scan_request_dispatched_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan.yaml vscan_scanner_stats_pct_cpu_used \u00b6 Percentage CPU utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_cpu_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml vscan_scanner_stats_pct_mem_used \u00b6 Percentage RAM utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_mem_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml vscan_scanner_stats_pct_network_used \u00b6 Percentage network utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_network_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml wafl_avg_msg_latency \u00b6 Average turnaround time for WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_msg_latency Unit: millisec Type: average Base: msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_wafl_msg_latency Unit: millisec Type: average Base: wafl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_avg_non_wafl_msg_latency \u00b6 Average turnaround time for non-WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_non_wafl_msg_latency Unit: millisec Type: average Base: non_wafl_msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_non_wafl_msg_latency Unit: millisec Type: average Base: non_wafl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_avg_repl_msg_latency \u00b6 Average turnaround time for replication WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_replication_msg_latency Unit: millisec Type: average Base: replication_msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_wafl_repl_msg_latency Unit: millisec Type: average Base: wafl_repl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_cp_count \u00b6 Array of counts of different types of Consistency Points (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl cp_count Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl cp_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_cp_phase_times \u00b6 Array of percentage time spent in different phases of Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl cp_phase_times Unit: percent Type: percent Base: total_cp_msecs conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl cp_phase_times Unit: percent Type: percent Base: total_cp_msecs conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_memory_free \u00b6 The current WAFL memory available in the system. API Endpoint Metric Template REST api/cluster/counter/tables/wafl memory_free Unit: mb Type: raw Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_memory_free Unit: mb Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_memory_used \u00b6 The current WAFL memory used in the system. API Endpoint Metric Template REST api/cluster/counter/tables/wafl memory_used Unit: mb Type: raw Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_memory_used Unit: mb Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_msg_total \u00b6 Total number of WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_non_wafl_msg_total \u00b6 Total number of non-WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl non_wafl_msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl non_wafl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_read_io_type \u00b6 Percentage of reads served from buffer cache, external cache, or disk. API Endpoint Metric Template REST api/cluster/counter/tables/wafl read_io_type Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_cache \u00b6 WAFL reads from cache. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cache Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cache Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_cloud \u00b6 WAFL reads from cloud storage. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cloud Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cloud Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_cloud_s2c_bin \u00b6 WAFL reads from cloud storage via s2c bin. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cloud_s2c_bin Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cloud_s2c_bin Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_disk \u00b6 WAFL reads from disk. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_disk Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_disk Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_ext_cache \u00b6 WAFL reads from external cache. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_external_cache Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_ext_cache Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_fc_miss \u00b6 WAFL reads from remote volume for fc_miss. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_fc_miss Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_fc_miss Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_pmem \u00b6 Wafl reads from persistent mmeory. API Endpoint Metric Template ZAPI perf-object-get-instances wafl wafl_reads_from_pmem Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_reads_from_ssd \u00b6 WAFL reads from SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_ssd Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_ssd Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_repl_msg_total \u00b6 Total number of replication WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl replication_msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_repl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_total_cp_msecs \u00b6 Milliseconds spent in Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl total_cp_msecs Unit: millisec Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl total_cp_msecs Unit: millisec Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml wafl_total_cp_util \u00b6 Percentage of time spent in a Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl total_cp_util Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl total_cp_util Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"ONTAP Metrics"},{"location":"ontap-metrics/#understanding-the-structure","text":"Below is an annotated example of how to interpret the structure of each of the metrics . disk_io_queued Name of the metric exported by Harvest Number of I/Os queued to the disk but not yet issued Description of the ONTAP metric API will be one of REST or ZAPI depending on which collector is used to collect the metric Endpoint name of the REST or ZAPI API used to collect this metric Metric name of the ONTAP metric Template path of the template that collects the metric Performance related metrics also include: Unit the unit of the metric Type describes how to calculate a cooked metric from two consecutive ONTAP raw metrics Base some counters require a base counter for post-processing. When required, this property lists the base counter API Endpoint Metric Template REST api/cluster/counter/tables/disk:constituent io_queued Unit: none Type: average Base: base_for_disk_busy conf/restperf/9.12.0/disk.yaml ZAPI perf-object-get-instances disk:constituent io_queued Unit: none Type: average Base: base_for_disk_busy conf/zapiperf/cdot/9.8.0/disk.yaml","title":"Understanding the structure"},{"location":"ontap-metrics/#metrics","text":"","title":"Metrics"},{"location":"ontap-metrics/#aggr_efficiency_savings","text":"Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency.savings conf/rest/9.12.0/aggr.yaml","title":"aggr_efficiency_savings"},{"location":"ontap-metrics/#aggr_efficiency_savings_wo_snapshots","text":"Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots.savings conf/rest/9.12.0/aggr.yaml","title":"aggr_efficiency_savings_wo_snapshots"},{"location":"ontap-metrics/#aggr_efficiency_savings_wo_snapshots_flexclones","text":"Space saved by storage efficiencies (logical_used - used) API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots_flexclones.savings conf/rest/9.12.0/aggr.yaml","title":"aggr_efficiency_savings_wo_snapshots_flexclones"},{"location":"ontap-metrics/#aggr_hybrid_cache_size_total","text":"Total usable space in bytes of SSD cache. Only provided when hybrid_cache.enabled is 'true'. API Endpoint Metric Template REST api/storage/aggregates block_storage.hybrid_cache.size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.hybrid-cache-size-total conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_hybrid_cache_size_total"},{"location":"ontap-metrics/#aggr_hybrid_disk_count","text":"Number of disks used in the cache tier of the aggregate. Only provided when hybrid_cache.enabled is 'true'. API Endpoint Metric Template REST api/storage/aggregates block_storage.hybrid_cache.disk_count conf/rest/9.12.0/aggr.yaml","title":"aggr_hybrid_disk_count"},{"location":"ontap-metrics/#aggr_inode_files_private_used","text":"Number of system metadata files used. If the referenced file system is restricted or offline, a value of 0 is returned.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_private_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-private-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_files_private_used"},{"location":"ontap-metrics/#aggr_inode_files_total","text":"Maximum number of user-visible files that this referenced file system can currently hold. If the referenced file system is restricted or offline, a value of 0 is returned. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-total conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_files_total"},{"location":"ontap-metrics/#aggr_inode_files_used","text":"Number of user-visible files used in the referenced file system. If the referenced file system is restricted or offline, a value of 0 is returned. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.files-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_files_used"},{"location":"ontap-metrics/#aggr_inode_inodefile_private_capacity","text":"Number of files that can currently be stored on disk for system metadata files. This number will dynamically increase as more system files are created.This is an advanced property; there is an added computationl cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.file_private_capacity conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.inodefile-private-capacity conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_inodefile_private_capacity"},{"location":"ontap-metrics/#aggr_inode_inodefile_public_capacity","text":"Number of files that can currently be stored on disk for user-visible files. This number will dynamically increase as more user-visible files are created.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either footprint or **. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.file_public_capacity conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.inodefile-public-capacity conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_inodefile_public_capacity"},{"location":"ontap-metrics/#aggr_inode_maxfiles_available","text":"The count of the maximum number of user-visible files currently allowable on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-available conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_maxfiles_available"},{"location":"ontap-metrics/#aggr_inode_maxfiles_possible","text":"The largest value to which the maxfiles-available parameter can be increased by reconfiguration, on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_possible conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-possible conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_maxfiles_possible"},{"location":"ontap-metrics/#aggr_inode_maxfiles_used","text":"The number of user-visible files currently in use on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.max_files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.maxfiles-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_maxfiles_used"},{"location":"ontap-metrics/#aggr_inode_used_percent","text":"The percentage of disk space currently in use based on user-visible file count on the referenced file system. API Endpoint Metric Template REST api/storage/aggregates inode_attributes.used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-inode-attributes.percent-inode-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_inode_used_percent"},{"location":"ontap-metrics/#aggr_logical_used_wo_snapshots","text":"Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-logical-used-wo-snapshots conf/zapi/cdot/9.9.0/aggr_efficiency.yaml","title":"aggr_logical_used_wo_snapshots"},{"location":"ontap-metrics/#aggr_logical_used_wo_snapshots_flexclones","text":"Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency_without_snapshots_flexclones.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-logical-used-wo-snapshots-flexclones conf/zapi/cdot/9.9.0/aggr_efficiency.yaml","title":"aggr_logical_used_wo_snapshots_flexclones"},{"location":"ontap-metrics/#aggr_physical_used_wo_snapshots","text":"Total Data Reduction Physical Used Without Snapshots API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-physical-used-wo-snapshots conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_physical_used_wo_snapshots"},{"location":"ontap-metrics/#aggr_physical_used_wo_snapshots_flexclones","text":"Total Data Reduction Physical Used without snapshots and flexclones API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-data-reduction-physical-used-wo-snapshots-flexclones conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_physical_used_wo_snapshots_flexclones"},{"location":"ontap-metrics/#aggr_power","text":"Power consumed by aggregate in Watts. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"aggr_power"},{"location":"ontap-metrics/#aggr_primary_disk_count","text":"Number of disks used in the aggregate. This includes parity disks, but excludes disks in the hybrid cache. API Endpoint Metric Template REST api/storage/aggregates block_storage.primary.disk_count conf/rest/9.12.0/aggr.yaml","title":"aggr_primary_disk_count"},{"location":"ontap-metrics/#aggr_raid_disk_count","text":"Number of disks in the aggregate. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.disk-count conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_raid_disk_count"},{"location":"ontap-metrics/#aggr_raid_plex_count","text":"Number of plexes in the aggregate API Endpoint Metric Template REST api/storage/aggregates block_storage.plexes.# conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.plex-count conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_raid_plex_count"},{"location":"ontap-metrics/#aggr_raid_size","text":"Option to specify the maximum number of disks that can be included in a RAID group. API Endpoint Metric Template REST api/storage/aggregates block_storage.primary.raid_size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-raid-attributes.raid-size conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_raid_size"},{"location":"ontap-metrics/#aggr_snapshot_files_total","text":"Total files allowed in Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.files_total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.files-total conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_files_total"},{"location":"ontap-metrics/#aggr_snapshot_files_used","text":"Total files created in Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.files-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_files_used"},{"location":"ontap-metrics/#aggr_snapshot_inode_used_percent","text":"The percentage of disk space currently in use based on user-visible file (inode) count on the referenced file system. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.percent-inode-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_inode_used_percent"},{"location":"ontap-metrics/#aggr_snapshot_maxfiles_available","text":"Maximum files available for Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.max_files_available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-available conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_maxfiles_available"},{"location":"ontap-metrics/#aggr_snapshot_maxfiles_possible","text":"The largest value to which the maxfiles-available parameter can be increased by reconfiguration, on the referenced file system. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-possible conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_snapshot_maxfiles_possible"},{"location":"ontap-metrics/#aggr_snapshot_maxfiles_used","text":"Files in use by Snapshot copies API Endpoint Metric Template REST api/storage/aggregates snapshot.max_files_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.maxfiles-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_maxfiles_used"},{"location":"ontap-metrics/#aggr_snapshot_reserve_percent","text":"Percentage of space reserved for Snapshot copies API Endpoint Metric Template REST api/storage/aggregates space.snapshot.reserve_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.snapshot-reserve-percent conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_reserve_percent"},{"location":"ontap-metrics/#aggr_snapshot_size_available","text":"Available space for Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-available conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_size_available"},{"location":"ontap-metrics/#aggr_snapshot_size_total","text":"Total space for Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.total conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-total conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_size_total"},{"location":"ontap-metrics/#aggr_snapshot_size_used","text":"Space used by Snapshot copies in bytes API Endpoint Metric Template REST api/storage/aggregates space.snapshot.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.size-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_size_used"},{"location":"ontap-metrics/#aggr_snapshot_used_percent","text":"Percentage of disk space used by Snapshot copies API Endpoint Metric Template REST api/storage/aggregates space.snapshot.used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-snapshot-attributes.percent-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_snapshot_used_percent"},{"location":"ontap-metrics/#aggr_space_available","text":"Space available in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.available conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-available conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_available"},{"location":"ontap-metrics/#aggr_space_capacity_tier_used","text":"Used space in bytes in the cloud store. Only applicable for aggregates with a cloud store tier. API Endpoint Metric Template REST api/storage/aggregates space.cloud_storage.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.capacity-tier-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_capacity_tier_used"},{"location":"ontap-metrics/#aggr_space_data_compacted_count","text":"Amount of compacted data in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compacted_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compacted-count conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_data_compacted_count"},{"location":"ontap-metrics/#aggr_space_data_compaction_saved","text":"Space saved in bytes by compacting the data. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compaction_space_saved conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compaction-space-saved conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_data_compaction_saved"},{"location":"ontap-metrics/#aggr_space_data_compaction_saved_percent","text":"Percentage saved by compacting the data. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.data_compaction_space_saved_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.data-compaction-space-saved-percent conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_data_compaction_saved_percent"},{"location":"ontap-metrics/#aggr_space_performance_tier_inactive_user_data","text":"The size that is physically used in the block storage and has a cold temperature, in bytes. This property is only supported if the aggregate is either attached to a cloud store or can be attached to a cloud store.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either block_storage.inactive_user_data or **. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.inactive_user_data conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.performance-tier-inactive-user-data conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_performance_tier_inactive_user_data"},{"location":"ontap-metrics/#aggr_space_performance_tier_inactive_user_data_percent","text":"The percentage of inactive user data in the block storage. This property is only supported if the aggregate is either attached to a cloud store or can be attached to a cloud store.This is an advanced property; there is an added computational cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the fields query parameter containing either block_storage.inactive_user_data_percent or **. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.inactive_user_data_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.performance-tier-inactive-user-data-percent conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_performance_tier_inactive_user_data_percent"},{"location":"ontap-metrics/#aggr_space_physical_used","text":"Total physical used size of an aggregate in bytes. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.physical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.physical-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_physical_used"},{"location":"ontap-metrics/#aggr_space_physical_used_percent","text":"Physical used percentage. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.physical_used_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.physical-used-percent conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_physical_used_percent"},{"location":"ontap-metrics/#aggr_space_reserved","text":"The total disk space in bytes that is reserved on the referenced file system. The reserved space is already counted in the used space, so this element can be used to see what portion of the used space represents space reserved for future use. API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.total-reserved-space conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_reserved"},{"location":"ontap-metrics/#aggr_space_sis_saved","text":"Amount of space saved in bytes by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_space_saved conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-space-saved conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_sis_saved"},{"location":"ontap-metrics/#aggr_space_sis_saved_percent","text":"Percentage of space saved by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_space_saved_percent conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-space-saved-percent conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_sis_saved_percent"},{"location":"ontap-metrics/#aggr_space_sis_shared_count","text":"Amount of shared bytes counted by storage efficiency. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.volume_deduplication_shared_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.sis-shared-count conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_sis_shared_count"},{"location":"ontap-metrics/#aggr_space_total","text":"Total usable space in bytes, not including WAFL reserve and aggregate Snapshot copy reserve. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.size conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-total conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_total"},{"location":"ontap-metrics/#aggr_space_used","text":"Space used or reserved in bytes. Includes volume guarantees and aggregate metadata. API Endpoint Metric Template REST api/storage/aggregates space.block_storage.used conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.size-used conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_space_used"},{"location":"ontap-metrics/#aggr_space_used_percent","text":"The percentage of disk space currently in use on the referenced file system API Endpoint Metric Template ZAPI aggr-get-iter aggr-attributes.aggr-space-attributes.percent-used-capacity conf/zapi/cdot/9.8.0/aggr.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_space_used_percent"},{"location":"ontap-metrics/#aggr_total_logical_used","text":"Logical used API Endpoint Metric Template REST api/storage/aggregates space.efficiency.logical_used conf/rest/9.12.0/aggr.yaml ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-logical-used conf/zapi/cdot/9.9.0/aggr_efficiency.yaml","title":"aggr_total_logical_used"},{"location":"ontap-metrics/#aggr_total_physical_used","text":"Total Physical Used API Endpoint Metric Template ZAPI aggr-efficiency-get-iter aggr-efficiency-info.aggr-efficiency-cumulative-info.total-physical-used conf/zapi/cdot/9.9.0/aggr_efficiency.yaml REST NA Harvest generated conf/rest/9.12.0/aggr.yaml","title":"aggr_total_physical_used"},{"location":"ontap-metrics/#aggr_volume_count_flexvol","text":"Number of flexvol volumes in the aggregate. API Endpoint Metric Template REST api/storage/aggregates volume_count conf/rest/9.12.0/aggr.yaml ZAPI aggr-get-iter aggr-attributes.aggr-volume-count-attributes.flexvol-count conf/zapi/cdot/9.8.0/aggr.yaml","title":"aggr_volume_count_flexvol"},{"location":"ontap-metrics/#cifs_session_connection_count","text":"A counter used to track requests that are sent to the volumes to the node. API Endpoint Metric Template REST api/protocols/cifs/sessions connection_count conf/rest/9.8.0/cifs_session.yaml ZAPI cifs-session-get-iter cifs-session.connection-count conf/zapi/cdot/9.8.0/cifs_session.yaml","title":"cifs_session_connection_count"},{"location":"ontap-metrics/#cloud_target_used","text":"The amount of cloud space used by all the aggregates attached to the target, in bytes. This field is only populated for FabricPool targets. The value is recalculated once every 5 minutes. API Endpoint Metric Template REST api/cloud/targets used conf/rest/9.12.0/cloud_target.yaml","title":"cloud_target_used"},{"location":"ontap-metrics/#cluster_new_status","text":"It is an indicator of the overall health status of the cluster, with a value of 1 indicating a healthy status and a value of 0 indicating an unhealthy status. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/subsystem.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/subsystem.yaml","title":"cluster_new_status"},{"location":"ontap-metrics/#cluster_subsystem_outstanding_alerts","text":"Number of outstanding alerts API Endpoint Metric Template REST api/private/cli/system/health/subsystem outstanding_alert_count conf/rest/9.12.0/subsystem.yaml ZAPI diagnosis-subsystem-config-get-iter diagnosis-subsystem-config-info.outstanding-alert-count conf/zapi/cdot/9.8.0/subsystem.yaml","title":"cluster_subsystem_outstanding_alerts"},{"location":"ontap-metrics/#cluster_subsystem_suppressed_alerts","text":"Number of suppressed alerts API Endpoint Metric Template REST api/private/cli/system/health/subsystem suppressed_alert_count conf/rest/9.12.0/subsystem.yaml ZAPI diagnosis-subsystem-config-get-iter diagnosis-subsystem-config-info.suppressed-alert-count conf/zapi/cdot/9.8.0/subsystem.yaml","title":"cluster_subsystem_suppressed_alerts"},{"location":"ontap-metrics/#copy_manager_bce_copy_count_curr","text":"Current number of copy requests being processed by the Block Copy Engine. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager block_copy_engine_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager bce_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml","title":"copy_manager_bce_copy_count_curr"},{"location":"ontap-metrics/#copy_manager_kb_copied","text":"Sum of kilo-bytes copied. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager KB_copied Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager KB_copied Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml","title":"copy_manager_kb_copied"},{"location":"ontap-metrics/#copy_manager_ocs_copy_count_curr","text":"Current number of copy requests being processed by the ONTAP copy subsystem. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager ontap_copy_subsystem_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager ocs_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml","title":"copy_manager_ocs_copy_count_curr"},{"location":"ontap-metrics/#copy_manager_sce_copy_count_curr","text":"Current number of copy requests being processed by the System Continuous Engineering. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager system_continuous_engineering_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager sce_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml","title":"copy_manager_sce_copy_count_curr"},{"location":"ontap-metrics/#copy_manager_spince_copy_count_curr","text":"Current number of copy requests being processed by the SpinCE. API Endpoint Metric Template REST api/cluster/counter/tables/copy_manager spince_current_copy_count Unit: none Type: delta Base: conf/restperf/9.12.0/copy_manager.yaml ZAPI perf-object-get-instances copy_manager spince_copy_count_curr Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/copy_manager.yaml","title":"copy_manager_spince_copy_count_curr"},{"location":"ontap-metrics/#disk_bytes_per_sector","text":"Bytes per sector. API Endpoint Metric Template REST api/storage/disks bytes_per_sector conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-inventory-info.bytes-per-sector conf/zapi/cdot/9.8.0/disk.yaml","title":"disk_bytes_per_sector"},{"location":"ontap-metrics/#disk_power_on_hours","text":"Hours powered on. API Endpoint Metric Template REST api/storage/disks stats.power_on_hours conf/rest/9.12.0/disk.yaml","title":"disk_power_on_hours"},{"location":"ontap-metrics/#disk_sectors","text":"Number of sectors on the disk. API Endpoint Metric Template REST api/storage/disks sector_count conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-inventory-info.capacity-sectors conf/zapi/cdot/9.8.0/disk.yaml","title":"disk_sectors"},{"location":"ontap-metrics/#disk_stats_average_latency","text":"Average I/O latency across all active paths, in milliseconds. API Endpoint Metric Template REST api/storage/disks stats.average_latency conf/rest/9.12.0/disk.yaml ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.average-latency conf/zapi/cdot/9.8.0/disk.yaml","title":"disk_stats_average_latency"},{"location":"ontap-metrics/#disk_stats_io_kbps","text":"Total Disk Throughput in KBPS Across All Active Paths API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.disk-io-kbps conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk disk_io_kbps_total conf/rest/9.12.0/disk.yaml","title":"disk_stats_io_kbps"},{"location":"ontap-metrics/#disk_stats_sectors_read","text":"Number of Sectors Read API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.sectors-read conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk sectors_read conf/rest/9.12.0/disk.yaml","title":"disk_stats_sectors_read"},{"location":"ontap-metrics/#disk_stats_sectors_written","text":"Number of Sectors Written API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.sectors-written conf/zapi/cdot/9.8.0/disk.yaml REST api/private/cli/disk sectors_written conf/rest/9.12.0/disk.yaml","title":"disk_stats_sectors_written"},{"location":"ontap-metrics/#disk_uptime","text":"Number of seconds the drive has been powered on API Endpoint Metric Template ZAPI storage-disk-get-iter storage-disk-info.disk-stats-info.power-on-time-interval conf/zapi/cdot/9.8.0/disk.yaml REST NA Harvest generated conf/rest/9.12.0/disk.yaml","title":"disk_uptime"},{"location":"ontap-metrics/#disk_usable_size","text":"Usable size of each disk, in bytes. API Endpoint Metric Template REST api/storage/disks usable_size conf/rest/9.12.0/disk.yaml","title":"disk_usable_size"},{"location":"ontap-metrics/#environment_sensor_average_ambient_temperature","text":"Average temperature of all ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_average_ambient_temperature"},{"location":"ontap-metrics/#environment_sensor_average_fan_speed","text":"Average fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_average_fan_speed"},{"location":"ontap-metrics/#environment_sensor_average_temperature","text":"Average temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_average_temperature"},{"location":"ontap-metrics/#environment_sensor_max_fan_speed","text":"Maximum fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_max_fan_speed"},{"location":"ontap-metrics/#environment_sensor_max_temperature","text":"Maximum temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_max_temperature"},{"location":"ontap-metrics/#environment_sensor_min_ambient_temperature","text":"Minimum temperature of all ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_min_ambient_temperature"},{"location":"ontap-metrics/#environment_sensor_min_fan_speed","text":"Minimum fan speed for node in rpm. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_min_fan_speed"},{"location":"ontap-metrics/#environment_sensor_min_temperature","text":"Minimum temperature of all non-ambient sensors for node in Celsius. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_min_temperature"},{"location":"ontap-metrics/#environment_sensor_power","text":"Power consumed by a node in Watts. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/sensor.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_power"},{"location":"ontap-metrics/#environment_sensor_threshold_value","text":"Provides the sensor reading. API Endpoint Metric Template REST api/cluster/sensors value conf/rest/9.12.0/sensor.yaml ZAPI environment-sensors-get-iter environment-sensors-info.threshold-sensor-value conf/zapi/cdot/9.8.0/sensor.yaml","title":"environment_sensor_threshold_value"},{"location":"ontap-metrics/#external_service_op_num_not_found_responses","text":"Number of 'Not Found' responses for calls to this operation. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_not_found_responses Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_not_found_responses"},{"location":"ontap-metrics/#external_service_op_num_request_failures","text":"A cumulative count of all request failures. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_request_failures Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_request_failures"},{"location":"ontap-metrics/#external_service_op_num_requests_sent","text":"Number of requests sent to this service. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_requests_sent Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_requests_sent"},{"location":"ontap-metrics/#external_service_op_num_responses_received","text":"Number of responses received from the server (does not include timeouts). API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_responses_received Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_responses_received"},{"location":"ontap-metrics/#external_service_op_num_successful_responses","text":"Number of successful responses to this operation. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_successful_responses Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_successful_responses"},{"location":"ontap-metrics/#external_service_op_num_timeouts","text":"Number of times requests to the server for this operation timed out, meaning no response was recevied in a given time period. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op num_timeouts Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_num_timeouts"},{"location":"ontap-metrics/#external_service_op_request_latency","text":"Average latency of requests for operations of this type on this server. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op request_latency Unit: microsec Type: average Base: num_requests_sent conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_request_latency"},{"location":"ontap-metrics/#external_service_op_request_latency_hist","text":"This histogram holds the latency values for requests of this operation to the specified server. API Endpoint Metric Template ZAPI perf-object-get-instances external_service_op request_latency_hist Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/external_service_operation.yaml","title":"external_service_op_request_latency_hist"},{"location":"ontap-metrics/#fabricpool_average_latency","text":"Note This counter is deprecated and will be removed in a future release. Average latencies executed during various phases of command execution. The execution-start latency represents the average time taken to start executing a operation. The request-prepare latency represent the average time taken to prepare the commplete request that needs to be sent to the server. The send latency represents the average time taken to send requests to the server. The execution-start-to-send-complete represents the average time taken to send a operation out since its execution started. The execution-start-to-first-byte-received represent the average time taken to to receive the first byte of a response since the command's request execution started. These counters can be used to identify performance bottlenecks within the object store client module. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op average_latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml","title":"fabricpool_average_latency"},{"location":"ontap-metrics/#fabricpool_cloud_bin_op_latency_average","text":"Cloud bin operation latency average in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_comp_aggr_vol_bin cloud_bin_op_latency_average Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_comp_aggr_vol_bin.yaml ZAPI perf-object-get-instances wafl_comp_aggr_vol_bin cloud_bin_op_latency_average Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_comp_aggr_vol_bin.yaml","title":"fabricpool_cloud_bin_op_latency_average"},{"location":"ontap-metrics/#fabricpool_cloud_bin_operation","text":"Cloud bin operation counters. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_comp_aggr_vol_bin cloud_bin_op Unit: none Type: delta Base: conf/restperf/9.12.0/wafl_comp_aggr_vol_bin.yaml ZAPI perf-object-get-instances wafl_comp_aggr_vol_bin cloud_bin_operation Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl_comp_aggr_vol_bin.yaml","title":"fabricpool_cloud_bin_operation"},{"location":"ontap-metrics/#fabricpool_get_throughput_bytes","text":"Note This counter is deprecated and will be removed in a future release. Counter that indicates the throughput for GET command in bytes per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op get_throughput_bytes Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml","title":"fabricpool_get_throughput_bytes"},{"location":"ontap-metrics/#fabricpool_put_throughput_bytes","text":"Note This counter is deprecated and will be removed in a future release. Counter that indicates the throughput for PUT command in bytes per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op put_throughput_bytes Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml","title":"fabricpool_put_throughput_bytes"},{"location":"ontap-metrics/#fabricpool_stats","text":"Note This counter is deprecated and will be removed in a future release. Counter that indicates the number of object store operations sent, and their success and failure counts. The objstore_client_op_name array indicate the operation name such as PUT, GET, etc. The objstore_client_op_stats_name array contain the total number of operations, their success and failure counter for each operation. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op stats Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml","title":"fabricpool_stats"},{"location":"ontap-metrics/#fabricpool_throughput_ops","text":"Counter that indicates the throughput for commands in ops per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_client_op throughput_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/object_store_client_op.yaml","title":"fabricpool_throughput_ops"},{"location":"ontap-metrics/#fcp_avg_other_latency","text":"Average latency for operations other than read and write API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_avg_other_latency"},{"location":"ontap-metrics/#fcp_avg_read_latency","text":"Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_avg_read_latency"},{"location":"ontap-metrics/#fcp_avg_write_latency","text":"Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_avg_write_latency"},{"location":"ontap-metrics/#fcp_discarded_frames_count","text":"Number of discarded frames. API Endpoint Metric Template REST api/cluster/counter/tables/fcp discarded_frames_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port discarded_frames_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_discarded_frames_count"},{"location":"ontap-metrics/#fcp_int_count","text":"Number of interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_int_count"},{"location":"ontap-metrics/#fcp_invalid_crc","text":"Number of invalid cyclic redundancy checks (CRC count) API Endpoint Metric Template REST api/cluster/counter/tables/fcp invalid.crc Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port invalid_crc Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_invalid_crc"},{"location":"ontap-metrics/#fcp_invalid_transmission_word","text":"Number of invalid transmission words API Endpoint Metric Template REST api/cluster/counter/tables/fcp invalid.transmission_word Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port invalid_transmission_word Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_invalid_transmission_word"},{"location":"ontap-metrics/#fcp_isr_count","text":"Number of interrupt responses API Endpoint Metric Template REST api/cluster/counter/tables/fcp isr.count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port isr_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_isr_count"},{"location":"ontap-metrics/#fcp_lif_avg_latency","text":"Average latency for FCP operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_avg_latency"},{"location":"ontap-metrics/#fcp_lif_avg_other_latency","text":"Average latency for operations other than read and write API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_avg_other_latency"},{"location":"ontap-metrics/#fcp_lif_avg_read_latency","text":"Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_avg_read_latency"},{"location":"ontap-metrics/#fcp_lif_avg_write_latency","text":"Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_avg_write_latency"},{"location":"ontap-metrics/#fcp_lif_other_ops","text":"Number of operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_other_ops"},{"location":"ontap-metrics/#fcp_lif_read_data","text":"Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_read_data"},{"location":"ontap-metrics/#fcp_lif_read_ops","text":"Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_read_ops"},{"location":"ontap-metrics/#fcp_lif_total_ops","text":"Total number of operations. API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_total_ops"},{"location":"ontap-metrics/#fcp_lif_write_data","text":"Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_write_data"},{"location":"ontap-metrics/#fcp_lif_write_ops","text":"Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp_lif write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp_lif.yaml ZAPI perf-object-get-instances fcp_lif write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp_lif.yaml","title":"fcp_lif_write_ops"},{"location":"ontap-metrics/#fcp_link_down","text":"Number of times the Fibre Channel link was lost API Endpoint Metric Template REST api/cluster/counter/tables/fcp link.down Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port link_down Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_link_down"},{"location":"ontap-metrics/#fcp_link_failure","text":"Number of link failures API Endpoint Metric Template REST api/cluster/counter/tables/fcp link_failure Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port link_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_link_failure"},{"location":"ontap-metrics/#fcp_loss_of_signal","text":"Number of times this port lost signal API Endpoint Metric Template REST api/cluster/counter/tables/fcp loss_of_signal Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port loss_of_signal Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_loss_of_signal"},{"location":"ontap-metrics/#fcp_loss_of_sync","text":"Number of times this port lost sync API Endpoint Metric Template REST api/cluster/counter/tables/fcp loss_of_sync Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port loss_of_sync Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_loss_of_sync"},{"location":"ontap-metrics/#fcp_nvmf_avg_other_latency","text":"Average latency for operations other than read and write (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_other_latency Unit: microsec Type: average Base: nvmf.other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_other_latency Unit: microsec Type: average Base: nvmf_other_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_other_latency"},{"location":"ontap-metrics/#fcp_nvmf_avg_read_latency","text":"Average latency for read operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_read_latency Unit: microsec Type: average Base: nvmf.read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_read_latency Unit: microsec Type: average Base: nvmf_read_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_read_latency"},{"location":"ontap-metrics/#fcp_nvmf_avg_remote_other_latency","text":"Average latency for remote operations other than read and write (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_other_latency Unit: microsec Type: average Base: nvmf_remote.other_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_other_latency Unit: microsec Type: average Base: nvmf_remote_other_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_remote_other_latency"},{"location":"ontap-metrics/#fcp_nvmf_avg_remote_read_latency","text":"Average latency for remote read operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_read_latency Unit: microsec Type: average Base: nvmf_remote.read_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_read_latency Unit: microsec Type: average Base: nvmf_remote_read_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_remote_read_latency"},{"location":"ontap-metrics/#fcp_nvmf_avg_remote_write_latency","text":"Average latency for remote write operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_remote_write_latency Unit: microsec Type: average Base: nvmf_remote.write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_remote_write_latency Unit: microsec Type: average Base: nvmf_remote_write_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_remote_write_latency"},{"location":"ontap-metrics/#fcp_nvmf_avg_write_latency","text":"Average latency for write operations (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.average_write_latency Unit: microsec Type: average Base: nvmf.write_ops conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_avg_write_latency Unit: microsec Type: average Base: nvmf_write_ops conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_avg_write_latency"},{"location":"ontap-metrics/#fcp_nvmf_caw_data","text":"Amount of CAW data sent to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.caw_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_caw_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_caw_data"},{"location":"ontap-metrics/#fcp_nvmf_caw_ops","text":"Number of FC-NVMe CAW operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.caw_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_caw_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_caw_ops"},{"location":"ontap-metrics/#fcp_nvmf_command_slots","text":"Number of command slots that have been used by initiators logging into this port. This shows the command fan-in on the port. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.command_slots Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_command_slots Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_command_slots"},{"location":"ontap-metrics/#fcp_nvmf_other_ops","text":"Number of NVMF operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_other_ops"},{"location":"ontap-metrics/#fcp_nvmf_read_data","text":"Amount of data read from the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_read_data"},{"location":"ontap-metrics/#fcp_nvmf_read_ops","text":"Number of FC-NVMe read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_read_ops"},{"location":"ontap-metrics/#fcp_nvmf_remote_caw_data","text":"Amount of remote CAW data sent to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.caw_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_caw_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_caw_data"},{"location":"ontap-metrics/#fcp_nvmf_remote_caw_ops","text":"Number of FC-NVMe remote CAW operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.caw_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_caw_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_caw_ops"},{"location":"ontap-metrics/#fcp_nvmf_remote_other_ops","text":"Number of NVMF remote operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_other_ops"},{"location":"ontap-metrics/#fcp_nvmf_remote_read_data","text":"Amount of remote data read from the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_read_data"},{"location":"ontap-metrics/#fcp_nvmf_remote_read_ops","text":"Number of FC-NVMe remote read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_read_ops"},{"location":"ontap-metrics/#fcp_nvmf_remote_total_data","text":"Amount of remote FC-NVMe traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_total_data"},{"location":"ontap-metrics/#fcp_nvmf_remote_total_ops","text":"Total number of remote FC-NVMe operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_total_ops"},{"location":"ontap-metrics/#fcp_nvmf_remote_write_data","text":"Amount of remote data written to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_write_data"},{"location":"ontap-metrics/#fcp_nvmf_remote_write_ops","text":"Number of FC-NVMe remote write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf_remote.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_remote_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_remote_write_ops"},{"location":"ontap-metrics/#fcp_nvmf_total_data","text":"Amount of FC-NVMe traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_total_data"},{"location":"ontap-metrics/#fcp_nvmf_total_ops","text":"Total number of FC-NVMe operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_total_ops"},{"location":"ontap-metrics/#fcp_nvmf_write_data","text":"Amount of data written to the storage system (FC-NVMe) API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_write_data"},{"location":"ontap-metrics/#fcp_nvmf_write_ops","text":"Number of FC-NVMe write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp nvmf.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port nvmf_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/fcp.yaml","title":"fcp_nvmf_write_ops"},{"location":"ontap-metrics/#fcp_other_ops","text":"Number of operations that are not read or write. API Endpoint Metric Template REST api/cluster/counter/tables/fcp other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_other_ops"},{"location":"ontap-metrics/#fcp_prim_seq_err","text":"Number of primitive sequence errors API Endpoint Metric Template REST api/cluster/counter/tables/fcp primitive_seq_err Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port prim_seq_err Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_prim_seq_err"},{"location":"ontap-metrics/#fcp_queue_full","text":"Number of times a queue full condition occurred. API Endpoint Metric Template REST api/cluster/counter/tables/fcp queue_full Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port queue_full Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_queue_full"},{"location":"ontap-metrics/#fcp_read_data","text":"Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_read_data"},{"location":"ontap-metrics/#fcp_read_ops","text":"Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_read_ops"},{"location":"ontap-metrics/#fcp_reset_count","text":"Number of physical port resets API Endpoint Metric Template REST api/cluster/counter/tables/fcp reset_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port reset_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_reset_count"},{"location":"ontap-metrics/#fcp_shared_int_count","text":"Number of shared interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp shared_interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port shared_int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_shared_int_count"},{"location":"ontap-metrics/#fcp_spurious_int_count","text":"Number of spurious interrupts API Endpoint Metric Template REST api/cluster/counter/tables/fcp spurious_interrupt_count Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port spurious_int_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_spurious_int_count"},{"location":"ontap-metrics/#fcp_threshold_full","text":"Number of times the total number of outstanding commands on the port exceeds the threshold supported by this port. API Endpoint Metric Template REST api/cluster/counter/tables/fcp threshold_full Unit: none Type: delta Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port threshold_full Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_threshold_full"},{"location":"ontap-metrics/#fcp_total_data","text":"Amount of FCP traffic to and from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_total_data"},{"location":"ontap-metrics/#fcp_total_ops","text":"Total number of FCP operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_total_ops"},{"location":"ontap-metrics/#fcp_write_data","text":"Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/fcp write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_write_data"},{"location":"ontap-metrics/#fcp_write_ops","text":"Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/fcp write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/fcp.yaml ZAPI perf-object-get-instances fcp_port write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcp.yaml","title":"fcp_write_ops"},{"location":"ontap-metrics/#fcvi_rdma_write_avg_latency","text":"Average RDMA write I/O latency. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_average_latency Unit: microsec Type: average Base: rdma.write_ops conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_avg_latency Unit: microsec Type: average Base: rdma_write_ops conf/zapiperf/cdot/9.8.0/fcvi.yaml","title":"fcvi_rdma_write_avg_latency"},{"location":"ontap-metrics/#fcvi_rdma_write_ops","text":"Number of RDMA write I/Os issued per second. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_ops Unit: none Type: rate Base: conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_ops Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/fcvi.yaml","title":"fcvi_rdma_write_ops"},{"location":"ontap-metrics/#fcvi_rdma_write_throughput","text":"RDMA write throughput in bytes per second. API Endpoint Metric Template REST api/cluster/counter/tables/fcvi rdma.write_throughput Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/fcvi.yaml ZAPI perf-object-get-instances fcvi rdma_write_throughput Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/fcvi.yaml","title":"fcvi_rdma_write_throughput"},{"location":"ontap-metrics/#flashcache_accesses","text":"External cache accesses per second API Endpoint Metric Template REST api/cluster/counter/tables/external_cache accesses Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj accesses Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_accesses"},{"location":"ontap-metrics/#flashcache_disk_reads_replaced","text":"Estimated number of disk reads per second replaced by cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache disk_reads_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj disk_reads_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_disk_reads_replaced"},{"location":"ontap-metrics/#flashcache_evicts","text":"Number of blocks evicted from the external cache to make room for new blocks API Endpoint Metric Template REST api/cluster/counter/tables/external_cache evicts Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj evicts Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_evicts"},{"location":"ontap-metrics/#flashcache_hit","text":"Number of WAFL buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit"},{"location":"ontap-metrics/#flashcache_hit_directory","text":"Number of directory buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.directory Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_directory Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit_directory"},{"location":"ontap-metrics/#flashcache_hit_indirect","text":"Number of indirect file buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.indirect Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_indirect Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit_indirect"},{"location":"ontap-metrics/#flashcache_hit_metadata_file","text":"Number of metadata file buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.metadata_file Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_metadata_file Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit_metadata_file"},{"location":"ontap-metrics/#flashcache_hit_normal_lev0","text":"Number of normal level 0 WAFL buffers served off the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.normal_level_zero Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_normal_lev0 Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit_normal_lev0"},{"location":"ontap-metrics/#flashcache_hit_percent","text":"External cache hit rate API Endpoint Metric Template REST api/cluster/counter/tables/external_cache hit.percent Unit: percent Type: average Base: accesses conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj hit_percent Unit: percent Type: percent Base: accesses conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_hit_percent"},{"location":"ontap-metrics/#flashcache_inserts","text":"Number of WAFL buffers inserted into the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache inserts Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj inserts Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_inserts"},{"location":"ontap-metrics/#flashcache_invalidates","text":"Number of blocks invalidated in the external cache API Endpoint Metric Template REST api/cluster/counter/tables/external_cache invalidates Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj invalidates Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_invalidates"},{"location":"ontap-metrics/#flashcache_miss","text":"External cache misses API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_miss"},{"location":"ontap-metrics/#flashcache_miss_directory","text":"External cache misses accessing directory buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.directory Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_directory Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_miss_directory"},{"location":"ontap-metrics/#flashcache_miss_indirect","text":"External cache misses accessing indirect file buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.indirect Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_indirect Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_miss_indirect"},{"location":"ontap-metrics/#flashcache_miss_metadata_file","text":"External cache misses accessing metadata file buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.metadata_file Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_metadata_file Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_miss_metadata_file"},{"location":"ontap-metrics/#flashcache_miss_normal_lev0","text":"External cache misses accessing normal level 0 buffers API Endpoint Metric Template REST api/cluster/counter/tables/external_cache miss.normal_level_zero Unit: per_sec Type: rate Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj miss_normal_lev0 Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_miss_normal_lev0"},{"location":"ontap-metrics/#flashcache_usage","text":"Percentage of blocks in external cache currently containing valid data API Endpoint Metric Template REST api/cluster/counter/tables/external_cache usage Unit: percent Type: raw Base: conf/restperf/9.12.0/ext_cache_obj.yaml ZAPI perf-object-get-instances ext_cache_obj usage Unit: percent Type: raw Base: conf/zapiperf/cdot/9.8.0/ext_cache_obj.yaml","title":"flashcache_usage"},{"location":"ontap-metrics/#flashpool_cache_stats","text":"Automated Working-set Analyzer (AWA) per-interval pseudo cache statistics for the most recent intervals. The number of intervals defined as recent is CM_WAFL_HYAS_INT_DIS_CNT. This array is a table with fields corresponding to the enum type of hyas_cache_stat_type_t. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_sizer cache_stats Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_sizer.yaml ZAPI perf-object-get-instances wafl_hya_sizer cache_stats Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_hya_sizer.yaml","title":"flashpool_cache_stats"},{"location":"ontap-metrics/#flashpool_evict_destage_rate","text":"Number of block destage per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate evict_destage_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr evict_destage_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_evict_destage_rate"},{"location":"ontap-metrics/#flashpool_evict_remove_rate","text":"Number of block free per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate evict_remove_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr evict_remove_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_evict_remove_rate"},{"location":"ontap-metrics/#flashpool_hya_read_hit_latency_average","text":"Average of RAID I/O latency on read hit. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_read_hit_latency_average Unit: none Type: average Base: hya_read_hit_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_read_hit_latency_average Unit: none Type: average Base: hya_read_hit_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_hya_read_hit_latency_average"},{"location":"ontap-metrics/#flashpool_hya_read_miss_latency_average","text":"Average read miss latency. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_read_miss_latency_average Unit: none Type: average Base: hya_read_miss_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_read_miss_latency_average Unit: none Type: average Base: hya_read_miss_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_hya_read_miss_latency_average"},{"location":"ontap-metrics/#flashpool_hya_write_hdd_latency_average","text":"Average write latency to HDD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_write_hdd_latency_average Unit: none Type: average Base: hya_write_hdd_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_write_hdd_latency_average Unit: none Type: average Base: hya_write_hdd_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_hya_write_hdd_latency_average"},{"location":"ontap-metrics/#flashpool_hya_write_ssd_latency_average","text":"Average of RAID I/O latency on write to SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate hya_write_ssd_latency_average Unit: none Type: average Base: hya_write_ssd_latency_count conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr hya_write_ssd_latency_average Unit: none Type: average Base: hya_write_ssd_latency_count conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_hya_write_ssd_latency_average"},{"location":"ontap-metrics/#flashpool_read_cache_ins_rate","text":"Cache insert rate blocks/sec. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_cache_insert_rate Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_cache_ins_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_read_cache_ins_rate"},{"location":"ontap-metrics/#flashpool_read_ops_replaced","text":"Number of HDD read operations replaced by SSD reads per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_ops_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_ops_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_read_ops_replaced"},{"location":"ontap-metrics/#flashpool_read_ops_replaced_percent","text":"Percentage of HDD read operations replace by SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate read_ops_replaced_percent Unit: percent Type: percent Base: read_ops_total conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr read_ops_replaced_percent Unit: percent Type: percent Base: read_ops_total conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_read_ops_replaced_percent"},{"location":"ontap-metrics/#flashpool_ssd_available","text":"Total SSD blocks available. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_available Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_available Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_ssd_available"},{"location":"ontap-metrics/#flashpool_ssd_read_cached","text":"Total read cached SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_read_cached Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_read_cached Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_ssd_read_cached"},{"location":"ontap-metrics/#flashpool_ssd_total","text":"Total SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_total Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_total Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_ssd_total"},{"location":"ontap-metrics/#flashpool_ssd_total_used","text":"Total SSD blocks used. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_total_used Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_total_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_ssd_total_used"},{"location":"ontap-metrics/#flashpool_ssd_write_cached","text":"Total write cached SSD blocks. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate ssd_write_cached Unit: none Type: raw Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr ssd_write_cached Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_ssd_write_cached"},{"location":"ontap-metrics/#flashpool_wc_write_blks_total","text":"Number of write-cache blocks written per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate wc_write_blocks_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr wc_write_blks_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_wc_write_blks_total"},{"location":"ontap-metrics/#flashpool_write_blks_replaced","text":"Number of HDD write blocks replaced by SSD writes per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate write_blocks_replaced Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr write_blks_replaced Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_write_blks_replaced"},{"location":"ontap-metrics/#flashpool_write_blks_replaced_percent","text":"Percentage of blocks overwritten to write-cache among all disk writes. API Endpoint Metric Template REST api/cluster/counter/tables/wafl_hya_per_aggregate write_blocks_replaced_percent Unit: percent Type: average Base: estimated_write_blocks_total conf/restperf/9.12.0/wafl_hya_per_aggr.yaml ZAPI perf-object-get-instances wafl_hya_per_aggr write_blks_replaced_percent Unit: percent Type: average Base: est_write_blks_total conf/zapiperf/cdot/9.8.0/wafl_hya_per_aggr.yaml","title":"flashpool_write_blks_replaced_percent"},{"location":"ontap-metrics/#headroom_aggr_current_latency","text":"This is the storage aggregate average latency per message at the disk level. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_latency Unit: microsec Type: average Base: current_ops conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_latency Unit: microsec Type: average Base: current_ops conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_current_latency"},{"location":"ontap-metrics/#headroom_aggr_current_ops","text":"Total number of I/Os processed by the aggregate per second. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_current_ops"},{"location":"ontap-metrics/#headroom_aggr_current_utilization","text":"This is the storage aggregate average utilization of all the data disks in the aggregate. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate current_utilization Unit: percent Type: percent Base: current_utilization_denominator conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr current_utilization Unit: percent Type: percent Base: current_utilization_total conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_current_utilization"},{"location":"ontap-metrics/#headroom_aggr_ewma_daily","text":"Daily exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.daily Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_daily Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_ewma_daily"},{"location":"ontap-metrics/#headroom_aggr_ewma_hourly","text":"Hourly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.hourly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_hourly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_ewma_hourly"},{"location":"ontap-metrics/#headroom_aggr_ewma_monthly","text":"Monthly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.monthly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_monthly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_ewma_monthly"},{"location":"ontap-metrics/#headroom_aggr_ewma_weekly","text":"Weekly exponential weighted moving average. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate ewma.weekly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr ewma_weekly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_ewma_weekly"},{"location":"ontap-metrics/#headroom_aggr_optimal_point_confidence_factor","text":"The confidence factor for the optimal point value based on the observed resource latency and utilization. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.confidence_factor Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_confidence_factor Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_optimal_point_confidence_factor"},{"location":"ontap-metrics/#headroom_aggr_optimal_point_latency","text":"The latency component of the optimal point of the latency/utilization curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.latency Unit: microsec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_latency Unit: microsec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_optimal_point_latency"},{"location":"ontap-metrics/#headroom_aggr_optimal_point_ops","text":"The ops component of the optimal point derived from the latency/utilzation curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.ops Unit: per_sec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_ops Unit: per_sec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_optimal_point_ops"},{"location":"ontap-metrics/#headroom_aggr_optimal_point_utilization","text":"The utilization component of the optimal point of the latency/utilization curve. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_aggregate optimal_point.utilization Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_aggr.yaml ZAPI perf-object-get-instances resource_headroom_aggr optimal_point_utilization Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_aggr.yaml","title":"headroom_aggr_optimal_point_utilization"},{"location":"ontap-metrics/#headroom_cpu_current_latency","text":"Current operation latency of the resource. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_latency Unit: microsec Type: average Base: current_ops conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_latency Unit: microsec Type: average Base: current_ops conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_current_latency"},{"location":"ontap-metrics/#headroom_cpu_current_ops","text":"Total number of operations per second (also referred to as dblade ops). API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_current_ops"},{"location":"ontap-metrics/#headroom_cpu_current_utilization","text":"Average processor utilization across all processors in the system. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu current_utilization Unit: percent Type: percent Base: elapsed_time conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu current_utilization Unit: percent Type: percent Base: current_utilization_total conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_current_utilization"},{"location":"ontap-metrics/#headroom_cpu_ewma_daily","text":"Daily exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.daily Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_daily Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_ewma_daily"},{"location":"ontap-metrics/#headroom_cpu_ewma_hourly","text":"Hourly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.hourly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_hourly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_ewma_hourly"},{"location":"ontap-metrics/#headroom_cpu_ewma_monthly","text":"Monthly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.monthly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_monthly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_ewma_monthly"},{"location":"ontap-metrics/#headroom_cpu_ewma_weekly","text":"Weekly exponential weighted moving average for current_ops, optimal_point_ops, current_latency, optimal_point_latency, current_utilization, optimal_point_utilization and optimal_point_confidence_factor. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu ewma.weekly Unit: none Type: raw Base: conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu ewma_weekly Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_ewma_weekly"},{"location":"ontap-metrics/#headroom_cpu_optimal_point_confidence_factor","text":"Confidence factor for the optimal point value based on the observed resource latency and utilization. The possible values are: 0 - unknown, 1 - low, 2 - medium, 3 - high. This counter can provide an average confidence factor over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.confidence_factor Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_confidence_factor Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_optimal_point_confidence_factor"},{"location":"ontap-metrics/#headroom_cpu_optimal_point_latency","text":"Latency component of the optimal point of the latency/utilization curve. This counter can provide an average latency over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.latency Unit: microsec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_latency Unit: microsec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_optimal_point_latency"},{"location":"ontap-metrics/#headroom_cpu_optimal_point_ops","text":"Ops component of the optimal point derived from the latency/utilization curve. This counter can provide an average ops over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.ops Unit: per_sec Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_ops Unit: per_sec Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_optimal_point_ops"},{"location":"ontap-metrics/#headroom_cpu_optimal_point_utilization","text":"Utilization component of the optimal point of the latency/utilization curve. This counter can provide an average utilization over a range of time. API Endpoint Metric Template REST /api/cluster/counter/tables/headroom_cpu optimal_point.utilization Unit: none Type: average Base: optimal_point.samples conf/restperf/9.12.0/resource_headroom_cpu.yaml ZAPI perf-object-get-instances resource_headroom_cpu optimal_point_utilization Unit: none Type: average Base: optimal_point_samples conf/zapiperf/cdot/9.8.0/resource_headroom_cpu.yaml","title":"headroom_cpu_optimal_point_utilization"},{"location":"ontap-metrics/#hostadapter_bytes_read","text":"Bytes read through a host adapter API Endpoint Metric Template REST api/cluster/counter/tables/host_adapter bytes_read Unit: per_sec Type: rate Base: conf/restperf/9.12.0/hostadapter.yaml ZAPI perf-object-get-instances hostadapter bytes_read Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/hostadapter.yaml","title":"hostadapter_bytes_read"},{"location":"ontap-metrics/#hostadapter_bytes_written","text":"Bytes written through a host adapter API Endpoint Metric Template REST api/cluster/counter/tables/host_adapter bytes_written Unit: per_sec Type: rate Base: conf/restperf/9.12.0/hostadapter.yaml ZAPI perf-object-get-instances hostadapter bytes_written Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/hostadapter.yaml","title":"hostadapter_bytes_written"},{"location":"ontap-metrics/#iscsi_lif_avg_latency","text":"Average latency for iSCSI operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_latency Unit: microsec Type: average Base: cmd_transferred conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_latency Unit: microsec Type: average Base: cmd_transfered conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_avg_latency"},{"location":"ontap-metrics/#iscsi_lif_avg_other_latency","text":"Average latency for operations other than read and write (for example, Inquiry, Report LUNs, SCSI Task Management Functions) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_avg_other_latency"},{"location":"ontap-metrics/#iscsi_lif_avg_read_latency","text":"Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_avg_read_latency"},{"location":"ontap-metrics/#iscsi_lif_avg_write_latency","text":"Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif average_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif avg_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_avg_write_latency"},{"location":"ontap-metrics/#iscsi_lif_cmd_transfered","text":"Command transfered by this iSCSI conn API Endpoint Metric Template ZAPI perf-object-get-instances iscsi_lif cmd_transfered Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_cmd_transfered"},{"location":"ontap-metrics/#iscsi_lif_cmd_transferred","text":"Command transferred by this iSCSI connection API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif cmd_transferred Unit: none Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml","title":"iscsi_lif_cmd_transferred"},{"location":"ontap-metrics/#iscsi_lif_iscsi_other_ops","text":"iSCSI other operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_iscsi_other_ops"},{"location":"ontap-metrics/#iscsi_lif_iscsi_read_ops","text":"iSCSI read operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_iscsi_read_ops"},{"location":"ontap-metrics/#iscsi_lif_iscsi_write_ops","text":"iSCSI write operations per second on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif iscsi_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif iscsi_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_iscsi_write_ops"},{"location":"ontap-metrics/#iscsi_lif_protocol_errors","text":"Number of protocol errors from iSCSI sessions on this logical interface (LIF) API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif protocol_errors Unit: none Type: delta Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif protocol_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_protocol_errors"},{"location":"ontap-metrics/#iscsi_lif_read_data","text":"Amount of data read from the storage system in bytes API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_read_data"},{"location":"ontap-metrics/#iscsi_lif_write_data","text":"Amount of data written to the storage system in bytes API Endpoint Metric Template REST api/cluster/counter/tables/iscsi_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/iscsi_lif.yaml ZAPI perf-object-get-instances iscsi_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/iscsi_lif.yaml","title":"iscsi_lif_write_data"},{"location":"ontap-metrics/#lif_recv_data","text":"Number of bytes received per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_recv_data"},{"location":"ontap-metrics/#lif_recv_errors","text":"Number of received Errors per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_errors Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_errors Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_recv_errors"},{"location":"ontap-metrics/#lif_recv_packet","text":"Number of packets received per second API Endpoint Metric Template REST api/cluster/counter/tables/lif received_packets Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif recv_packet Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_recv_packet"},{"location":"ontap-metrics/#lif_sent_data","text":"Number of bytes sent per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_sent_data"},{"location":"ontap-metrics/#lif_sent_errors","text":"Number of sent errors per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_errors Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_errors Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_sent_errors"},{"location":"ontap-metrics/#lif_sent_packet","text":"Number of packets sent per second API Endpoint Metric Template REST api/cluster/counter/tables/lif sent_packets Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lif.yaml ZAPI perf-object-get-instances lif sent_packet Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lif.yaml","title":"lif_sent_packet"},{"location":"ontap-metrics/#lun_avg_read_latency","text":"Average read latency in microseconds for all operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_avg_read_latency"},{"location":"ontap-metrics/#lun_avg_write_latency","text":"Average write latency in microseconds for all operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_avg_write_latency"},{"location":"ontap-metrics/#lun_avg_xcopy_latency","text":"Average latency in microseconds for xcopy requests API Endpoint Metric Template REST api/cluster/counter/tables/lun average_xcopy_latency Unit: microsec Type: average Base: xcopy_requests conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun avg_xcopy_latency Unit: microsec Type: average Base: xcopy_reqs conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_avg_xcopy_latency"},{"location":"ontap-metrics/#lun_caw_reqs","text":"Number of compare and write requests API Endpoint Metric Template REST api/cluster/counter/tables/lun caw_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun caw_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_caw_reqs"},{"location":"ontap-metrics/#lun_enospc","text":"Number of operations receiving ENOSPC errors API Endpoint Metric Template REST api/cluster/counter/tables/lun enospc Unit: none Type: delta Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun enospc Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_enospc"},{"location":"ontap-metrics/#lun_queue_full","text":"Queue full responses API Endpoint Metric Template REST api/cluster/counter/tables/lun queue_full Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun queue_full Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_queue_full"},{"location":"ontap-metrics/#lun_read_align_histo","text":"Histogram of WAFL read alignment (number sectors off WAFL block start) API Endpoint Metric Template REST api/cluster/counter/tables/lun read_align_histogram Unit: percent Type: percent Base: read_ops_sent conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_align_histo Unit: percent Type: percent Base: read_ops_sent conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_read_align_histo"},{"location":"ontap-metrics/#lun_read_data","text":"Read bytes API Endpoint Metric Template REST api/cluster/counter/tables/lun read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_read_data"},{"location":"ontap-metrics/#lun_read_ops","text":"Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/lun read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_read_ops"},{"location":"ontap-metrics/#lun_read_partial_blocks","text":"Percentage of reads whose size is not a multiple of WAFL block size API Endpoint Metric Template REST api/cluster/counter/tables/lun read_partial_blocks Unit: percent Type: percent Base: read_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun read_partial_blocks Unit: percent Type: percent Base: read_ops conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_read_partial_blocks"},{"location":"ontap-metrics/#lun_remote_bytes","text":"I/O to or from a LUN which is not owned by the storage system handling the I/O. API Endpoint Metric Template REST api/cluster/counter/tables/lun remote_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun remote_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_remote_bytes"},{"location":"ontap-metrics/#lun_remote_ops","text":"Number of operations received by a storage system that does not own the LUN targeted by the operations. API Endpoint Metric Template REST api/cluster/counter/tables/lun remote_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun remote_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_remote_ops"},{"location":"ontap-metrics/#lun_size","text":"The total provisioned size of the LUN. The LUN size can be increased but not be made smaller using the REST interface. The maximum and minimum sizes listed here are the absolute maximum and absolute minimum sizes in bytes. The actual minimum and maxiumum sizes vary depending on the ONTAP version, ONTAP platform and the available space in the containing volume and aggregate. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/luns space.size conf/rest/9.12.0/lun.yaml ZAPI lun-get-iter lun-info.size conf/zapi/cdot/9.8.0/lun.yaml","title":"lun_size"},{"location":"ontap-metrics/#lun_size_used","text":"The amount of space consumed by the main data stream of the LUN. This value is the total space consumed in the volume by the LUN, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways SAN filesystems and applications utilize blocks within a LUN, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the LUN blocks are utilized outside of ONTAP, this property should not be used as an indicator for an out-of-space condition. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/luns space.used conf/rest/9.12.0/lun.yaml ZAPI lun-get-iter lun-info.size-used conf/zapi/cdot/9.8.0/lun.yaml","title":"lun_size_used"},{"location":"ontap-metrics/#lun_unmap_reqs","text":"Number of unmap command requests API Endpoint Metric Template REST api/cluster/counter/tables/lun unmap_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun unmap_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_unmap_reqs"},{"location":"ontap-metrics/#lun_write_align_histo","text":"Histogram of WAFL write alignment (number of sectors off WAFL block start) API Endpoint Metric Template REST api/cluster/counter/tables/lun write_align_histogram Unit: percent Type: percent Base: write_ops_sent conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_align_histo Unit: percent Type: percent Base: write_ops_sent conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_write_align_histo"},{"location":"ontap-metrics/#lun_write_data","text":"Write bytes API Endpoint Metric Template REST api/cluster/counter/tables/lun write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_write_data"},{"location":"ontap-metrics/#lun_write_ops","text":"Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/lun write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_write_ops"},{"location":"ontap-metrics/#lun_write_partial_blocks","text":"Percentage of writes whose size is not a multiple of WAFL block size API Endpoint Metric Template REST api/cluster/counter/tables/lun write_partial_blocks Unit: percent Type: percent Base: write_ops conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun write_partial_blocks Unit: percent Type: percent Base: write_ops conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_write_partial_blocks"},{"location":"ontap-metrics/#lun_writesame_reqs","text":"Number of write same command requests API Endpoint Metric Template REST api/cluster/counter/tables/lun writesame_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun writesame_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_writesame_reqs"},{"location":"ontap-metrics/#lun_writesame_unmap_reqs","text":"Number of write same commands requests with unmap bit set API Endpoint Metric Template REST api/cluster/counter/tables/lun writesame_unmap_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun writesame_unmap_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_writesame_unmap_reqs"},{"location":"ontap-metrics/#lun_xcopy_reqs","text":"Total number of xcopy operations on the LUN API Endpoint Metric Template REST api/cluster/counter/tables/lun xcopy_requests Unit: none Type: rate Base: conf/restperf/9.12.0/lun.yaml ZAPI perf-object-get-instances lun xcopy_reqs Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/lun.yaml","title":"lun_xcopy_reqs"},{"location":"ontap-metrics/#metadata_collector_api_time","text":"amount of time to collect data from monitored cluster object API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_api_time"},{"location":"ontap-metrics/#metadata_collector_calc_time","text":"amount of time it took to compute metrics between two successive polls, specifically using properties like raw, delta, rate, average, and percent. This metric is available for ZapiPerf/RestPerf collectors. API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_calc_time"},{"location":"ontap-metrics/#metadata_collector_instances","text":"number of objects collected from monitored cluster API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_collector_instances"},{"location":"ontap-metrics/#metadata_collector_metrics","text":"number of counters collected from monitored cluster API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_collector_metrics"},{"location":"ontap-metrics/#metadata_collector_parse_time","text":"amount of time to parse XML, JSON, etc. for cluster object API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_parse_time"},{"location":"ontap-metrics/#metadata_collector_plugin_time","text":"amount of time for all plugins to post-process metrics API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_plugin_time"},{"location":"ontap-metrics/#metadata_collector_poll_time","text":"amount of time it took for the poll to finish API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_poll_time"},{"location":"ontap-metrics/#metadata_collector_skips","text":"number of metrics that were not calculated between two successive polls. This metric is available for ZapiPerf/RestPerf collectors. API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_collector_skips"},{"location":"ontap-metrics/#metadata_collector_task_time","text":"amount of time it took for each collector's subtasks to complete API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_collector_task_time"},{"location":"ontap-metrics/#metadata_component_count","text":"number of metrics collected for each object API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_component_count"},{"location":"ontap-metrics/#metadata_component_status","text":"status of the collector - 0 means running, 1 means standby, 2 means failed API Endpoint Metric Template REST NA Harvest generated Unit: enum NA ZAPI NA Harvest generated Unit: enum NA","title":"metadata_component_status"},{"location":"ontap-metrics/#metadata_exporter_count","text":"number of metrics and labels exported API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_exporter_count"},{"location":"ontap-metrics/#metadata_exporter_time","text":"amount of time it took to render, export, and serve exported data API Endpoint Metric Template REST NA Harvest generated Unit: microseconds NA ZAPI NA Harvest generated Unit: microseconds NA","title":"metadata_exporter_time"},{"location":"ontap-metrics/#metadata_target_goroutines","text":"number of goroutines that exist within the poller API Endpoint Metric Template REST NA Harvest generated Unit: scalar NA ZAPI NA Harvest generated Unit: scalar NA","title":"metadata_target_goroutines"},{"location":"ontap-metrics/#metadata_target_status","text":"status of the system being monitored. 0 means reachable, 1 means unreachable API Endpoint Metric Template REST NA Harvest generated Unit: enum NA ZAPI NA Harvest generated Unit: enum NA","title":"metadata_target_status"},{"location":"ontap-metrics/#namespace_avg_other_latency","text":"Average other ops latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_avg_other_latency"},{"location":"ontap-metrics/#namespace_avg_read_latency","text":"Average read latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_avg_read_latency"},{"location":"ontap-metrics/#namespace_avg_write_latency","text":"Average write latency in microseconds for all operations on the Namespace API Endpoint Metric Template REST api/cluster/counter/tables/namespace average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_avg_write_latency"},{"location":"ontap-metrics/#namespace_block_size","text":"The size of blocks in the namespace in bytes. Valid in POST when creating an NVMe namespace that is not a clone of another. Disallowed in POST when creating a namespace clone. Valid in POST. API Endpoint Metric Template REST api/storage/namespaces space.block_size conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.block-size conf/zapi/cdot/9.8.0/namespace.yaml","title":"namespace_block_size"},{"location":"ontap-metrics/#namespace_other_ops","text":"Number of other operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_other_ops"},{"location":"ontap-metrics/#namespace_read_data","text":"Read bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_read_data"},{"location":"ontap-metrics/#namespace_read_ops","text":"Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_read_ops"},{"location":"ontap-metrics/#namespace_remote_bytes","text":"Remote read bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace remote.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace remote_bytes Unit: Type: Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_remote_bytes"},{"location":"ontap-metrics/#namespace_remote_ops","text":"Number of remote read operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace remote.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace remote_ops Unit: Type: Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_remote_ops"},{"location":"ontap-metrics/#namespace_size","text":"The total provisioned size of the NVMe namespace. Valid in POST and PATCH. The NVMe namespace size can be increased but not be made smaller using the REST interface. The maximum and minimum sizes listed here are the absolute maximum and absolute minimum sizes in bytes. The maximum size is variable with respect to large NVMe namespace support in ONTAP. If large namespaces are supported, the maximum size is 128 TB (140737488355328 bytes) and if not supported, the maximum size is just under 16 TB (17557557870592 bytes). The minimum size supported is always 4096 bytes. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/namespaces space.size conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.size conf/zapi/cdot/9.8.0/namespace.yaml","title":"namespace_size"},{"location":"ontap-metrics/#namespace_size_used","text":"The amount of space consumed by the main data stream of the NVMe namespace. This value is the total space consumed in the volume by the NVMe namespace, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways NVMe filesystems and applications utilize blocks within a namespace, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the namespace blocks are utilized outside of ONTAP, this property should not be used and an indicator for an out-of-space condition. For more information, see Size properties in the docs section of the ONTAP REST API documentation. API Endpoint Metric Template REST api/storage/namespaces space.used conf/rest/9.12.0/namespace.yaml ZAPI nvme-namespace-get-iter nvme-namespace-info.size-used conf/zapi/cdot/9.8.0/namespace.yaml","title":"namespace_size_used"},{"location":"ontap-metrics/#namespace_write_data","text":"Write bytes API Endpoint Metric Template REST api/cluster/counter/tables/namespace write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_write_data"},{"location":"ontap-metrics/#namespace_write_ops","text":"Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/namespace write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/namespace.yaml ZAPI perf-object-get-instances namespace write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/namespace.yaml","title":"namespace_write_ops"},{"location":"ontap-metrics/#net_port_mtu","text":"Maximum transmission unit, largest packet size on this network API Endpoint Metric Template REST api/network/ethernet/ports mtu conf/rest/9.12.0/netport.yaml ZAPI net-port-get-iter net-port-info.mtu conf/zapi/cdot/9.8.0/netport.yaml","title":"net_port_mtu"},{"location":"ontap-metrics/#netstat_bytes_recvd","text":"Number of bytes received by a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat bytes_recvd Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_bytes_recvd"},{"location":"ontap-metrics/#netstat_bytes_sent","text":"Number of bytes sent by a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat bytes_sent Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_bytes_sent"},{"location":"ontap-metrics/#netstat_cong_win","text":"Congestion window of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat cong_win Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_cong_win"},{"location":"ontap-metrics/#netstat_cong_win_th","text":"Congestion window threshold of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat cong_win_th Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_cong_win_th"},{"location":"ontap-metrics/#netstat_ooorcv_pkts","text":"Number of out-of-order packets received by this TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat ooorcv_pkts Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_ooorcv_pkts"},{"location":"ontap-metrics/#netstat_recv_window","text":"Receive window size of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat recv_window Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_recv_window"},{"location":"ontap-metrics/#netstat_rexmit_pkts","text":"Number of packets retransmitted by this TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat rexmit_pkts Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_rexmit_pkts"},{"location":"ontap-metrics/#netstat_send_window","text":"Send window size of a TCP connection API Endpoint Metric Template ZAPI perf-object-get-instances netstat send_window Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/netstat.yaml","title":"netstat_send_window"},{"location":"ontap-metrics/#nfs_clients_idle_duration","text":"Specifies an ISO-8601 format of date and time to retrieve the idle time duration in hours, minutes, and seconds format. API Endpoint Metric Template REST api/protocols/nfs/connected-clients idle_duration conf/rest/9.7.0/nfs_clients.yaml","title":"nfs_clients_idle_duration"},{"location":"ontap-metrics/#nfs_diag_storepool_bytelockalloc","text":"Current number of byte range lock objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.byte_lock_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ByteLockAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ByteLockAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_bytelockmax","text":"Maximum number of byte range lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.byte_lock_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ByteLockMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ByteLockMax"},{"location":"ontap-metrics/#nfs_diag_storepool_clientalloc","text":"Current number of client objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.client_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ClientAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ClientAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_clientmax","text":"Maximum number of client objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.client_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ClientMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ClientMax"},{"location":"ontap-metrics/#nfs_diag_storepool_connectionparentsessionreferencealloc","text":"Current number of connection parent session reference objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.connection_parent_session_reference_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ConnectionParentSessionReferenceAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ConnectionParentSessionReferenceAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_connectionparentsessionreferencemax","text":"Maximum number of connection parent session reference objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.connection_parent_session_reference_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_ConnectionParentSessionReferenceMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_ConnectionParentSessionReferenceMax"},{"location":"ontap-metrics/#nfs_diag_storepool_copystatealloc","text":"Current number of copy state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.copy_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_CopyStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_CopyStateAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_copystatemax","text":"Maximum number of copy state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.copy_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_CopyStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_CopyStateMax"},{"location":"ontap-metrics/#nfs_diag_storepool_delegalloc","text":"Current number of delegation lock objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_DelegAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_delegmax","text":"Maximum number delegation lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_DelegMax"},{"location":"ontap-metrics/#nfs_diag_storepool_delegstatealloc","text":"Current number of delegation state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_DelegStateAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_delegstatemax","text":"Maximum number of delegation state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.delegation_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_DelegStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_DelegStateMax"},{"location":"ontap-metrics/#nfs_diag_storepool_layoutalloc","text":"Current number of layout objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LayoutAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_layoutmax","text":"Maximum number of layout objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LayoutMax"},{"location":"ontap-metrics/#nfs_diag_storepool_layoutstatealloc","text":"Current number of layout state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LayoutStateAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_layoutstatemax","text":"Maximum number of layout state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.layout_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LayoutStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LayoutStateMax"},{"location":"ontap-metrics/#nfs_diag_storepool_lockstatealloc","text":"Current number of lock state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.lock_state_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LockStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LockStateAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_lockstatemax","text":"Maximum number of lock state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.lock_state_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_LockStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_LockStateMax"},{"location":"ontap-metrics/#nfs_diag_storepool_openalloc","text":"Current number of share objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.open_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OpenAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_openmax","text":"Maximum number of share lock objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.open_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OpenMax"},{"location":"ontap-metrics/#nfs_diag_storepool_openstatealloc","text":"Current number of open state objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.openstate_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenStateAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OpenStateAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_openstatemax","text":"Maximum number of open state objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.openstate_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OpenStateMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OpenStateMax"},{"location":"ontap-metrics/#nfs_diag_storepool_owneralloc","text":"Current number of owner objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.owner_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OwnerAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OwnerAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_ownermax","text":"Maximum number of owner objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.owner_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_OwnerMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_OwnerMax"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionalloc","text":"Current number of session objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionconnectionholderalloc","text":"Current number of session connection holder objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_connection_holder_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionConnectionHolderAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionConnectionHolderAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionconnectionholdermax","text":"Maximum number of session connection holder objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_connection_holder_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionConnectionHolderMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionConnectionHolderMax"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionholderalloc","text":"Current number of session holder objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_holder_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionHolderAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionHolderAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionholdermax","text":"Maximum number of session holder objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_holder_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionHolderMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionHolderMax"},{"location":"ontap-metrics/#nfs_diag_storepool_sessionmax","text":"Maximum number of session objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.session_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_SessionMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_SessionMax"},{"location":"ontap-metrics/#nfs_diag_storepool_staterefhistoryalloc","text":"Current number of state reference callstack history objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.state_reference_history_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StateRefHistoryAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_StateRefHistoryAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_staterefhistorymax","text":"Maximum number of state reference callstack history objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.state_reference_history_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StateRefHistoryMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_StateRefHistoryMax"},{"location":"ontap-metrics/#nfs_diag_storepool_stringalloc","text":"Current number of string objects allocated. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.string_allocated Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StringAlloc Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_StringAlloc"},{"location":"ontap-metrics/#nfs_diag_storepool_stringmax","text":"Maximum number of string objects. API Endpoint Metric Template REST api/cluster/counter/tables/nfs_v4_diag storepool.string_maximum Unit: none Type: raw Base: conf/restperf/9.12.0/nfsv4_pool.yaml ZAPI perf-object-get-instances nfsv4_diag storePool_StringMax Unit: none Type: raw,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_pool.yaml","title":"nfs_diag_storePool_StringMax"},{"location":"ontap-metrics/#nic_link_up_to_downs","text":"Number of link state change from UP to DOWN. API Endpoint Metric Template REST api/cluster/counter/tables/nic_common link_up_to_down Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common link_up_to_downs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_link_up_to_downs"},{"location":"ontap-metrics/#nic_rx_alignment_errors","text":"Alignment errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_alignment_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_alignment_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_alignment_errors"},{"location":"ontap-metrics/#nic_rx_bytes","text":"Bytes received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_bytes"},{"location":"ontap-metrics/#nic_rx_crc_errors","text":"CRC errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_crc_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_crc_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_crc_errors"},{"location":"ontap-metrics/#nic_rx_errors","text":"Error received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_errors Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_errors Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_errors"},{"location":"ontap-metrics/#nic_rx_length_errors","text":"Length errors detected on received packets API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_length_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_length_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_length_errors"},{"location":"ontap-metrics/#nic_rx_total_errors","text":"Total errors received API Endpoint Metric Template REST api/cluster/counter/tables/nic_common receive_total_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common rx_total_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_rx_total_errors"},{"location":"ontap-metrics/#nic_tx_bytes","text":"Bytes sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_bytes Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_bytes Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_tx_bytes"},{"location":"ontap-metrics/#nic_tx_errors","text":"Error sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_errors Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_errors Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_tx_errors"},{"location":"ontap-metrics/#nic_tx_hw_errors","text":"Transmit errors reported by hardware API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_hw_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_hw_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_tx_hw_errors"},{"location":"ontap-metrics/#nic_tx_total_errors","text":"Total errors sent API Endpoint Metric Template REST api/cluster/counter/tables/nic_common transmit_total_errors Unit: none Type: delta Base: conf/restperf/9.12.0/nic_common.yaml ZAPI perf-object-get-instances nic_common tx_total_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/nic_common.yaml","title":"nic_tx_total_errors"},{"location":"ontap-metrics/#node_avg_processor_busy","text":"Average processor utilization across all processors in the system API Endpoint Metric Template REST api/cluster/counter/tables/system:node average_processor_busy_percent Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node avg_processor_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_avg_processor_busy"},{"location":"ontap-metrics/#node_cifs_connections","text":"Number of connections API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node connections Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_connections"},{"location":"ontap-metrics/#node_cifs_established_sessions","text":"Number of established SMB and SMB2 sessions API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node established_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node established_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_established_sessions"},{"location":"ontap-metrics/#node_cifs_latency","text":"Average latency for CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node latency Unit: microsec Type: average Base: latency_base conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_latency Unit: microsec Type: average Base: cifs_latency_base conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_latency"},{"location":"ontap-metrics/#node_cifs_op_count","text":"Array of select CIFS operation counts API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node op_count Unit: none Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_op_count Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_op_count"},{"location":"ontap-metrics/#node_cifs_open_files","text":"Number of open files over SMB and SMB2 API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node open_files Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node open_files Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_open_files"},{"location":"ontap-metrics/#node_cifs_ops","text":"Number of CIFS operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node cifs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_cifs_ops"},{"location":"ontap-metrics/#node_cifs_read_latency","text":"Average latency for CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node average_read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_read_latency"},{"location":"ontap-metrics/#node_cifs_read_ops","text":"Total number of CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_read_ops"},{"location":"ontap-metrics/#node_cifs_total_ops","text":"Total number of CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_total_ops"},{"location":"ontap-metrics/#node_cifs_write_latency","text":"Average latency for CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node average_write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_write_latency"},{"location":"ontap-metrics/#node_cifs_write_ops","text":"Total number of CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs:node total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_node.yaml ZAPI perf-object-get-instances cifs:node cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_node.yaml","title":"node_cifs_write_ops"},{"location":"ontap-metrics/#node_cpu_busy","text":"System CPU resource utilization. Returns a computed percentage for the default CPU field. Basically computes a 'cpu usage summary' value which indicates how 'busy' the system is based upon the most heavily utilized domain. The idea is to determine the amount of available CPU until we're limited by either a domain maxing out OR we exhaust all available idle CPU cycles, whichever occurs first. API Endpoint Metric Template REST api/cluster/counter/tables/system:node cpu_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cpu_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_cpu_busy"},{"location":"ontap-metrics/#node_cpu_busytime","text":"The time (in hundredths of a second) that the CPU has been doing useful work since the last boot API Endpoint Metric Template ZAPI system-node-get-iter node-details-info.cpu-busytime conf/zapi/cdot/9.8.0/node.yaml REST api/private/cli/node cpu_busy_time conf/rest/9.12.0/node.yaml","title":"node_cpu_busytime"},{"location":"ontap-metrics/#node_cpu_domain_busy","text":"Array of processor time in percentage spent in various domains API Endpoint Metric Template REST api/cluster/counter/tables/system:node domain_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node domain_busy Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_cpu_domain_busy"},{"location":"ontap-metrics/#node_cpu_elapsed_time","text":"Elapsed time since boot API Endpoint Metric Template REST api/cluster/counter/tables/system:node cpu_elapsed_time Unit: microsec Type: delta Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node cpu_elapsed_time Unit: none Type: delta,no-display Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_cpu_elapsed_time"},{"location":"ontap-metrics/#node_disk_data_read","text":"Number of disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node disk_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node disk_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_disk_data_read"},{"location":"ontap-metrics/#node_disk_data_written","text":"Number of disk kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node disk_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node disk_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_disk_data_written"},{"location":"ontap-metrics/#node_failed_fan","text":"Specifies a count of the number of chassis fans that are not operating within the recommended RPM range. API Endpoint Metric Template REST api/cluster/nodes controller.failed_fan.count conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.env-failed-fan-count conf/zapi/cdot/9.8.0/node.yaml","title":"node_failed_fan"},{"location":"ontap-metrics/#node_failed_power","text":"Number of failed power supply units. API Endpoint Metric Template REST api/cluster/nodes controller.failed_power_supply.count conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.env-failed-power-supply-count conf/zapi/cdot/9.8.0/node.yaml","title":"node_failed_power"},{"location":"ontap-metrics/#node_fcp_data_recv","text":"Number of FCP kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_fcp_data_recv"},{"location":"ontap-metrics/#node_fcp_data_sent","text":"Number of FCP kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_fcp_data_sent"},{"location":"ontap-metrics/#node_fcp_ops","text":"Number of FCP operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node fcp_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node fcp_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_fcp_ops"},{"location":"ontap-metrics/#node_hdd_data_read","text":"Number of HDD Disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node hdd_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node hdd_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_hdd_data_read"},{"location":"ontap-metrics/#node_hdd_data_written","text":"Number of HDD kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node hdd_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node hdd_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_hdd_data_written"},{"location":"ontap-metrics/#node_iscsi_ops","text":"Number of iSCSI operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node iscsi_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node iscsi_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_iscsi_ops"},{"location":"ontap-metrics/#node_memory","text":"Total memory in megabytes (MB) API Endpoint Metric Template REST api/cluster/counter/tables/system:node memory Unit: none Type: raw Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node memory Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_memory"},{"location":"ontap-metrics/#node_net_data_recv","text":"Number of network kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node network_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node net_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_net_data_recv"},{"location":"ontap-metrics/#node_net_data_sent","text":"Number of network kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node network_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node net_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_net_data_sent"},{"location":"ontap-metrics/#node_nfs_access_avg_latency","text":"Average latency of ACCESS procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node access.average_latency Unit: microsec Type: average Base: access.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node access_avg_latency Unit: microsec Type: average,no-zero-values Base: access_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_access_avg_latency"},{"location":"ontap-metrics/#node_nfs_access_total","text":"Total number of ACCESS procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node access.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node access_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_access_total"},{"location":"ontap-metrics/#node_nfs_backchannel_ctl_avg_latency","text":"Average latency of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node backchannel_ctl.average_latency Unit: microsec Type: average Base: backchannel_ctl.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node backchannel_ctl_avg_latency Unit: microsec Type: average,no-zero-values Base: backchannel_ctl_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_backchannel_ctl_avg_latency"},{"location":"ontap-metrics/#node_nfs_backchannel_ctl_total","text":"Total number of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node backchannel_ctl.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node backchannel_ctl_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_backchannel_ctl_total"},{"location":"ontap-metrics/#node_nfs_bind_conn_to_session_avg_latency","text":"Average latency of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node bind_conn_to_session.average_latency Unit: microsec Type: average Base: bind_conn_to_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node bind_conn_to_session_avg_latency Unit: microsec Type: average,no-zero-values Base: bind_conn_to_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_bind_conn_to_session_avg_latency"},{"location":"ontap-metrics/#node_nfs_bind_conn_to_session_total","text":"Total number of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node bind_conn_to_session.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node bind_conn_to_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_bind_conn_to_session_total"},{"location":"ontap-metrics/#node_nfs_close_avg_latency","text":"Average latency of CLOSE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node close.average_latency Unit: microsec Type: average Base: close.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node close_avg_latency Unit: microsec Type: average,no-zero-values Base: close_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_close_avg_latency"},{"location":"ontap-metrics/#node_nfs_close_total","text":"Total number of CLOSE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node close.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node close_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_close_total"},{"location":"ontap-metrics/#node_nfs_commit_avg_latency","text":"Average latency of COMMIT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node commit.average_latency Unit: microsec Type: average Base: commit.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node commit_avg_latency Unit: microsec Type: average,no-zero-values Base: commit_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_commit_avg_latency"},{"location":"ontap-metrics/#node_nfs_commit_total","text":"Total number of COMMIT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node commit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node commit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_commit_total"},{"location":"ontap-metrics/#node_nfs_create_avg_latency","text":"Average latency of CREATE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node create.average_latency Unit: microsec Type: average Base: create.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node create_avg_latency Unit: microsec Type: average,no-zero-values Base: create_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_create_avg_latency"},{"location":"ontap-metrics/#node_nfs_create_session_avg_latency","text":"Average latency of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node create_session.average_latency Unit: microsec Type: average Base: create_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node create_session_avg_latency Unit: microsec Type: average,no-zero-values Base: create_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_create_session_avg_latency"},{"location":"ontap-metrics/#node_nfs_create_session_total","text":"Total number of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node create_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node create_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_create_session_total"},{"location":"ontap-metrics/#node_nfs_create_total","text":"Total number of CREATE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node create.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node create_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_create_total"},{"location":"ontap-metrics/#node_nfs_delegpurge_avg_latency","text":"Average latency of DELEGPURGE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegpurge.average_latency Unit: microsec Type: average Base: delegpurge.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegpurge_avg_latency Unit: microsec Type: average,no-zero-values Base: delegpurge_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_delegpurge_avg_latency"},{"location":"ontap-metrics/#node_nfs_delegpurge_total","text":"Total number of DELEGPURGE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegpurge.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegpurge_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_delegpurge_total"},{"location":"ontap-metrics/#node_nfs_delegreturn_avg_latency","text":"Average latency of DELEGRETURN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegreturn.average_latency Unit: microsec Type: average Base: delegreturn.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: delegreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_delegreturn_avg_latency"},{"location":"ontap-metrics/#node_nfs_delegreturn_total","text":"Total number of DELEGRETURN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node delegreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node delegreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_delegreturn_total"},{"location":"ontap-metrics/#node_nfs_destroy_clientid_avg_latency","text":"Average latency of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_clientid.average_latency Unit: microsec Type: average Base: destroy_clientid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_clientid_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_clientid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_destroy_clientid_avg_latency"},{"location":"ontap-metrics/#node_nfs_destroy_clientid_total","text":"Total number of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_clientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_clientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_destroy_clientid_total"},{"location":"ontap-metrics/#node_nfs_destroy_session_avg_latency","text":"Average latency of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_session.average_latency Unit: microsec Type: average Base: destroy_session.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_session_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_destroy_session_avg_latency"},{"location":"ontap-metrics/#node_nfs_destroy_session_total","text":"Total number of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node destroy_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node destroy_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_destroy_session_total"},{"location":"ontap-metrics/#node_nfs_exchange_id_avg_latency","text":"Average latency of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node exchange_id.average_latency Unit: microsec Type: average Base: exchange_id.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node exchange_id_avg_latency Unit: microsec Type: average,no-zero-values Base: exchange_id_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_exchange_id_avg_latency"},{"location":"ontap-metrics/#node_nfs_exchange_id_total","text":"Total number of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node exchange_id.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node exchange_id_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_exchange_id_total"},{"location":"ontap-metrics/#node_nfs_free_stateid_avg_latency","text":"Average latency of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node free_stateid.average_latency Unit: microsec Type: average Base: free_stateid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node free_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: free_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_free_stateid_avg_latency"},{"location":"ontap-metrics/#node_nfs_free_stateid_total","text":"Total number of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node free_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node free_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_free_stateid_total"},{"location":"ontap-metrics/#node_nfs_fsinfo_avg_latency","text":"Average latency of FSInfo procedure requests. The counter keeps track of the average response time of FSInfo requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsinfo.average_latency Unit: microsec Type: average Base: fsinfo.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: fsinfo_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_fsinfo_avg_latency"},{"location":"ontap-metrics/#node_nfs_fsinfo_total","text":"Total number FSInfo of procedure requests. It is the total number of FSInfo success and FSInfo error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_fsinfo_total"},{"location":"ontap-metrics/#node_nfs_fsstat_avg_latency","text":"Average latency of FSStat procedure requests. The counter keeps track of the average response time of FSStat requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsstat.average_latency Unit: microsec Type: average Base: fsstat.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsstat_avg_latency Unit: microsec Type: average,no-zero-values Base: fsstat_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_fsstat_avg_latency"},{"location":"ontap-metrics/#node_nfs_fsstat_total","text":"Total number FSStat of procedure requests. It is the total number of FSStat success and FSStat error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node fsstat.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node fsstat_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_fsstat_total"},{"location":"ontap-metrics/#node_nfs_get_dir_delegation_avg_latency","text":"Average latency of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node get_dir_delegation.average_latency Unit: microsec Type: average Base: get_dir_delegation.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node get_dir_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: get_dir_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_get_dir_delegation_avg_latency"},{"location":"ontap-metrics/#node_nfs_get_dir_delegation_total","text":"Total number of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node get_dir_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node get_dir_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_get_dir_delegation_total"},{"location":"ontap-metrics/#node_nfs_getattr_avg_latency","text":"Average latency of GETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getattr.average_latency Unit: microsec Type: average Base: getattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getattr_avg_latency Unit: microsec Type: average,no-zero-values Base: getattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_getattr_avg_latency"},{"location":"ontap-metrics/#node_nfs_getattr_total","text":"Total number of GETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_getattr_total"},{"location":"ontap-metrics/#node_nfs_getdeviceinfo_avg_latency","text":"Average latency of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdeviceinfo.average_latency Unit: microsec Type: average Base: getdeviceinfo.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdeviceinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: getdeviceinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_getdeviceinfo_avg_latency"},{"location":"ontap-metrics/#node_nfs_getdeviceinfo_total","text":"Total number of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdeviceinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdeviceinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_getdeviceinfo_total"},{"location":"ontap-metrics/#node_nfs_getdevicelist_avg_latency","text":"Average latency of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdevicelist.average_latency Unit: microsec Type: average Base: getdevicelist.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdevicelist_avg_latency Unit: microsec Type: average,no-zero-values Base: getdevicelist_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_getdevicelist_avg_latency"},{"location":"ontap-metrics/#node_nfs_getdevicelist_total","text":"Total number of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node getdevicelist.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node getdevicelist_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_getdevicelist_total"},{"location":"ontap-metrics/#node_nfs_getfh_avg_latency","text":"Average latency of GETFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getfh.average_latency Unit: microsec Type: average Base: getfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getfh_avg_latency Unit: microsec Type: average,no-zero-values Base: getfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_getfh_avg_latency"},{"location":"ontap-metrics/#node_nfs_getfh_total","text":"Total number of GETFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node getfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node getfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_getfh_total"},{"location":"ontap-metrics/#node_nfs_latency","text":"Average latency of NFSv4 requests. This counter keeps track of the average response time of NFSv4 requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node latency Unit: microsec Type: average,no-zero-values Base: total_ops conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_latency"},{"location":"ontap-metrics/#node_nfs_layoutcommit_avg_latency","text":"Average latency of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutcommit.average_latency Unit: microsec Type: average Base: layoutcommit.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutcommit_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutcommit_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutcommit_avg_latency"},{"location":"ontap-metrics/#node_nfs_layoutcommit_total","text":"Total number of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutcommit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutcommit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutcommit_total"},{"location":"ontap-metrics/#node_nfs_layoutget_avg_latency","text":"Average latency of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutget.average_latency Unit: microsec Type: average Base: layoutget.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutget_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutget_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutget_avg_latency"},{"location":"ontap-metrics/#node_nfs_layoutget_total","text":"Total number of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutget.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutget_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutget_total"},{"location":"ontap-metrics/#node_nfs_layoutreturn_avg_latency","text":"Average latency of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutreturn.average_latency Unit: microsec Type: average Base: layoutreturn.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutreturn_avg_latency"},{"location":"ontap-metrics/#node_nfs_layoutreturn_total","text":"Total number of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node layoutreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node layoutreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_layoutreturn_total"},{"location":"ontap-metrics/#node_nfs_link_avg_latency","text":"Average latency of LINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node link.average_latency Unit: microsec Type: average Base: link.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node link_avg_latency Unit: microsec Type: average,no-zero-values Base: link_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_link_avg_latency"},{"location":"ontap-metrics/#node_nfs_link_total","text":"Total number of LINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node link.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node link_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_link_total"},{"location":"ontap-metrics/#node_nfs_lock_avg_latency","text":"Average latency of LOCK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lock.average_latency Unit: microsec Type: average Base: lock.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lock_avg_latency Unit: microsec Type: average,no-zero-values Base: lock_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lock_avg_latency"},{"location":"ontap-metrics/#node_nfs_lock_total","text":"Total number of LOCK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lock.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lock_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lock_total"},{"location":"ontap-metrics/#node_nfs_lockt_avg_latency","text":"Average latency of LOCKT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lockt.average_latency Unit: microsec Type: average Base: lockt.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lockt_avg_latency Unit: microsec Type: average,no-zero-values Base: lockt_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lockt_avg_latency"},{"location":"ontap-metrics/#node_nfs_lockt_total","text":"Total number of LOCKT procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lockt.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lockt_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lockt_total"},{"location":"ontap-metrics/#node_nfs_locku_avg_latency","text":"Average latency of LOCKU procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node locku.average_latency Unit: microsec Type: average Base: locku.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node locku_avg_latency Unit: microsec Type: average,no-zero-values Base: locku_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_locku_avg_latency"},{"location":"ontap-metrics/#node_nfs_locku_total","text":"Total number of LOCKU procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node locku.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node locku_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_locku_total"},{"location":"ontap-metrics/#node_nfs_lookup_avg_latency","text":"Average latency of LOOKUP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookup.average_latency Unit: microsec Type: average Base: lookup.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookup_avg_latency Unit: microsec Type: average,no-zero-values Base: lookup_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lookup_avg_latency"},{"location":"ontap-metrics/#node_nfs_lookup_total","text":"Total number of LOOKUP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookup.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookup_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lookup_total"},{"location":"ontap-metrics/#node_nfs_lookupp_avg_latency","text":"Average latency of LOOKUPP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookupp.average_latency Unit: microsec Type: average Base: lookupp.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookupp_avg_latency Unit: microsec Type: average,no-zero-values Base: lookupp_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lookupp_avg_latency"},{"location":"ontap-metrics/#node_nfs_lookupp_total","text":"Total number of LOOKUPP procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node lookupp.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node lookupp_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_lookupp_total"},{"location":"ontap-metrics/#node_nfs_mkdir_avg_latency","text":"Average latency of MkDir procedure requests. The counter keeps track of the average response time of MkDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mkdir.average_latency Unit: microsec Type: average Base: mkdir.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mkdir_avg_latency Unit: microsec Type: average,no-zero-values Base: mkdir_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_mkdir_avg_latency"},{"location":"ontap-metrics/#node_nfs_mkdir_total","text":"Total number MkDir of procedure requests. It is the total number of MkDir success and MkDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mkdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mkdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_mkdir_total"},{"location":"ontap-metrics/#node_nfs_mknod_avg_latency","text":"Average latency of MkNod procedure requests. The counter keeps track of the average response time of MkNod requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mknod.average_latency Unit: microsec Type: average Base: mknod.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mknod_avg_latency Unit: microsec Type: average,no-zero-values Base: mknod_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_mknod_avg_latency"},{"location":"ontap-metrics/#node_nfs_mknod_total","text":"Total number MkNod of procedure requests. It is the total number of MkNod success and MkNod error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node mknod.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node mknod_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_mknod_total"},{"location":"ontap-metrics/#node_nfs_null_avg_latency","text":"Average Latency of NULL procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node null.average_latency Unit: microsec Type: average Base: null.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node null_avg_latency Unit: microsec Type: average,no-zero-values Base: null_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_null_avg_latency"},{"location":"ontap-metrics/#node_nfs_null_total","text":"Total number of NULL procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node null.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node null_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_null_total"},{"location":"ontap-metrics/#node_nfs_nverify_avg_latency","text":"Average latency of NVERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node nverify.average_latency Unit: microsec Type: average Base: nverify.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nverify_avg_latency Unit: microsec Type: average,no-zero-values Base: nverify_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_nverify_avg_latency"},{"location":"ontap-metrics/#node_nfs_nverify_total","text":"Total number of NVERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node nverify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nverify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_nverify_total"},{"location":"ontap-metrics/#node_nfs_open_avg_latency","text":"Average latency of OPEN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open.average_latency Unit: microsec Type: average Base: open.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_avg_latency Unit: microsec Type: average,no-zero-values Base: open_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_avg_latency"},{"location":"ontap-metrics/#node_nfs_open_confirm_avg_latency","text":"Average latency of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_confirm.average_latency Unit: microsec Type: average Base: open_confirm.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: open_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_confirm_avg_latency"},{"location":"ontap-metrics/#node_nfs_open_confirm_total","text":"Total number of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_confirm_total"},{"location":"ontap-metrics/#node_nfs_open_downgrade_avg_latency","text":"Average latency of OPEN_DOWNGRADE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_downgrade.average_latency Unit: microsec Type: average Base: open_downgrade.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_downgrade_avg_latency Unit: microsec Type: average,no-zero-values Base: open_downgrade_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_downgrade_avg_latency"},{"location":"ontap-metrics/#node_nfs_open_downgrade_total","text":"Total number of OPEN_DOWNGRADE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open_downgrade.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_downgrade_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_downgrade_total"},{"location":"ontap-metrics/#node_nfs_open_total","text":"Total number of OPEN procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node open.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node open_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_open_total"},{"location":"ontap-metrics/#node_nfs_openattr_avg_latency","text":"Average latency of OPENATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node openattr.average_latency Unit: microsec Type: average Base: openattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node openattr_avg_latency Unit: microsec Type: average,no-zero-values Base: openattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_openattr_avg_latency"},{"location":"ontap-metrics/#node_nfs_openattr_total","text":"Total number of OPENATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node openattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node openattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_openattr_total"},{"location":"ontap-metrics/#node_nfs_ops","text":"Number of NFS operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nfs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nfs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_nfs_ops"},{"location":"ontap-metrics/#node_nfs_pathconf_avg_latency","text":"Average latency of PathConf procedure requests. The counter keeps track of the average response time of PathConf requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node pathconf.average_latency Unit: microsec Type: average Base: pathconf.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node pathconf_avg_latency Unit: microsec Type: average,no-zero-values Base: pathconf_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_pathconf_avg_latency"},{"location":"ontap-metrics/#node_nfs_pathconf_total","text":"Total number PathConf of procedure requests. It is the total number of PathConf success and PathConf error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node pathconf.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node pathconf_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_pathconf_total"},{"location":"ontap-metrics/#node_nfs_putfh_avg_latency","text":"Average latency of PUTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putfh.average_latency Unit: microsec Type: average Base: putfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putfh_avg_latency"},{"location":"ontap-metrics/#node_nfs_putfh_total","text":"Total number of PUTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putfh_total"},{"location":"ontap-metrics/#node_nfs_putpubfh_avg_latency","text":"Average latency of PUTPUBFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putpubfh.average_latency Unit: microsec Type: average Base: putpubfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putpubfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putpubfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putpubfh_avg_latency"},{"location":"ontap-metrics/#node_nfs_putpubfh_total","text":"Total number of PUTPUBFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putpubfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putpubfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putpubfh_total"},{"location":"ontap-metrics/#node_nfs_putrootfh_avg_latency","text":"Average latency of PUTROOTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putrootfh.average_latency Unit: microsec Type: average Base: putrootfh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putrootfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putrootfh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putrootfh_avg_latency"},{"location":"ontap-metrics/#node_nfs_putrootfh_total","text":"Total number of PUTROOTFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node putrootfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node putrootfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_putrootfh_total"},{"location":"ontap-metrics/#node_nfs_read_avg_latency","text":"Average latency of READ procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node read.average_latency Unit: microsec Type: average Base: read.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node read_avg_latency Unit: microsec Type: average,no-zero-values Base: read_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_read_avg_latency"},{"location":"ontap-metrics/#node_nfs_read_ops","text":"Total observed NFSv3 read operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node nfsv3_read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_read_ops"},{"location":"ontap-metrics/#node_nfs_read_symlink_avg_latency","text":"Average latency of ReadSymLink procedure requests. The counter keeps track of the average response time of ReadSymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_symlink.average_latency Unit: microsec Type: average Base: read_symlink.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node read_symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: read_symlink_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_read_symlink_avg_latency"},{"location":"ontap-metrics/#node_nfs_read_symlink_total","text":"Total number of ReadSymLink procedure requests. It is the total number of read symlink success and read symlink error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node read_symlink.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node read_symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_read_symlink_total"},{"location":"ontap-metrics/#node_nfs_read_throughput","text":"NFSv4 read data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.read_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_read_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_read_throughput"},{"location":"ontap-metrics/#node_nfs_read_total","text":"Total number of READ procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node read.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node read_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_read_total"},{"location":"ontap-metrics/#node_nfs_readdir_avg_latency","text":"Average latency of READDIR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readdir.average_latency Unit: microsec Type: average Base: readdir.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readdir_avg_latency Unit: microsec Type: average,no-zero-values Base: readdir_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_readdir_avg_latency"},{"location":"ontap-metrics/#node_nfs_readdir_total","text":"Total number of READDIR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_readdir_total"},{"location":"ontap-metrics/#node_nfs_readdirplus_avg_latency","text":"Average latency of ReadDirPlus procedure requests. The counter keeps track of the average response time of ReadDirPlus requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node readdirplus.average_latency Unit: microsec Type: average Base: readdirplus.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node readdirplus_avg_latency Unit: microsec Type: average,no-zero-values Base: readdirplus_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_readdirplus_avg_latency"},{"location":"ontap-metrics/#node_nfs_readdirplus_total","text":"Total number ReadDirPlus of procedure requests. It is the total number of ReadDirPlus success and ReadDirPlus error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node readdirplus.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node readdirplus_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_readdirplus_total"},{"location":"ontap-metrics/#node_nfs_readlink_avg_latency","text":"Average latency of READLINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readlink.average_latency Unit: microsec Type: average Base: readlink.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readlink_avg_latency Unit: microsec Type: average,no-zero-values Base: readlink_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_readlink_avg_latency"},{"location":"ontap-metrics/#node_nfs_readlink_total","text":"Total number of READLINK procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node readlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node readlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_readlink_total"},{"location":"ontap-metrics/#node_nfs_reclaim_complete_avg_latency","text":"Average latency of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node reclaim_complete.average_latency Unit: microsec Type: average Base: reclaim_complete.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node reclaim_complete_avg_latency Unit: microsec Type: average,no-zero-values Base: reclaim_complete_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_reclaim_complete_avg_latency"},{"location":"ontap-metrics/#node_nfs_reclaim_complete_total","text":"Total number of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node reclaim_complete.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node reclaim_complete_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_reclaim_complete_total"},{"location":"ontap-metrics/#node_nfs_release_lock_owner_avg_latency","text":"Average Latency of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node release_lock_owner.average_latency Unit: microsec Type: average Base: release_lock_owner.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node release_lock_owner_avg_latency Unit: microsec Type: average,no-zero-values Base: release_lock_owner_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_release_lock_owner_avg_latency"},{"location":"ontap-metrics/#node_nfs_release_lock_owner_total","text":"Total number of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node release_lock_owner.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node release_lock_owner_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_release_lock_owner_total"},{"location":"ontap-metrics/#node_nfs_remove_avg_latency","text":"Average latency of REMOVE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node remove.average_latency Unit: microsec Type: average Base: remove.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node remove_avg_latency Unit: microsec Type: average,no-zero-values Base: remove_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_remove_avg_latency"},{"location":"ontap-metrics/#node_nfs_remove_total","text":"Total number of REMOVE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node remove.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node remove_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_remove_total"},{"location":"ontap-metrics/#node_nfs_rename_avg_latency","text":"Average latency of RENAME procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node rename.average_latency Unit: microsec Type: average Base: rename.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node rename_avg_latency Unit: microsec Type: average,no-zero-values Base: rename_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_rename_avg_latency"},{"location":"ontap-metrics/#node_nfs_rename_total","text":"Total number of RENAME procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node rename.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node rename_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_rename_total"},{"location":"ontap-metrics/#node_nfs_renew_avg_latency","text":"Average latency of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node renew.average_latency Unit: microsec Type: average Base: renew.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node renew_avg_latency Unit: microsec Type: average,no-zero-values Base: renew_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_renew_avg_latency"},{"location":"ontap-metrics/#node_nfs_renew_total","text":"Total number of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node renew.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node renew_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_renew_total"},{"location":"ontap-metrics/#node_nfs_restorefh_avg_latency","text":"Average latency of RESTOREFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node restorefh.average_latency Unit: microsec Type: average Base: restorefh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node restorefh_avg_latency Unit: microsec Type: average,no-zero-values Base: restorefh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_restorefh_avg_latency"},{"location":"ontap-metrics/#node_nfs_restorefh_total","text":"Total number of RESTOREFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node restorefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node restorefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_restorefh_total"},{"location":"ontap-metrics/#node_nfs_rmdir_avg_latency","text":"Average latency of RmDir procedure requests. The counter keeps track of the average response time of RmDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node rmdir.average_latency Unit: microsec Type: average Base: rmdir.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node rmdir_avg_latency Unit: microsec Type: average,no-zero-values Base: rmdir_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_rmdir_avg_latency"},{"location":"ontap-metrics/#node_nfs_rmdir_total","text":"Total number RmDir of procedure requests. It is the total number of RmDir success and RmDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node rmdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node rmdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_rmdir_total"},{"location":"ontap-metrics/#node_nfs_savefh_avg_latency","text":"Average latency of SAVEFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node savefh.average_latency Unit: microsec Type: average Base: savefh.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node savefh_avg_latency Unit: microsec Type: average,no-zero-values Base: savefh_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_savefh_avg_latency"},{"location":"ontap-metrics/#node_nfs_savefh_total","text":"Total number of SAVEFH procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node savefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node savefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_savefh_total"},{"location":"ontap-metrics/#node_nfs_secinfo_avg_latency","text":"Average latency of SECINFO procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node secinfo.average_latency Unit: microsec Type: average Base: secinfo.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node secinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_secinfo_avg_latency"},{"location":"ontap-metrics/#node_nfs_secinfo_no_name_avg_latency","text":"Average latency of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node secinfo_no_name.average_latency Unit: microsec Type: average Base: secinfo_no_name.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node secinfo_no_name_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_no_name_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_secinfo_no_name_avg_latency"},{"location":"ontap-metrics/#node_nfs_secinfo_no_name_total","text":"Total number of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node secinfo_no_name.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node secinfo_no_name_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_secinfo_no_name_total"},{"location":"ontap-metrics/#node_nfs_secinfo_total","text":"Total number of SECINFO procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node secinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node secinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_secinfo_total"},{"location":"ontap-metrics/#node_nfs_sequence_avg_latency","text":"Average latency of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node sequence.average_latency Unit: microsec Type: average Base: sequence.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node sequence_avg_latency Unit: microsec Type: average,no-zero-values Base: sequence_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_sequence_avg_latency"},{"location":"ontap-metrics/#node_nfs_sequence_total","text":"Total number of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node sequence.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node sequence_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_sequence_total"},{"location":"ontap-metrics/#node_nfs_set_ssv_avg_latency","text":"Average latency of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node set_ssv.average_latency Unit: microsec Type: average Base: set_ssv.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node set_ssv_avg_latency Unit: microsec Type: average,no-zero-values Base: set_ssv_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_set_ssv_avg_latency"},{"location":"ontap-metrics/#node_nfs_set_ssv_total","text":"Total number of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node set_ssv.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node set_ssv_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_set_ssv_total"},{"location":"ontap-metrics/#node_nfs_setattr_avg_latency","text":"Average latency of SETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setattr.average_latency Unit: microsec Type: average Base: setattr.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setattr_avg_latency Unit: microsec Type: average,no-zero-values Base: setattr_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setattr_avg_latency"},{"location":"ontap-metrics/#node_nfs_setattr_total","text":"Total number of SETATTR procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setattr_total"},{"location":"ontap-metrics/#node_nfs_setclientid_avg_latency","text":"Average latency of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid.average_latency Unit: microsec Type: average Base: setclientid.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setclientid_avg_latency"},{"location":"ontap-metrics/#node_nfs_setclientid_confirm_avg_latency","text":"Average latency of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid_confirm.average_latency Unit: microsec Type: average Base: setclientid_confirm.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setclientid_confirm_avg_latency"},{"location":"ontap-metrics/#node_nfs_setclientid_confirm_total","text":"Total number of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setclientid_confirm_total"},{"location":"ontap-metrics/#node_nfs_setclientid_total","text":"Total number of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node setclientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node setclientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_setclientid_total"},{"location":"ontap-metrics/#node_nfs_symlink_avg_latency","text":"Average latency of SymLink procedure requests. The counter keeps track of the average response time of SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node symlink.average_latency Unit: microsec Type: average Base: symlink.total conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: symlink_total conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_symlink_avg_latency"},{"location":"ontap-metrics/#node_nfs_symlink_total","text":"Total number SymLink of procedure requests. It is the total number of SymLink success and create SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node symlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_symlink_total"},{"location":"ontap-metrics/#node_nfs_test_stateid_avg_latency","text":"Average latency of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node test_stateid.average_latency Unit: microsec Type: average Base: test_stateid.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node test_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: test_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_test_stateid_avg_latency"},{"location":"ontap-metrics/#node_nfs_test_stateid_total","text":"Total number of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node test_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node test_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_test_stateid_total"},{"location":"ontap-metrics/#node_nfs_throughput","text":"NFSv4 data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_throughput"},{"location":"ontap-metrics/#node_nfs_total_ops","text":"Total number of NFSv4 requests per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node total_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_total_ops"},{"location":"ontap-metrics/#node_nfs_verify_avg_latency","text":"Average latency of VERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node verify.average_latency Unit: microsec Type: average Base: verify.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node verify_avg_latency Unit: microsec Type: average,no-zero-values Base: verify_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_verify_avg_latency"},{"location":"ontap-metrics/#node_nfs_verify_total","text":"Total number of VERIFY procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node verify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node verify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_verify_total"},{"location":"ontap-metrics/#node_nfs_want_delegation_avg_latency","text":"Average latency of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node want_delegation.average_latency Unit: microsec Type: average Base: want_delegation.total conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node want_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: want_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_want_delegation_avg_latency"},{"location":"ontap-metrics/#node_nfs_want_delegation_total","text":"Total number of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42:node want_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2_node.yaml ZAPI perf-object-get-instances nfsv4_1:node want_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1_node.yaml","title":"node_nfs_want_delegation_total"},{"location":"ontap-metrics/#node_nfs_write_avg_latency","text":"Average Latency of WRITE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node write.average_latency Unit: microsec Type: average Base: write.total conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node write_avg_latency Unit: microsec Type: average,no-zero-values Base: write_total conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_write_avg_latency"},{"location":"ontap-metrics/#node_nfs_write_ops","text":"Total observed NFSv3 write operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3:node write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3_node.yaml ZAPI perf-object-get-instances nfsv3:node nfsv3_write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3_node.yaml","title":"node_nfs_write_ops"},{"location":"ontap-metrics/#node_nfs_write_throughput","text":"NFSv4 write data transfers API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node total.write_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node nfs4_write_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_write_throughput"},{"location":"ontap-metrics/#node_nfs_write_total","text":"Total number of WRITE procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4:node write.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_node.yaml ZAPI perf-object-get-instances nfsv4:node write_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_node.yaml","title":"node_nfs_write_total"},{"location":"ontap-metrics/#node_nvmf_data_recv","text":"NVMe/FC kilobytes (KB) received per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_data_received Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_data_recv Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_nvmf_data_recv"},{"location":"ontap-metrics/#node_nvmf_data_sent","text":"NVMe/FC kilobytes (KB) sent per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_data_sent Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_data_sent Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_nvmf_data_sent"},{"location":"ontap-metrics/#node_nvmf_ops","text":"NVMe/FC operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node nvme_fc_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node nvmf_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_nvmf_ops"},{"location":"ontap-metrics/#node_ssd_data_read","text":"Number of SSD Disk kilobytes (KB) read per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node ssd_data_read Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node ssd_data_read Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_ssd_data_read"},{"location":"ontap-metrics/#node_ssd_data_written","text":"Number of SSD Disk kilobytes (KB) written per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node ssd_data_written Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node ssd_data_written Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_ssd_data_written"},{"location":"ontap-metrics/#node_total_data","text":"Total throughput in bytes API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_total_data"},{"location":"ontap-metrics/#node_total_latency","text":"Average latency for all operations in the system in microseconds API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_total_latency"},{"location":"ontap-metrics/#node_total_ops","text":"Total number of operations per second API Endpoint Metric Template REST api/cluster/counter/tables/system:node total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/system_node.yaml ZAPI perf-object-get-instances system:node total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/system_node.yaml","title":"node_total_ops"},{"location":"ontap-metrics/#node_uptime","text":"The total time, in seconds, that the node has been up. API Endpoint Metric Template REST api/cluster/nodes uptime conf/rest/9.12.0/node.yaml ZAPI system-node-get-iter node-details-info.node-uptime conf/zapi/cdot/9.8.0/node.yaml","title":"node_uptime"},{"location":"ontap-metrics/#node_vol_cifs_other_latency","text":"Average time for the WAFL filesystem to process other CIFS operations to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.other_latency Unit: microsec Type: average Base: cifs.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_other_latency Unit: microsec Type: average Base: cifs_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_other_latency"},{"location":"ontap-metrics/#node_vol_cifs_other_ops","text":"Number of other CIFS operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_other_ops"},{"location":"ontap-metrics/#node_vol_cifs_read_data","text":"Bytes read per second via CIFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_read_data"},{"location":"ontap-metrics/#node_vol_cifs_read_latency","text":"Average time for the WAFL filesystem to process CIFS read requests to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_latency Unit: microsec Type: average Base: cifs.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_read_latency"},{"location":"ontap-metrics/#node_vol_cifs_read_ops","text":"Number of CIFS read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_read_ops"},{"location":"ontap-metrics/#node_vol_cifs_write_data","text":"Bytes written per second via CIFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_write_data"},{"location":"ontap-metrics/#node_vol_cifs_write_latency","text":"Average time for the WAFL filesystem to process CIFS write requests to the volume; not including CIFS protocol request processing or network communication time which will also be included in client observed CIFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_latency Unit: microsec Type: average Base: cifs.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_write_latency"},{"location":"ontap-metrics/#node_vol_cifs_write_ops","text":"Number of CIFS write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node cifs.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_cifs_write_ops"},{"location":"ontap-metrics/#node_vol_fcp_other_latency","text":"Average time for the WAFL filesystem to process other FCP protocol operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.other_latency Unit: microsec Type: average Base: fcp.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_other_latency Unit: microsec Type: average Base: fcp_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_other_latency"},{"location":"ontap-metrics/#node_vol_fcp_other_ops","text":"Number of other block protocol operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_other_ops"},{"location":"ontap-metrics/#node_vol_fcp_read_data","text":"Bytes read per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_read_data"},{"location":"ontap-metrics/#node_vol_fcp_read_latency","text":"Average time for the WAFL filesystem to process FCP protocol read operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_latency Unit: microsec Type: average Base: fcp.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_latency Unit: microsec Type: average Base: fcp_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_read_latency"},{"location":"ontap-metrics/#node_vol_fcp_read_ops","text":"Number of block protocol read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_read_ops"},{"location":"ontap-metrics/#node_vol_fcp_write_data","text":"Bytes written per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_write_data"},{"location":"ontap-metrics/#node_vol_fcp_write_latency","text":"Average time for the WAFL filesystem to process FCP protocol write operations to the volume; not including FCP protocol request processing or network communication time which will also be included in client observed FCP protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_latency Unit: microsec Type: average Base: fcp.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_latency Unit: microsec Type: average Base: fcp_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_write_latency"},{"location":"ontap-metrics/#node_vol_fcp_write_ops","text":"Number of block protocol write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node fcp.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node fcp_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_fcp_write_ops"},{"location":"ontap-metrics/#node_vol_iscsi_other_latency","text":"Average time for the WAFL filesystem to process other iSCSI protocol operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.other_latency Unit: microsec Type: average Base: iscsi.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_other_latency Unit: microsec Type: average Base: iscsi_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_other_latency"},{"location":"ontap-metrics/#node_vol_iscsi_other_ops","text":"Number of other block protocol operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_other_ops"},{"location":"ontap-metrics/#node_vol_iscsi_read_data","text":"Bytes read per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_read_data"},{"location":"ontap-metrics/#node_vol_iscsi_read_latency","text":"Average time for the WAFL filesystem to process iSCSI protocol read operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI protocol request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_latency Unit: microsec Type: average Base: iscsi.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_latency Unit: microsec Type: average Base: iscsi_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_read_latency"},{"location":"ontap-metrics/#node_vol_iscsi_read_ops","text":"Number of block protocol read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_read_ops"},{"location":"ontap-metrics/#node_vol_iscsi_write_data","text":"Bytes written per second via block protocol API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_write_data"},{"location":"ontap-metrics/#node_vol_iscsi_write_latency","text":"Average time for the WAFL filesystem to process iSCSI protocol write operations to the volume; not including iSCSI protocol request processing or network communication time which will also be included in client observed iSCSI request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_latency Unit: microsec Type: average Base: iscsi.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_latency Unit: microsec Type: average Base: iscsi_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_write_latency"},{"location":"ontap-metrics/#node_vol_iscsi_write_ops","text":"Number of block protocol write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node iscsi.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node iscsi_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_iscsi_write_ops"},{"location":"ontap-metrics/#node_vol_nfs_other_latency","text":"Average time for the WAFL filesystem to process other NFS operations to the volume; not including NFS protocol request processing or network communication time which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.other_latency Unit: microsec Type: average Base: nfs.other_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_other_latency Unit: microsec Type: average Base: nfs_other_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_other_latency"},{"location":"ontap-metrics/#node_vol_nfs_other_ops","text":"Number of other NFS operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_other_ops"},{"location":"ontap-metrics/#node_vol_nfs_read_data","text":"Bytes read per second via NFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_read_data"},{"location":"ontap-metrics/#node_vol_nfs_read_latency","text":"Average time for the WAFL filesystem to process NFS protocol read requests to the volume; not including NFS protocol request processing or network communication time which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_latency Unit: microsec Type: average Base: nfs.read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_latency Unit: microsec Type: average Base: nfs_read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_read_latency"},{"location":"ontap-metrics/#node_vol_nfs_read_ops","text":"Number of NFS read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_read_ops"},{"location":"ontap-metrics/#node_vol_nfs_write_data","text":"Bytes written per second via NFS API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_write_data"},{"location":"ontap-metrics/#node_vol_nfs_write_latency","text":"Average time for the WAFL filesystem to process NFS protocol write requests to the volume; not including NFS protocol request processing or network communication time, which will also be included in client observed NFS request latency API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_latency Unit: microsec Type: average Base: nfs.write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_latency Unit: microsec Type: average Base: nfs_write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_write_latency"},{"location":"ontap-metrics/#node_vol_nfs_write_ops","text":"Number of NFS write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:node nfs.write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node nfs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_nfs_write_ops"},{"location":"ontap-metrics/#node_vol_read_latency","text":"Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:node read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_read_latency"},{"location":"ontap-metrics/#node_vol_write_latency","text":"Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:node write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume_node.yaml ZAPI perf-object-get-instances volume:node write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume_node.yaml","title":"node_vol_write_latency"},{"location":"ontap-metrics/#nvme_lif_avg_latency","text":"Average latency for NVMF operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_avg_latency"},{"location":"ontap-metrics/#nvme_lif_avg_other_latency","text":"Average latency for operations other than read, write, compare or compare-and-write. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_other_latency Unit: microsec Type: average Base: other_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_avg_other_latency"},{"location":"ontap-metrics/#nvme_lif_avg_read_latency","text":"Average latency for read operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_avg_read_latency"},{"location":"ontap-metrics/#nvme_lif_avg_write_latency","text":"Average latency for write operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif average_write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif avg_write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_avg_write_latency"},{"location":"ontap-metrics/#nvme_lif_other_ops","text":"Number of operations that are not read, write, compare or compare-and-write. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_other_ops"},{"location":"ontap-metrics/#nvme_lif_read_data","text":"Amount of data read from the storage system API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_read_data"},{"location":"ontap-metrics/#nvme_lif_read_ops","text":"Number of read operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_read_ops"},{"location":"ontap-metrics/#nvme_lif_total_ops","text":"Total number of operations. API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_total_ops"},{"location":"ontap-metrics/#nvme_lif_write_data","text":"Amount of data written to the storage system API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_write_data"},{"location":"ontap-metrics/#nvme_lif_write_ops","text":"Number of write operations API Endpoint Metric Template REST api/cluster/counter/tables/nvmf_lif write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nvmf_lif.yaml ZAPI perf-object-get-instances nvmf_fc_lif write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.10.1/nvmf_lif.yaml","title":"nvme_lif_write_ops"},{"location":"ontap-metrics/#ontaps3_logical_used_size","text":"Specifies the bucket logical used size up to this point. API Endpoint Metric Template REST api/protocols/s3/buckets logical_used_size conf/rest/9.7.0/ontap_s3.yaml","title":"ontaps3_logical_used_size"},{"location":"ontap-metrics/#ontaps3_size","text":"Specifies the bucket size in bytes; ranges from 80MB to 64TB. API Endpoint Metric Template REST api/protocols/s3/buckets size conf/rest/9.7.0/ontap_s3.yaml","title":"ontaps3_size"},{"location":"ontap-metrics/#ontaps3_svm_abort_multipart_upload_failed","text":"Number of failed Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_abort_multipart_upload_failed"},{"location":"ontap-metrics/#ontaps3_svm_abort_multipart_upload_failed_client_close","text":"Number of times Abort Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_abort_multipart_upload_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_abort_multipart_upload_latency","text":"Average latency for Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_latency Unit: microsec Type: average Base: abort_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_abort_multipart_upload_latency"},{"location":"ontap-metrics/#ontaps3_svm_abort_multipart_upload_rate","text":"Number of Abort Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_abort_multipart_upload_rate"},{"location":"ontap-metrics/#ontaps3_svm_abort_multipart_upload_total","text":"Number of Abort Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server abort_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_abort_multipart_upload_total"},{"location":"ontap-metrics/#ontaps3_svm_allow_access","text":"Number of times access was allowed. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server allow_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_allow_access"},{"location":"ontap-metrics/#ontaps3_svm_anonymous_access","text":"Number of times anonymous access was allowed. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server anonymous_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_anonymous_access"},{"location":"ontap-metrics/#ontaps3_svm_anonymous_deny_access","text":"Number of times anonymous access was denied. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server anonymous_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_anonymous_deny_access"},{"location":"ontap-metrics/#ontaps3_svm_authentication_failures","text":"Number of authentication failures. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server authentication_failures Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_authentication_failures"},{"location":"ontap-metrics/#ontaps3_svm_chunked_upload_reqs","text":"Total number of object store server chunked object upload requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server chunked_upload_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_chunked_upload_reqs"},{"location":"ontap-metrics/#ontaps3_svm_complete_multipart_upload_failed","text":"Number of failed Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_complete_multipart_upload_failed"},{"location":"ontap-metrics/#ontaps3_svm_complete_multipart_upload_failed_client_close","text":"Number of times Complete Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_complete_multipart_upload_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_complete_multipart_upload_latency","text":"Average latency for Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_latency Unit: microsec Type: average Base: complete_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_complete_multipart_upload_latency"},{"location":"ontap-metrics/#ontaps3_svm_complete_multipart_upload_rate","text":"Number of Complete Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_complete_multipart_upload_rate"},{"location":"ontap-metrics/#ontaps3_svm_complete_multipart_upload_total","text":"Number of Complete Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server complete_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_complete_multipart_upload_total"},{"location":"ontap-metrics/#ontaps3_svm_connected_connections","text":"Number of object store server connections currently established API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server connected_connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_connected_connections"},{"location":"ontap-metrics/#ontaps3_svm_connections","text":"Total number of object store server connections. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server connections Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_connections"},{"location":"ontap-metrics/#ontaps3_svm_create_bucket_failed","text":"Number of failed Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_create_bucket_failed"},{"location":"ontap-metrics/#ontaps3_svm_create_bucket_failed_client_close","text":"Number of times Create Bucket operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_create_bucket_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_create_bucket_latency","text":"Average latency for Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_latency Unit: microsec Type: average,no-zero-values Base: create_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_create_bucket_latency"},{"location":"ontap-metrics/#ontaps3_svm_create_bucket_rate","text":"Number of Create Bucket operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_create_bucket_rate"},{"location":"ontap-metrics/#ontaps3_svm_create_bucket_total","text":"Number of Create Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server create_bucket_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_create_bucket_total"},{"location":"ontap-metrics/#ontaps3_svm_default_deny_access","text":"Number of times access was denied by default and not through any policy statement. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server default_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_default_deny_access"},{"location":"ontap-metrics/#ontaps3_svm_delete_bucket_failed","text":"Number of failed Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_bucket_failed"},{"location":"ontap-metrics/#ontaps3_svm_delete_bucket_failed_client_close","text":"Number of times Delete Bucket operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_bucket_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_delete_bucket_latency","text":"Average latency for Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_latency Unit: microsec Type: average,no-zero-values Base: delete_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_bucket_latency"},{"location":"ontap-metrics/#ontaps3_svm_delete_bucket_rate","text":"Number of Delete Bucket operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_bucket_rate"},{"location":"ontap-metrics/#ontaps3_svm_delete_bucket_total","text":"Number of Delete Bucket operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_bucket_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_bucket_total"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_failed","text":"Number of failed DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_failed"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_failed_client_close","text":"Number of times DELETE object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_latency","text":"Average latency for DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_latency Unit: microsec Type: average Base: delete_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_latency"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_rate","text":"Number of DELETE object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_rate"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_tagging_failed","text":"Number of failed DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_tagging_failed"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_tagging_failed_client_close","text":"Number of times DELETE object tagging operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_tagging_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_tagging_latency","text":"Average latency for DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_latency Unit: microsec Type: average,no-zero-values Base: delete_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_tagging_latency"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_tagging_rate","text":"Number of DELETE object tagging operations per sec. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_tagging_rate"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_tagging_total","text":"Number of DELETE object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_tagging_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_tagging_total"},{"location":"ontap-metrics/#ontaps3_svm_delete_object_total","text":"Number of DELETE object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server delete_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_delete_object_total"},{"location":"ontap-metrics/#ontaps3_svm_explicit_deny_access","text":"Number of times access was denied explicitly by a policy statement. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server explicit_deny_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_explicit_deny_access"},{"location":"ontap-metrics/#ontaps3_svm_get_bucket_acl_failed","text":"Number of failed GET Bucket ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_acl_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_bucket_acl_failed"},{"location":"ontap-metrics/#ontaps3_svm_get_bucket_acl_total","text":"Number of GET Bucket ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_acl_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_bucket_acl_total"},{"location":"ontap-metrics/#ontaps3_svm_get_bucket_versioning_failed","text":"Number of failed Get Bucket Versioning operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_versioning_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_bucket_versioning_failed"},{"location":"ontap-metrics/#ontaps3_svm_get_bucket_versioning_total","text":"Number of Get Bucket Versioning operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_bucket_versioning_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_bucket_versioning_total"},{"location":"ontap-metrics/#ontaps3_svm_get_data","text":"Rate of GET object data transfers per second API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_data"},{"location":"ontap-metrics/#ontaps3_svm_get_object_acl_failed","text":"Number of failed GET Object ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_acl_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_acl_failed"},{"location":"ontap-metrics/#ontaps3_svm_get_object_acl_total","text":"Number of GET Object ACL operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_acl_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_acl_total"},{"location":"ontap-metrics/#ontaps3_svm_get_object_failed","text":"Number of failed GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_failed"},{"location":"ontap-metrics/#ontaps3_svm_get_object_failed_client_close","text":"Number of times GET object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_get_object_lastbyte_latency","text":"Average last-byte latency for GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_lastbyte_latency Unit: microsec Type: average Base: get_object_lastbyte_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_lastbyte_latency"},{"location":"ontap-metrics/#ontaps3_svm_get_object_latency","text":"Average first-byte latency for GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_latency Unit: microsec Type: average Base: get_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_latency"},{"location":"ontap-metrics/#ontaps3_svm_get_object_rate","text":"Number of GET object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_rate"},{"location":"ontap-metrics/#ontaps3_svm_get_object_tagging_failed","text":"Number of failed GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_tagging_failed"},{"location":"ontap-metrics/#ontaps3_svm_get_object_tagging_failed_client_close","text":"Number of times GET object tagging operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_tagging_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_get_object_tagging_latency","text":"Average latency for GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_latency Unit: microsec Type: average Base: get_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_tagging_latency"},{"location":"ontap-metrics/#ontaps3_svm_get_object_tagging_rate","text":"Number of GET object tagging operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_tagging_rate"},{"location":"ontap-metrics/#ontaps3_svm_get_object_tagging_total","text":"Number of GET object tagging operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_tagging_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_tagging_total"},{"location":"ontap-metrics/#ontaps3_svm_get_object_total","text":"Number of GET object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server get_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_get_object_total"},{"location":"ontap-metrics/#ontaps3_svm_group_policy_evaluated","text":"Number of times group policies were evaluated. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server group_policy_evaluated Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_group_policy_evaluated"},{"location":"ontap-metrics/#ontaps3_svm_head_bucket_failed","text":"Number of failed HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_bucket_failed"},{"location":"ontap-metrics/#ontaps3_svm_head_bucket_failed_client_close","text":"Number of times HEAD bucket operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_bucket_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_head_bucket_latency","text":"Average latency for HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_latency Unit: microsec Type: average Base: head_bucket_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_bucket_latency"},{"location":"ontap-metrics/#ontaps3_svm_head_bucket_rate","text":"Number of HEAD bucket operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_bucket_rate"},{"location":"ontap-metrics/#ontaps3_svm_head_bucket_total","text":"Number of HEAD bucket operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_bucket_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_bucket_total"},{"location":"ontap-metrics/#ontaps3_svm_head_object_failed","text":"Number of failed HEAD Object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_object_failed"},{"location":"ontap-metrics/#ontaps3_svm_head_object_failed_client_close","text":"Number of times HEAD object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_object_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_head_object_latency","text":"Average latency for HEAD object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_latency Unit: microsec Type: average Base: head_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_object_latency"},{"location":"ontap-metrics/#ontaps3_svm_head_object_rate","text":"Number of HEAD Object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_object_rate"},{"location":"ontap-metrics/#ontaps3_svm_head_object_total","text":"Number of HEAD Object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server head_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_head_object_total"},{"location":"ontap-metrics/#ontaps3_svm_initiate_multipart_upload_failed","text":"Number of failed Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_initiate_multipart_upload_failed"},{"location":"ontap-metrics/#ontaps3_svm_initiate_multipart_upload_failed_client_close","text":"Number of times Initiate Multipart Upload operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_initiate_multipart_upload_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_initiate_multipart_upload_latency","text":"Average latency for Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_latency Unit: microsec Type: average Base: initiate_multipart_upload_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_initiate_multipart_upload_latency"},{"location":"ontap-metrics/#ontaps3_svm_initiate_multipart_upload_rate","text":"Number of Initiate Multipart Upload operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_initiate_multipart_upload_rate"},{"location":"ontap-metrics/#ontaps3_svm_initiate_multipart_upload_total","text":"Number of Initiate Multipart Upload operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server initiate_multipart_upload_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_initiate_multipart_upload_total"},{"location":"ontap-metrics/#ontaps3_svm_input_flow_control_entry","text":"Number of times input flow control was entered. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server input_flow_control_entry Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_input_flow_control_entry"},{"location":"ontap-metrics/#ontaps3_svm_input_flow_control_exit","text":"Number of times input flow control was exited. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server input_flow_control_exit Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_input_flow_control_exit"},{"location":"ontap-metrics/#ontaps3_svm_list_buckets_failed","text":"Number of failed LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_buckets_failed"},{"location":"ontap-metrics/#ontaps3_svm_list_buckets_failed_client_close","text":"Number of times LIST Bucket operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_buckets_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_list_buckets_latency","text":"Average latency for LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_latency Unit: microsec Type: average Base: head_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_buckets_latency"},{"location":"ontap-metrics/#ontaps3_svm_list_buckets_rate","text":"Number of LIST Buckets operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_buckets_rate"},{"location":"ontap-metrics/#ontaps3_svm_list_buckets_total","text":"Number of LIST Buckets operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_buckets_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_buckets_total"},{"location":"ontap-metrics/#ontaps3_svm_list_object_versions_failed","text":"Number of failed LIST object versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_object_versions_failed"},{"location":"ontap-metrics/#ontaps3_svm_list_object_versions_failed_client_close","text":"Number of times LIST object versions operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_object_versions_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_list_object_versions_latency","text":"Average latency for LIST Object versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_latency Unit: microsec Type: average,no-zero-values Base: list_object_versions_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_object_versions_latency"},{"location":"ontap-metrics/#ontaps3_svm_list_object_versions_rate","text":"Number of LIST Object Versions operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_object_versions_rate"},{"location":"ontap-metrics/#ontaps3_svm_list_object_versions_total","text":"Number of LIST Object Versions operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_object_versions_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_object_versions_total"},{"location":"ontap-metrics/#ontaps3_svm_list_objects_failed","text":"Number of failed LIST objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_objects_failed"},{"location":"ontap-metrics/#ontaps3_svm_list_objects_failed_client_close","text":"Number of times LIST objects operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_objects_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_list_objects_latency","text":"Average latency for LIST Objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_latency Unit: microsec Type: average Base: list_objects_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_objects_latency"},{"location":"ontap-metrics/#ontaps3_svm_list_objects_rate","text":"Number of LIST Objects operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_objects_rate"},{"location":"ontap-metrics/#ontaps3_svm_list_objects_total","text":"Number of LIST Objects operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_objects_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_objects_total"},{"location":"ontap-metrics/#ontaps3_svm_list_uploads_failed","text":"Number of failed LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_uploads_failed"},{"location":"ontap-metrics/#ontaps3_svm_list_uploads_failed_client_close","text":"Number of times LIST Uploads operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_uploads_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_list_uploads_latency","text":"Average latency for LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_latency Unit: microsec Type: average Base: list_uploads_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_uploads_latency"},{"location":"ontap-metrics/#ontaps3_svm_list_uploads_rate","text":"Number of LIST Uploads operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_uploads_rate"},{"location":"ontap-metrics/#ontaps3_svm_list_uploads_total","text":"Number of LIST Uploads operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server list_uploads_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_list_uploads_total"},{"location":"ontap-metrics/#ontaps3_svm_max_cmds_per_connection","text":"Maximum commands pipelined at any instance on a connection. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_cmds_per_connection Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_max_cmds_per_connection"},{"location":"ontap-metrics/#ontaps3_svm_max_connected_connections","text":"Maximum number of object store server connections established at one time API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_connected_connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_max_connected_connections"},{"location":"ontap-metrics/#ontaps3_svm_max_requests_outstanding","text":"Maximum number of object store server requests in process at one time API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server max_requests_outstanding Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_max_requests_outstanding"},{"location":"ontap-metrics/#ontaps3_svm_multi_delete_reqs","text":"Total number of object store server multiple object delete requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server multi_delete_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_multi_delete_reqs"},{"location":"ontap-metrics/#ontaps3_svm_output_flow_control_entry","text":"Number of output flow control was entered. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server output_flow_control_entry Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_output_flow_control_entry"},{"location":"ontap-metrics/#ontaps3_svm_output_flow_control_exit","text":"Number of times output flow control was exited. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server output_flow_control_exit Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_output_flow_control_exit"},{"location":"ontap-metrics/#ontaps3_svm_presigned_url_reqs","text":"Total number of presigned object store server URL requests. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server presigned_url_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_presigned_url_reqs"},{"location":"ontap-metrics/#ontaps3_svm_put_bucket_versioning_failed","text":"Number of failed Put Bucket Versioning operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_bucket_versioning_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_bucket_versioning_failed"},{"location":"ontap-metrics/#ontaps3_svm_put_bucket_versioning_total","text":"Number of Put Bucket Versioning operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_bucket_versioning_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_bucket_versioning_total"},{"location":"ontap-metrics/#ontaps3_svm_put_data","text":"Rate of PUT object data transfers per second API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_data"},{"location":"ontap-metrics/#ontaps3_svm_put_object_failed","text":"Number of failed PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_failed"},{"location":"ontap-metrics/#ontaps3_svm_put_object_failed_client_close","text":"Number of times PUT object operation failed due to the case where client closed the connection while the operation was still pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_put_object_latency","text":"Average latency for PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_latency Unit: microsec Type: average Base: put_object_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_latency"},{"location":"ontap-metrics/#ontaps3_svm_put_object_rate","text":"Number of PUT object operations per sec API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_rate"},{"location":"ontap-metrics/#ontaps3_svm_put_object_tagging_failed","text":"Number of failed PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_failed Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_tagging_failed"},{"location":"ontap-metrics/#ontaps3_svm_put_object_tagging_failed_client_close","text":"Number of times PUT object tagging operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_failed_client_close Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_tagging_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_put_object_tagging_latency","text":"Average latency for PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_latency Unit: microsec Type: average,no-zero-values Base: put_object_tagging_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_tagging_latency"},{"location":"ontap-metrics/#ontaps3_svm_put_object_tagging_rate","text":"Number of PUT object tagging operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_rate Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_tagging_rate"},{"location":"ontap-metrics/#ontaps3_svm_put_object_tagging_total","text":"Number of PUT object tagging operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_tagging_total Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_tagging_total"},{"location":"ontap-metrics/#ontaps3_svm_put_object_total","text":"Number of PUT object operations API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server put_object_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_put_object_total"},{"location":"ontap-metrics/#ontaps3_svm_request_parse_errors","text":"Number of request parser errors due to malformed requests. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server request_parse_errors Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_request_parse_errors"},{"location":"ontap-metrics/#ontaps3_svm_requests","text":"Total number of object store server requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server requests Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_requests"},{"location":"ontap-metrics/#ontaps3_svm_requests_outstanding","text":"Number of object store server requests in process API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server requests_outstanding Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_requests_outstanding"},{"location":"ontap-metrics/#ontaps3_svm_root_user_access","text":"Number of times access was done by root user. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server root_user_access Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_root_user_access"},{"location":"ontap-metrics/#ontaps3_svm_server_connection_close","text":"Number of connection closes triggered by server due to fatal errors. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server server_connection_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_server_connection_close"},{"location":"ontap-metrics/#ontaps3_svm_signature_v2_reqs","text":"Total number of object store server signature V2 requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server signature_v2_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_signature_v2_reqs"},{"location":"ontap-metrics/#ontaps3_svm_signature_v4_reqs","text":"Total number of object store server signature V4 requests API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server signature_v4_reqs Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_signature_v4_reqs"},{"location":"ontap-metrics/#ontaps3_svm_tagging","text":"Number of requests with tagging specified. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server tagging Unit: none Type: delta,no-zero-values Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_tagging"},{"location":"ontap-metrics/#ontaps3_svm_upload_part_failed","text":"Number of failed Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_failed Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_upload_part_failed"},{"location":"ontap-metrics/#ontaps3_svm_upload_part_failed_client_close","text":"Number of times Upload Part operation failed because client terminated connection for operation pending on server. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_failed_client_close Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_upload_part_failed_client_close"},{"location":"ontap-metrics/#ontaps3_svm_upload_part_latency","text":"Average latency for Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_latency Unit: microsec Type: average Base: upload_part_latency_base conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_upload_part_latency"},{"location":"ontap-metrics/#ontaps3_svm_upload_part_rate","text":"Number of Upload Part operations per second. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_upload_part_rate"},{"location":"ontap-metrics/#ontaps3_svm_upload_part_total","text":"Number of Upload Part operations. API Endpoint Metric Template ZAPI perf-object-get-instances object_store_server upload_part_total Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/ontap_s3_svm.yaml","title":"ontaps3_svm_upload_part_total"},{"location":"ontap-metrics/#path_read_data","text":"The average read throughput in kilobytes per second read from the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path read_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_read_data"},{"location":"ontap-metrics/#path_read_iops","text":"The number of I/O read operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path read_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_read_iops"},{"location":"ontap-metrics/#path_read_latency","text":"The average latency of I/O read operations sent from this controller to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path read_latency Unit: microsec Type: average Base: read_iops conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path read_latency Unit: microsec Type: average Base: read_iops conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_read_latency"},{"location":"ontap-metrics/#path_total_data","text":"The average throughput in kilobytes per second read and written from/to the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path total_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path total_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_total_data"},{"location":"ontap-metrics/#path_total_iops","text":"The number of total read/write I/O operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path total_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path total_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_total_iops"},{"location":"ontap-metrics/#path_write_data","text":"The average write throughput in kilobytes per second written to the indicated target port by the controller. API Endpoint Metric Template REST api/cluster/counter/tables/path write_data Unit: kb_per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_data Unit: kb_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_write_data"},{"location":"ontap-metrics/#path_write_iops","text":"The number of I/O write operations sent from the initiator port to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path write_iops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_iops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_write_iops"},{"location":"ontap-metrics/#path_write_latency","text":"The average latency of I/O write operations sent from this controller to the indicated target port. API Endpoint Metric Template REST api/cluster/counter/tables/path write_latency Unit: microsec Type: average Base: write_iops conf/restperf/9.12.0/path.yaml ZAPI perf-object-get-instances path write_latency Unit: microsec Type: average Base: write_iops conf/zapiperf/cdot/9.8.0/path.yaml","title":"path_write_latency"},{"location":"ontap-metrics/#qos_concurrency","text":"This is the average number of concurrent requests for the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos concurrency Unit: none Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload concurrency Unit: none Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_concurrency"},{"location":"ontap-metrics/#qos_detail_resource_latency","text":"average latency for workload on Data ONTAP subsystems API Endpoint Metric Template REST api/cluster/counter/tables/qos_detail Harvest generated Unit: microseconds Type: Base: conf/restperf/9.12.0/workload_detail.yaml ZAPI perf-object-get-instances workload_detail Harvest generated Unit: microseconds Type: Base: conf/zapiperf/9.12.0/workload_detail.yaml","title":"qos_detail_resource_latency"},{"location":"ontap-metrics/#qos_detail_volume_resource_latency","text":"average latency for volume on Data ONTAP subsystems API Endpoint Metric Template REST api/cluster/counter/tables/qos_detail_volume Harvest generated Unit: microseconds Type: Base: conf/restperf/9.12.0/workload_detail_volume.yaml ZAPI perf-object-get-instances workload_detail_volume Harvest generated Unit: microseconds Type: Base: conf/zapiperf/9.12.0/workload_detail_volume.yaml","title":"qos_detail_volume_resource_latency"},{"location":"ontap-metrics/#qos_latency","text":"This is the average response time for requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos latency Unit: microsec Type: average Base: ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_latency"},{"location":"ontap-metrics/#qos_ops","text":"Workload operations executed per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_ops"},{"location":"ontap-metrics/#qos_read_data","text":"This is the amount of data read per second from the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_read_data"},{"location":"ontap-metrics/#qos_read_io_type","text":"This is the percentage of read requests served from various components (such as buffer cache, ext_cache, disk, etc.). API Endpoint Metric Template REST api/cluster/counter/tables/qos read_io_type_percent Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_read_io_type"},{"location":"ontap-metrics/#qos_read_latency","text":"This is the average response time for read requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_latency Unit: microsec Type: average,no-zero-values Base: read_ops conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_read_latency"},{"location":"ontap-metrics/#qos_read_ops","text":"This is the rate of this workload's read operations that completed during the measurement interval. API Endpoint Metric Template REST api/cluster/counter/tables/qos read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_read_ops"},{"location":"ontap-metrics/#qos_sequential_reads","text":"This is the percentage of reads, performed on behalf of the workload, that were sequential. API Endpoint Metric Template REST api/cluster/counter/tables/qos sequential_reads_percent Unit: percent Type: percent Base: sequential_reads_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload sequential_reads Unit: percent Type: percent,no-zero-values Base: sequential_reads_base conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_sequential_reads"},{"location":"ontap-metrics/#qos_sequential_writes","text":"This is the percentage of writes, performed on behalf of the workload, that were sequential. This counter is only available on platforms with more than 4GB of NVRAM. API Endpoint Metric Template REST api/cluster/counter/tables/qos sequential_writes_percent Unit: percent Type: percent Base: sequential_writes_base conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload sequential_writes Unit: percent Type: percent,no-zero-values Base: sequential_writes_base conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_sequential_writes"},{"location":"ontap-metrics/#qos_total_data","text":"This is the total amount of data read/written per second from/to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload total_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_total_data"},{"location":"ontap-metrics/#qos_volume_latency","text":"This is the average response time for requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume latency Unit: microsec Type: average Base: ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume latency Unit: microsec Type: average,no-zero-values Base: ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_latency"},{"location":"ontap-metrics/#qos_volume_ops","text":"This field is the workload's rate of operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_ops"},{"location":"ontap-metrics/#qos_volume_read_data","text":"This is the amount of data read per second from the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_read_data"},{"location":"ontap-metrics/#qos_volume_read_io_type","text":"This is the percentage of read requests served from various components (such as buffer cache, ext_cache, disk, etc.). API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_io_type_percent Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_read_io_type"},{"location":"ontap-metrics/#qos_volume_read_latency","text":"This is the average response time for read requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_latency Unit: microsec Type: average Base: read_ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_latency Unit: microsec Type: average,no-zero-values Base: read_ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_read_latency"},{"location":"ontap-metrics/#qos_volume_read_ops","text":"This is the rate of this workload's read operations that completed during the measurement interval. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_read_ops"},{"location":"ontap-metrics/#qos_volume_sequential_reads","text":"This is the percentage of reads, performed on behalf of the workload, that were sequential. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume sequential_reads_percent Unit: percent Type: percent Base: sequential_reads_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume sequential_reads Unit: percent Type: percent,no-zero-values Base: sequential_reads_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_sequential_reads"},{"location":"ontap-metrics/#qos_volume_sequential_writes","text":"This is the percentage of writes, performed on behalf of the workload, that were sequential. This counter is only available on platforms with more than 4GB of NVRAM. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume sequential_writes_percent Unit: percent Type: percent Base: sequential_writes_base conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume sequential_writes Unit: percent Type: percent,no-zero-values Base: sequential_writes_base conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_sequential_writes"},{"location":"ontap-metrics/#qos_volume_total_data","text":"This is the total amount of data read/written per second from/to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume total_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume total_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_total_data"},{"location":"ontap-metrics/#qos_volume_write_data","text":"This is the amount of data written per second to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_write_data"},{"location":"ontap-metrics/#qos_volume_write_latency","text":"This is the average response time for write requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_latency Unit: microsec Type: average,no-zero-values Base: write_ops conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_write_latency"},{"location":"ontap-metrics/#qos_volume_write_ops","text":"This is the workload's write operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos_volume write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload_volume.yaml ZAPI perf-object-get-instances workload_volume write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload_volume.yaml","title":"qos_volume_write_ops"},{"location":"ontap-metrics/#qos_write_data","text":"This is the amount of data written per second to the filer by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_data Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_data Unit: b_per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_write_data"},{"location":"ontap-metrics/#qos_write_latency","text":"This is the average response time for write requests that were initiated by the workload. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_latency Unit: microsec Type: average Base: write_ops conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_latency Unit: microsec Type: average,no-zero-values Base: write_ops conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_write_latency"},{"location":"ontap-metrics/#qos_write_ops","text":"This is the workload's write operations that completed during the measurement interval; measured per second. API Endpoint Metric Template REST api/cluster/counter/tables/qos write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/workload.yaml ZAPI perf-object-get-instances workload write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/workload.yaml","title":"qos_write_ops"},{"location":"ontap-metrics/#qtree_cifs_ops","text":"Number of CIFS operations per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree cifs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml","title":"qtree_cifs_ops"},{"location":"ontap-metrics/#qtree_id","text":"The identifier for the qtree, unique within the qtree's volume. API Endpoint Metric Template REST api/storage/qtrees id conf/rest/9.12.0/qtree.yaml","title":"qtree_id"},{"location":"ontap-metrics/#qtree_internal_ops","text":"Number of internal operations generated by activites such as snapmirror and backup per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree internal_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree internal_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml","title":"qtree_internal_ops"},{"location":"ontap-metrics/#qtree_nfs_ops","text":"Number of NFS operations per second to the qtree API Endpoint Metric Template REST api/cluster/counter/tables/qtree nfs_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree nfs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml","title":"qtree_nfs_ops"},{"location":"ontap-metrics/#qtree_total_ops","text":"Summation of NFS ops, CIFS ops, CSS ops and internal ops API Endpoint Metric Template REST api/cluster/counter/tables/qtree total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/qtree.yaml ZAPI perf-object-get-instances qtree total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/qtree.yaml","title":"qtree_total_ops"},{"location":"ontap-metrics/#quota_disk_limit","text":"Maximum amount of disk space, in kilobytes, allowed for the quota target (hard disk space limit). The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports space.hard_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_disk_limit"},{"location":"ontap-metrics/#quota_disk_used","text":"Current amount of disk space, in kilobytes, used by the quota target. API Endpoint Metric Template REST api/storage/quota/reports space.used.total conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_disk_used"},{"location":"ontap-metrics/#quota_disk_used_pct_disk_limit","text":"Current disk space used expressed as a percentage of hard disk limit. API Endpoint Metric Template REST api/storage/quota/reports space.used.hard_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used-pct-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_disk_used_pct_disk_limit"},{"location":"ontap-metrics/#quota_disk_used_pct_soft_disk_limit","text":"Current disk space used expressed as a percentage of soft disk limit. API Endpoint Metric Template REST api/storage/quota/reports space.used.soft_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter disk-used-pct-soft-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_disk_used_pct_soft_disk_limit"},{"location":"ontap-metrics/#quota_disk_used_pct_threshold","text":"Current disk space used expressed as a percentage of threshold. API Endpoint Metric Template ZAPI quota-report-iter disk-used-pct-threshold conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_disk_used_pct_threshold"},{"location":"ontap-metrics/#quota_file_limit","text":"Maximum number of files allowed for the quota target (hard files limit). The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports files.hard_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter file-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_file_limit"},{"location":"ontap-metrics/#quota_files_used","text":"Current number of files used by the quota target. API Endpoint Metric Template REST api/storage/quota/reports files.used.total conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_files_used"},{"location":"ontap-metrics/#quota_files_used_pct_file_limit","text":"Current number of files used expressed as a percentage of hard file limit. API Endpoint Metric Template REST api/storage/quota/reports files.used.hard_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used-pct-file-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_files_used_pct_file_limit"},{"location":"ontap-metrics/#quota_files_used_pct_soft_file_limit","text":"Current number of files used expressed as a percentage of soft file limit. API Endpoint Metric Template REST api/storage/quota/reports files.used.soft_limit_percent conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter files-used-pct-soft-file-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_files_used_pct_soft_file_limit"},{"location":"ontap-metrics/#quota_soft_disk_limit","text":"soft disk space limit, in kilobytes, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports space.soft_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter soft-disk-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_soft_disk_limit"},{"location":"ontap-metrics/#quota_soft_file_limit","text":"Soft file limit, in number of files, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template REST api/storage/quota/reports files.soft_limit conf/rest/9.12.0/qtree.yaml ZAPI quota-report-iter soft-file-limit conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_soft_file_limit"},{"location":"ontap-metrics/#quota_threshold","text":"Disk space threshold, in kilobytes, for the quota target. The value is -1 if the limit is unlimited. API Endpoint Metric Template ZAPI quota-report-iter threshold conf/zapi/cdot/9.8.0/qtree.yaml","title":"quota_threshold"},{"location":"ontap-metrics/#security_audit_destination_port","text":"The destination port used to forward the message. API Endpoint Metric Template ZAPI cluster-log-forward-get-iter cluster-log-forward-info.port conf/zapi/cdot/9.8.0/security_audit_dest.yaml","title":"security_audit_destination_port"},{"location":"ontap-metrics/#security_certificate_expiry_time","text":"Certificate expiration time. Can be provided on POST if creating self-signed certificate. The expiration time range is between 1 day to 10 years. API Endpoint Metric Template REST api/security/certificates expiry_time conf/rest/9.12.0/security_certificate.yaml ZAPI security-certificate-get-iter certificate-info.expiration-date conf/zapi/cdot/9.8.0/security_certificate.yaml","title":"security_certificate_expiry_time"},{"location":"ontap-metrics/#security_ssh_max_instances","text":"Maximum possible simultaneous connections. API Endpoint Metric Template REST api/security/ssh max_instances conf/rest/9.12.0/security_ssh.yaml","title":"security_ssh_max_instances"},{"location":"ontap-metrics/#shelf_average_ambient_temperature","text":"Average temperature of all ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_average_ambient_temperature"},{"location":"ontap-metrics/#shelf_average_fan_speed","text":"Average fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_average_fan_speed"},{"location":"ontap-metrics/#shelf_average_temperature","text":"Average temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_average_temperature"},{"location":"ontap-metrics/#shelf_disk_count","text":"Disk count in a shelf. API Endpoint Metric Template REST api/storage/shelves disk_count conf/rest/9.12.0/shelf.yaml ZAPI storage-shelf-info-get-iter storage-shelf-info.disk-count conf/zapi/cdot/9.8.0/shelf.yaml","title":"shelf_disk_count"},{"location":"ontap-metrics/#shelf_max_fan_speed","text":"Maximum fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_max_fan_speed"},{"location":"ontap-metrics/#shelf_max_temperature","text":"Maximum temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_max_temperature"},{"location":"ontap-metrics/#shelf_min_ambient_temperature","text":"Minimum temperature of all ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_min_ambient_temperature"},{"location":"ontap-metrics/#shelf_min_fan_speed","text":"Minimum fan speed for shelf in rpm. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_min_fan_speed"},{"location":"ontap-metrics/#shelf_min_temperature","text":"Minimum temperature of all non-ambient sensors for shelf in Celsius. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_min_temperature"},{"location":"ontap-metrics/#shelf_power","text":"Power consumed by shelf in Watts. API Endpoint Metric Template REST NA Harvest generated Unit: Type: Base: conf/restperf/9.12.0/disk.yaml ZAPI NA Harvest generated Unit: Type: Base: conf/zapiperf/cdot/9.8.0/disk.yaml","title":"shelf_power"},{"location":"ontap-metrics/#smb2_close_latency","text":"Average latency for SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_latency Unit: microsec Type: average Base: close_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_close_latency"},{"location":"ontap-metrics/#smb2_close_latency_histogram","text":"Latency histogram for SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_close_latency_histogram"},{"location":"ontap-metrics/#smb2_close_ops","text":"Number of SMB2_COM_CLOSE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 close_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_close_ops"},{"location":"ontap-metrics/#smb2_create_latency","text":"Average latency for SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_latency Unit: microsec Type: average Base: create_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_create_latency"},{"location":"ontap-metrics/#smb2_create_latency_histogram","text":"Latency histogram for SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_create_latency_histogram"},{"location":"ontap-metrics/#smb2_create_ops","text":"Number of SMB2_COM_CREATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 create_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_create_ops"},{"location":"ontap-metrics/#smb2_lock_latency","text":"Average latency for SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_latency Unit: microsec Type: average Base: lock_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_lock_latency"},{"location":"ontap-metrics/#smb2_lock_latency_histogram","text":"Latency histogram for SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_lock_latency_histogram"},{"location":"ontap-metrics/#smb2_lock_ops","text":"Number of SMB2_COM_LOCK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 lock_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_lock_ops"},{"location":"ontap-metrics/#smb2_negotiate_latency","text":"Average latency for SMB2_COM_NEGOTIATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 negotiate_latency Unit: microsec Type: average Base: negotiate_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_negotiate_latency"},{"location":"ontap-metrics/#smb2_negotiate_ops","text":"Number of SMB2_COM_NEGOTIATE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 negotiate_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_negotiate_ops"},{"location":"ontap-metrics/#smb2_oplock_break_latency","text":"Average latency for SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_latency Unit: microsec Type: average Base: oplock_break_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_oplock_break_latency"},{"location":"ontap-metrics/#smb2_oplock_break_latency_histogram","text":"Latency histogram for SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_oplock_break_latency_histogram"},{"location":"ontap-metrics/#smb2_oplock_break_ops","text":"Number of SMB2_COM_OPLOCK_BREAK operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 oplock_break_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_oplock_break_ops"},{"location":"ontap-metrics/#smb2_query_directory_latency","text":"Average latency for SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_latency Unit: microsec Type: average Base: query_directory_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_directory_latency"},{"location":"ontap-metrics/#smb2_query_directory_latency_histogram","text":"Latency histogram for SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_directory_latency_histogram"},{"location":"ontap-metrics/#smb2_query_directory_ops","text":"Number of SMB2_COM_QUERY_DIRECTORY operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_directory_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_directory_ops"},{"location":"ontap-metrics/#smb2_query_info_latency","text":"Average latency for SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_latency Unit: microsec Type: average Base: query_info_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_info_latency"},{"location":"ontap-metrics/#smb2_query_info_latency_histogram","text":"Latency histogram for SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_info_latency_histogram"},{"location":"ontap-metrics/#smb2_query_info_ops","text":"Number of SMB2_COM_QUERY_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 query_info_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_query_info_ops"},{"location":"ontap-metrics/#smb2_read_latency","text":"Average latency for SMB2_COM_READ operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_read_latency"},{"location":"ontap-metrics/#smb2_read_ops","text":"Number of SMB2_COM_READ operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_read_ops"},{"location":"ontap-metrics/#smb2_session_setup_latency","text":"Average latency for SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_latency Unit: microsec Type: average Base: session_setup_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_session_setup_latency"},{"location":"ontap-metrics/#smb2_session_setup_latency_histogram","text":"Latency histogram for SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_session_setup_latency_histogram"},{"location":"ontap-metrics/#smb2_session_setup_ops","text":"Number of SMB2_COM_SESSION_SETUP operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 session_setup_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_session_setup_ops"},{"location":"ontap-metrics/#smb2_set_info_latency","text":"Average latency for SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_latency Unit: microsec Type: average Base: set_info_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_set_info_latency"},{"location":"ontap-metrics/#smb2_set_info_latency_histogram","text":"Latency histogram for SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_latency_histogram Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_set_info_latency_histogram"},{"location":"ontap-metrics/#smb2_set_info_ops","text":"Number of SMB2_COM_SET_INFO operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 set_info_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_set_info_ops"},{"location":"ontap-metrics/#smb2_tree_connect_latency","text":"Average latency for SMB2_COM_TREE_CONNECT operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 tree_connect_latency Unit: microsec Type: average Base: tree_connect_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_tree_connect_latency"},{"location":"ontap-metrics/#smb2_tree_connect_ops","text":"Number of SMB2_COM_TREE_CONNECT operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 tree_connect_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_tree_connect_ops"},{"location":"ontap-metrics/#smb2_write_latency","text":"Average latency for SMB2_COM_WRITE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 write_latency Unit: microsec Type: average Base: write_latency_base conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_write_latency"},{"location":"ontap-metrics/#smb2_write_ops","text":"Number of SMB2_COM_WRITE operations API Endpoint Metric Template ZAPI perf-object-get-instances smb2 write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/smb2.yaml","title":"smb2_write_ops"},{"location":"ontap-metrics/#snapmirror_break_failed_count","text":"The number of failed SnapMirror break operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror break_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.break-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_break_failed_count"},{"location":"ontap-metrics/#snapmirror_break_successful_count","text":"The number of successful SnapMirror break operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror break_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.break-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_break_successful_count"},{"location":"ontap-metrics/#snapmirror_lag_time","text":"Amount of time since the last snapmirror transfer in seconds API Endpoint Metric Template REST api/private/cli/snapmirror lag_time conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.lag-time conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_lag_time"},{"location":"ontap-metrics/#snapmirror_last_transfer_duration","text":"Duration of the last SnapMirror transfer in seconds API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_duration conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-duration conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_last_transfer_duration"},{"location":"ontap-metrics/#snapmirror_last_transfer_end_timestamp","text":"The Timestamp of the end of the last transfer API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_end_timestamp conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-end-timestamp conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_last_transfer_end_timestamp"},{"location":"ontap-metrics/#snapmirror_last_transfer_size","text":"Size in kilobytes (1024 bytes) of the last transfer API Endpoint Metric Template REST api/private/cli/snapmirror last_transfer_size conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.last-transfer-size conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_last_transfer_size"},{"location":"ontap-metrics/#snapmirror_newest_snapshot_timestamp","text":"The timestamp of the newest Snapshot copy on the destination volume API Endpoint Metric Template REST api/private/cli/snapmirror newest_snapshot_timestamp conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.newest-snapshot-timestamp conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_newest_snapshot_timestamp"},{"location":"ontap-metrics/#snapmirror_resync_failed_count","text":"The number of failed SnapMirror resync operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror resync_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.resync-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_resync_failed_count"},{"location":"ontap-metrics/#snapmirror_resync_successful_count","text":"The number of successful SnapMirror resync operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror resync_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.resync-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_resync_successful_count"},{"location":"ontap-metrics/#snapmirror_total_transfer_bytes","text":"Cumulative bytes transferred for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror total_transfer_bytes conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.total-transfer-bytes conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_total_transfer_bytes"},{"location":"ontap-metrics/#snapmirror_total_transfer_time_secs","text":"Cumulative total transfer time in seconds for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror total_transfer_time_secs conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.total-transfer-time-secs conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_total_transfer_time_secs"},{"location":"ontap-metrics/#snapmirror_update_failed_count","text":"The number of successful SnapMirror update operations for the relationship API Endpoint Metric Template REST api/private/cli/snapmirror update_failed_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.update-failed-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_update_failed_count"},{"location":"ontap-metrics/#snapmirror_update_successful_count","text":"Number of Successful Updates API Endpoint Metric Template REST api/private/cli/snapmirror update_successful_count conf/rest/9.12.0/snapmirror.yaml ZAPI snapmirror-get-iter snapmirror-info.update-successful-count conf/zapi/cdot/9.8.0/snapmirror.yaml","title":"snapmirror_update_successful_count"},{"location":"ontap-metrics/#snapshot_policy_total_schedules","text":"Total Number of Schedules in this Policy API Endpoint Metric Template REST api/private/cli/snapshot/policy total_schedules conf/rest/9.12.0/snapshotpolicy.yaml ZAPI snapshot-policy-get-iter snapshot-policy-info.total-schedules conf/zapi/cdot/9.8.0/snapshotpolicy.yaml","title":"snapshot_policy_total_schedules"},{"location":"ontap-metrics/#svm_cifs_connections","text":"Number of connections API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs connections Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver connections Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_connections"},{"location":"ontap-metrics/#svm_cifs_established_sessions","text":"Number of established SMB and SMB2 sessions API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs established_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver established_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_established_sessions"},{"location":"ontap-metrics/#svm_cifs_latency","text":"Average latency for CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs latency Unit: microsec Type: average Base: latency_base conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_latency Unit: microsec Type: average Base: cifs_latency_base conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_latency"},{"location":"ontap-metrics/#svm_cifs_op_count","text":"Array of select CIFS operation counts API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs op_count Unit: none Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_op_count Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_op_count"},{"location":"ontap-metrics/#svm_cifs_open_files","text":"Number of open files over SMB and SMB2 API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs open_files Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver open_files Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_open_files"},{"location":"ontap-metrics/#svm_cifs_ops","text":"Total number of CIFS operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_ops"},{"location":"ontap-metrics/#svm_cifs_read_latency","text":"Average latency for CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs average_read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_read_latency Unit: microsec Type: average Base: cifs_read_ops conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_read_latency"},{"location":"ontap-metrics/#svm_cifs_read_ops","text":"Total number of CIFS read operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_read_ops"},{"location":"ontap-metrics/#svm_cifs_signed_sessions","text":"Number of signed SMB and SMB2 sessions. API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs signed_sessions Unit: none Type: raw Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver signed_sessions Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_signed_sessions"},{"location":"ontap-metrics/#svm_cifs_write_latency","text":"Average latency for CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs average_write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_write_latency Unit: microsec Type: average Base: cifs_write_ops conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_write_latency"},{"location":"ontap-metrics/#svm_cifs_write_ops","text":"Total number of CIFS write operations API Endpoint Metric Template REST api/cluster/counter/tables/svm_cifs total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/cifs_svm.yaml ZAPI perf-object-get-instances cifs:vserver cifs_write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/cifs_vserver.yaml","title":"svm_cifs_write_ops"},{"location":"ontap-metrics/#svm_nfs_access_avg_latency","text":"Average latency of NFSv4.2 ACCESS operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 access.average_latency Unit: microsec Type: average Base: access.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 access_avg_latency Unit: microsec Type: average,no-zero-values Base: access_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_access_avg_latency"},{"location":"ontap-metrics/#svm_nfs_access_total","text":"Total number of NFSv4.2 ACCESS operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 access.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 access_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_access_total"},{"location":"ontap-metrics/#svm_nfs_backchannel_ctl_avg_latency","text":"Average latency of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 backchannel_ctl.average_latency Unit: microsec Type: average Base: backchannel_ctl.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 backchannel_ctl_avg_latency Unit: microsec Type: average,no-zero-values Base: backchannel_ctl_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_backchannel_ctl_avg_latency"},{"location":"ontap-metrics/#svm_nfs_backchannel_ctl_total","text":"Total number of NFSv4.2 BACKCHANNEL_CTL operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 backchannel_ctl.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 backchannel_ctl_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_backchannel_ctl_total"},{"location":"ontap-metrics/#svm_nfs_bind_conn_to_session_avg_latency","text":"Average latency of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 bind_conn_to_session.average_latency Unit: microsec Type: average Base: bind_conn_to_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 bind_conn_to_session_avg_latency Unit: microsec Type: average,no-zero-values Base: bind_conn_to_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_bind_conn_to_session_avg_latency"},{"location":"ontap-metrics/#svm_nfs_bind_conn_to_session_total","text":"Total number of NFSv4.2 BIND_CONN_TO_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 bind_conn_to_session.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 bind_conn_to_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_bind_conn_to_session_total"},{"location":"ontap-metrics/#svm_nfs_close_avg_latency","text":"Average latency of NFSv4.2 CLOSE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 close.average_latency Unit: microsec Type: average Base: close.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 close_avg_latency Unit: microsec Type: average,no-zero-values Base: close_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_close_avg_latency"},{"location":"ontap-metrics/#svm_nfs_close_total","text":"Total number of NFSv4.2 CLOSE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 close.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 close_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_close_total"},{"location":"ontap-metrics/#svm_nfs_commit_avg_latency","text":"Average latency of NFSv4.2 COMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 commit.average_latency Unit: microsec Type: average Base: commit.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 commit_avg_latency Unit: microsec Type: average,no-zero-values Base: commit_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_commit_avg_latency"},{"location":"ontap-metrics/#svm_nfs_commit_total","text":"Total number of NFSv4.2 COMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 commit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 commit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_commit_total"},{"location":"ontap-metrics/#svm_nfs_create_avg_latency","text":"Average latency of NFSv4.2 CREATE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create.average_latency Unit: microsec Type: average Base: create.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_avg_latency Unit: microsec Type: average,no-zero-values Base: create_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_create_avg_latency"},{"location":"ontap-metrics/#svm_nfs_create_session_avg_latency","text":"Average latency of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create_session.average_latency Unit: microsec Type: average Base: create_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_session_avg_latency Unit: microsec Type: average,no-zero-values Base: create_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_create_session_avg_latency"},{"location":"ontap-metrics/#svm_nfs_create_session_total","text":"Total number of NFSv4.2 CREATE_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_create_session_total"},{"location":"ontap-metrics/#svm_nfs_create_total","text":"Total number of NFSv4.2 CREATE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 create.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 create_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_create_total"},{"location":"ontap-metrics/#svm_nfs_delegpurge_avg_latency","text":"Average latency of NFSv4.2 DELEGPURGE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegpurge.average_latency Unit: microsec Type: average Base: delegpurge.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegpurge_avg_latency Unit: microsec Type: average,no-zero-values Base: delegpurge_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_delegpurge_avg_latency"},{"location":"ontap-metrics/#svm_nfs_delegpurge_total","text":"Total number of NFSv4.2 DELEGPURGE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegpurge.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegpurge_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_delegpurge_total"},{"location":"ontap-metrics/#svm_nfs_delegreturn_avg_latency","text":"Average latency of NFSv4.2 DELEGRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegreturn.average_latency Unit: microsec Type: average Base: delegreturn.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: delegreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_delegreturn_avg_latency"},{"location":"ontap-metrics/#svm_nfs_delegreturn_total","text":"Total number of NFSv4.2 DELEGRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 delegreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 delegreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_delegreturn_total"},{"location":"ontap-metrics/#svm_nfs_destroy_clientid_avg_latency","text":"Average latency of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_clientid.average_latency Unit: microsec Type: average Base: destroy_clientid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_clientid_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_clientid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_destroy_clientid_avg_latency"},{"location":"ontap-metrics/#svm_nfs_destroy_clientid_total","text":"Total number of NFSv4.2 DESTROY_CLIENTID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_clientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_clientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_destroy_clientid_total"},{"location":"ontap-metrics/#svm_nfs_destroy_session_avg_latency","text":"Average latency of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_session.average_latency Unit: microsec Type: average Base: destroy_session.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_session_avg_latency Unit: microsec Type: average,no-zero-values Base: destroy_session_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_destroy_session_avg_latency"},{"location":"ontap-metrics/#svm_nfs_destroy_session_total","text":"Total number of NFSv4.2 DESTROY_SESSION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 destroy_session.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 destroy_session_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_destroy_session_total"},{"location":"ontap-metrics/#svm_nfs_exchange_id_avg_latency","text":"Average latency of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 exchange_id.average_latency Unit: microsec Type: average Base: exchange_id.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 exchange_id_avg_latency Unit: microsec Type: average,no-zero-values Base: exchange_id_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_exchange_id_avg_latency"},{"location":"ontap-metrics/#svm_nfs_exchange_id_total","text":"Total number of NFSv4.2 EXCHANGE_ID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 exchange_id.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 exchange_id_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_exchange_id_total"},{"location":"ontap-metrics/#svm_nfs_free_stateid_avg_latency","text":"Average latency of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 free_stateid.average_latency Unit: microsec Type: average Base: free_stateid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 free_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: free_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_free_stateid_avg_latency"},{"location":"ontap-metrics/#svm_nfs_free_stateid_total","text":"Total number of NFSv4.2 FREE_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 free_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 free_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_free_stateid_total"},{"location":"ontap-metrics/#svm_nfs_fsinfo_avg_latency","text":"Average latency of FSInfo procedure requests. The counter keeps track of the average response time of FSInfo requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsinfo.average_latency Unit: microsec Type: average Base: fsinfo.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: fsinfo_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_fsinfo_avg_latency"},{"location":"ontap-metrics/#svm_nfs_fsinfo_total","text":"Total number FSInfo of procedure requests. It is the total number of FSInfo success and FSInfo error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_fsinfo_total"},{"location":"ontap-metrics/#svm_nfs_fsstat_avg_latency","text":"Average latency of FSStat procedure requests. The counter keeps track of the average response time of FSStat requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsstat.average_latency Unit: microsec Type: average Base: fsstat.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsstat_avg_latency Unit: microsec Type: average,no-zero-values Base: fsstat_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_fsstat_avg_latency"},{"location":"ontap-metrics/#svm_nfs_fsstat_total","text":"Total number FSStat of procedure requests. It is the total number of FSStat success and FSStat error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 fsstat.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 fsstat_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_fsstat_total"},{"location":"ontap-metrics/#svm_nfs_get_dir_delegation_avg_latency","text":"Average latency of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 get_dir_delegation.average_latency Unit: microsec Type: average Base: get_dir_delegation.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 get_dir_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: get_dir_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_get_dir_delegation_avg_latency"},{"location":"ontap-metrics/#svm_nfs_get_dir_delegation_total","text":"Total number of NFSv4.2 GET_DIR_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 get_dir_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 get_dir_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_get_dir_delegation_total"},{"location":"ontap-metrics/#svm_nfs_getattr_avg_latency","text":"Average latency of NFSv4.2 GETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getattr.average_latency Unit: microsec Type: average Base: getattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getattr_avg_latency Unit: microsec Type: average,no-zero-values Base: getattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getattr_avg_latency"},{"location":"ontap-metrics/#svm_nfs_getattr_total","text":"Total number of NFSv4.2 GETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getattr_total"},{"location":"ontap-metrics/#svm_nfs_getdeviceinfo_avg_latency","text":"Average latency of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdeviceinfo.average_latency Unit: microsec Type: average Base: getdeviceinfo.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdeviceinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: getdeviceinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getdeviceinfo_avg_latency"},{"location":"ontap-metrics/#svm_nfs_getdeviceinfo_total","text":"Total number of NFSv4.2 GETDEVICEINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdeviceinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdeviceinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getdeviceinfo_total"},{"location":"ontap-metrics/#svm_nfs_getdevicelist_avg_latency","text":"Average latency of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdevicelist.average_latency Unit: microsec Type: average Base: getdevicelist.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdevicelist_avg_latency Unit: microsec Type: average,no-zero-values Base: getdevicelist_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getdevicelist_avg_latency"},{"location":"ontap-metrics/#svm_nfs_getdevicelist_total","text":"Total number of NFSv4.2 GETDEVICELIST operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getdevicelist.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getdevicelist_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getdevicelist_total"},{"location":"ontap-metrics/#svm_nfs_getfh_avg_latency","text":"Average latency of NFSv4.2 GETFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getfh.average_latency Unit: microsec Type: average Base: getfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getfh_avg_latency Unit: microsec Type: average,no-zero-values Base: getfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getfh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_getfh_total","text":"Total number of NFSv4.2 GETFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 getfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 getfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_getfh_total"},{"location":"ontap-metrics/#svm_nfs_latency","text":"Average latency of nfsv42 requests. This counter keeps track of the average response time of nfsv42 requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 latency Unit: microsec Type: average,no-zero-values Base: total_ops conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_latency"},{"location":"ontap-metrics/#svm_nfs_layoutcommit_avg_latency","text":"Average latency of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutcommit.average_latency Unit: microsec Type: average Base: layoutcommit.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutcommit_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutcommit_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutcommit_avg_latency"},{"location":"ontap-metrics/#svm_nfs_layoutcommit_total","text":"Total number of NFSv4.2 LAYOUTCOMMIT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutcommit.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutcommit_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutcommit_total"},{"location":"ontap-metrics/#svm_nfs_layoutget_avg_latency","text":"Average latency of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutget.average_latency Unit: microsec Type: average Base: layoutget.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutget_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutget_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutget_avg_latency"},{"location":"ontap-metrics/#svm_nfs_layoutget_total","text":"Total number of NFSv4.2 LAYOUTGET operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutget.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutget_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutget_total"},{"location":"ontap-metrics/#svm_nfs_layoutreturn_avg_latency","text":"Average latency of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutreturn.average_latency Unit: microsec Type: average Base: layoutreturn.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutreturn_avg_latency Unit: microsec Type: average,no-zero-values Base: layoutreturn_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutreturn_avg_latency"},{"location":"ontap-metrics/#svm_nfs_layoutreturn_total","text":"Total number of NFSv4.2 LAYOUTRETURN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 layoutreturn.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 layoutreturn_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_layoutreturn_total"},{"location":"ontap-metrics/#svm_nfs_link_avg_latency","text":"Average latency of NFSv4.2 LINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 link.average_latency Unit: microsec Type: average Base: link.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 link_avg_latency Unit: microsec Type: average,no-zero-values Base: link_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_link_avg_latency"},{"location":"ontap-metrics/#svm_nfs_link_total","text":"Total number of NFSv4.2 LINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 link.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 link_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_link_total"},{"location":"ontap-metrics/#svm_nfs_lock_avg_latency","text":"Average latency of NFSv4.2 LOCK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lock.average_latency Unit: microsec Type: average Base: lock.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lock_avg_latency Unit: microsec Type: average,no-zero-values Base: lock_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lock_avg_latency"},{"location":"ontap-metrics/#svm_nfs_lock_total","text":"Total number of NFSv4.2 LOCK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lock.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lock_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lock_total"},{"location":"ontap-metrics/#svm_nfs_lockt_avg_latency","text":"Average latency of NFSv4.2 LOCKT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lockt.average_latency Unit: microsec Type: average Base: lockt.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lockt_avg_latency Unit: microsec Type: average,no-zero-values Base: lockt_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lockt_avg_latency"},{"location":"ontap-metrics/#svm_nfs_lockt_total","text":"Total number of NFSv4.2 LOCKT operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lockt.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lockt_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lockt_total"},{"location":"ontap-metrics/#svm_nfs_locku_avg_latency","text":"Average latency of NFSv4.2 LOCKU operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 locku.average_latency Unit: microsec Type: average Base: locku.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 locku_avg_latency Unit: microsec Type: average,no-zero-values Base: locku_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_locku_avg_latency"},{"location":"ontap-metrics/#svm_nfs_locku_total","text":"Total number of NFSv4.2 LOCKU operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 locku.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 locku_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_locku_total"},{"location":"ontap-metrics/#svm_nfs_lookup_avg_latency","text":"Average latency of NFSv4.2 LOOKUP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookup.average_latency Unit: microsec Type: average Base: lookup.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookup_avg_latency Unit: microsec Type: average,no-zero-values Base: lookup_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lookup_avg_latency"},{"location":"ontap-metrics/#svm_nfs_lookup_total","text":"Total number of NFSv4.2 LOOKUP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookup.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookup_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lookup_total"},{"location":"ontap-metrics/#svm_nfs_lookupp_avg_latency","text":"Average latency of NFSv4.2 LOOKUPP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookupp.average_latency Unit: microsec Type: average Base: lookupp.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookupp_avg_latency Unit: microsec Type: average,no-zero-values Base: lookupp_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lookupp_avg_latency"},{"location":"ontap-metrics/#svm_nfs_lookupp_total","text":"Total number of NFSv4.2 LOOKUPP operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 lookupp.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 lookupp_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_lookupp_total"},{"location":"ontap-metrics/#svm_nfs_mkdir_avg_latency","text":"Average latency of MkDir procedure requests. The counter keeps track of the average response time of MkDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mkdir.average_latency Unit: microsec Type: average Base: mkdir.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mkdir_avg_latency Unit: microsec Type: average,no-zero-values Base: mkdir_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_mkdir_avg_latency"},{"location":"ontap-metrics/#svm_nfs_mkdir_total","text":"Total number MkDir of procedure requests. It is the total number of MkDir success and MkDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mkdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mkdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_mkdir_total"},{"location":"ontap-metrics/#svm_nfs_mknod_avg_latency","text":"Average latency of MkNod procedure requests. The counter keeps track of the average response time of MkNod requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mknod.average_latency Unit: microsec Type: average Base: mknod.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mknod_avg_latency Unit: microsec Type: average,no-zero-values Base: mknod_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_mknod_avg_latency"},{"location":"ontap-metrics/#svm_nfs_mknod_total","text":"Total number MkNod of procedure requests. It is the total number of MkNod success and MkNod error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 mknod.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 mknod_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_mknod_total"},{"location":"ontap-metrics/#svm_nfs_null_avg_latency","text":"Average latency of NFSv4.2 NULL procedures. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 null.average_latency Unit: microsec Type: average Base: null.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 null_avg_latency Unit: microsec Type: average,no-zero-values Base: null_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_null_avg_latency"},{"location":"ontap-metrics/#svm_nfs_null_total","text":"Total number of NFSv4.2 NULL procedures. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 null.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 null_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_null_total"},{"location":"ontap-metrics/#svm_nfs_nverify_avg_latency","text":"Average latency of NFSv4.2 NVERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 nverify.average_latency Unit: microsec Type: average Base: nverify.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nverify_avg_latency Unit: microsec Type: average,no-zero-values Base: nverify_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_nverify_avg_latency"},{"location":"ontap-metrics/#svm_nfs_nverify_total","text":"Total number of NFSv4.2 NVERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 nverify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nverify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_nverify_total"},{"location":"ontap-metrics/#svm_nfs_open_avg_latency","text":"Average latency of NFSv4.2 OPEN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open.average_latency Unit: microsec Type: average Base: open.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_avg_latency Unit: microsec Type: average,no-zero-values Base: open_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_open_avg_latency"},{"location":"ontap-metrics/#svm_nfs_open_confirm_avg_latency","text":"Average latency of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 open_confirm.average_latency Unit: microsec Type: average Base: open_confirm.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 open_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: open_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_open_confirm_avg_latency"},{"location":"ontap-metrics/#svm_nfs_open_confirm_total","text":"Total number of OPEN_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 open_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 open_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_open_confirm_total"},{"location":"ontap-metrics/#svm_nfs_open_downgrade_avg_latency","text":"Average latency of NFSv4.2 OPEN_DOWNGRADE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open_downgrade.average_latency Unit: microsec Type: average Base: open_downgrade.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_downgrade_avg_latency Unit: microsec Type: average,no-zero-values Base: open_downgrade_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_open_downgrade_avg_latency"},{"location":"ontap-metrics/#svm_nfs_open_downgrade_total","text":"Total number of NFSv4.2 OPEN_DOWNGRADE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open_downgrade.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_downgrade_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_open_downgrade_total"},{"location":"ontap-metrics/#svm_nfs_open_total","text":"Total number of NFSv4.2 OPEN operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 open.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 open_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_open_total"},{"location":"ontap-metrics/#svm_nfs_openattr_avg_latency","text":"Average latency of NFSv4.2 OPENATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 openattr.average_latency Unit: microsec Type: average Base: openattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 openattr_avg_latency Unit: microsec Type: average,no-zero-values Base: openattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_openattr_avg_latency"},{"location":"ontap-metrics/#svm_nfs_openattr_total","text":"Total number of NFSv4.2 OPENATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 openattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 openattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_openattr_total"},{"location":"ontap-metrics/#svm_nfs_ops","text":"Total number of nfsv42 requests per sec. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 total_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_ops"},{"location":"ontap-metrics/#svm_nfs_pathconf_avg_latency","text":"Average latency of PathConf procedure requests. The counter keeps track of the average response time of PathConf requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 pathconf.average_latency Unit: microsec Type: average Base: pathconf.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 pathconf_avg_latency Unit: microsec Type: average,no-zero-values Base: pathconf_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_pathconf_avg_latency"},{"location":"ontap-metrics/#svm_nfs_pathconf_total","text":"Total number PathConf of procedure requests. It is the total number of PathConf success and PathConf error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 pathconf.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 pathconf_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_pathconf_total"},{"location":"ontap-metrics/#svm_nfs_putfh_avg_latency","text":"Average latency of NFSv4.2 PUTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putfh.average_latency Unit: microsec Type: average Base: putfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putfh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_putfh_total","text":"Total number of NFSv4.2 PUTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putfh_total"},{"location":"ontap-metrics/#svm_nfs_putpubfh_avg_latency","text":"Average latency of NFSv4.2 PUTPUBFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putpubfh.average_latency Unit: microsec Type: average Base: putpubfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putpubfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putpubfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putpubfh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_putpubfh_total","text":"Total number of NFSv4.2 PUTPUBFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putpubfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putpubfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putpubfh_total"},{"location":"ontap-metrics/#svm_nfs_putrootfh_avg_latency","text":"Average latency of NFSv4.2 PUTROOTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putrootfh.average_latency Unit: microsec Type: average Base: putrootfh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putrootfh_avg_latency Unit: microsec Type: average,no-zero-values Base: putrootfh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putrootfh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_putrootfh_total","text":"Total number of NFSv4.2 PUTROOTFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 putrootfh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 putrootfh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_putrootfh_total"},{"location":"ontap-metrics/#svm_nfs_read_avg_latency","text":"Average latency of NFSv4.2 READ operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 read.average_latency Unit: microsec Type: average Base: read.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 read_avg_latency Unit: microsec Type: average,no-zero-values Base: read_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_read_avg_latency"},{"location":"ontap-metrics/#svm_nfs_read_ops","text":"Total observed NFSv3 read operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 nfsv3_read_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_read_ops"},{"location":"ontap-metrics/#svm_nfs_read_symlink_avg_latency","text":"Average latency of ReadSymLink procedure requests. The counter keeps track of the average response time of ReadSymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_symlink.average_latency Unit: microsec Type: average Base: read_symlink.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 read_symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: read_symlink_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_read_symlink_avg_latency"},{"location":"ontap-metrics/#svm_nfs_read_symlink_total","text":"Total number of ReadSymLink procedure requests. It is the total number of read symlink success and read symlink error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 read_symlink.total Unit: none Type: delta Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 read_symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_read_symlink_total"},{"location":"ontap-metrics/#svm_nfs_read_throughput","text":"NFSv4.2 read data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.read_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_read_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_read_throughput"},{"location":"ontap-metrics/#svm_nfs_read_total","text":"Total number of NFSv4.2 READ operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 read.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 read_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_read_total"},{"location":"ontap-metrics/#svm_nfs_readdir_avg_latency","text":"Average latency of NFSv4.2 READDIR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readdir.average_latency Unit: microsec Type: average Base: readdir.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readdir_avg_latency Unit: microsec Type: average,no-zero-values Base: readdir_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_readdir_avg_latency"},{"location":"ontap-metrics/#svm_nfs_readdir_total","text":"Total number of NFSv4.2 READDIR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_readdir_total"},{"location":"ontap-metrics/#svm_nfs_readdirplus_avg_latency","text":"Average latency of ReadDirPlus procedure requests. The counter keeps track of the average response time of ReadDirPlus requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 readdirplus.average_latency Unit: microsec Type: average Base: readdirplus.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 readdirplus_avg_latency Unit: microsec Type: average,no-zero-values Base: readdirplus_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_readdirplus_avg_latency"},{"location":"ontap-metrics/#svm_nfs_readdirplus_total","text":"Total number ReadDirPlus of procedure requests. It is the total number of ReadDirPlus success and ReadDirPlus error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 readdirplus.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 readdirplus_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_readdirplus_total"},{"location":"ontap-metrics/#svm_nfs_readlink_avg_latency","text":"Average latency of NFSv4.2 READLINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readlink.average_latency Unit: microsec Type: average Base: readlink.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readlink_avg_latency Unit: microsec Type: average,no-zero-values Base: readlink_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_readlink_avg_latency"},{"location":"ontap-metrics/#svm_nfs_readlink_total","text":"Total number of NFSv4.2 READLINK operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 readlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 readlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_readlink_total"},{"location":"ontap-metrics/#svm_nfs_reclaim_complete_avg_latency","text":"Average latency of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 reclaim_complete.average_latency Unit: microsec Type: average Base: reclaim_complete.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 reclaim_complete_avg_latency Unit: microsec Type: average,no-zero-values Base: reclaim_complete_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_reclaim_complete_avg_latency"},{"location":"ontap-metrics/#svm_nfs_reclaim_complete_total","text":"Total number of NFSv4.2 RECLAIM_complete operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 reclaim_complete.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 reclaim_complete_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_reclaim_complete_total"},{"location":"ontap-metrics/#svm_nfs_release_lock_owner_avg_latency","text":"Average Latency of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 release_lock_owner.average_latency Unit: microsec Type: average Base: release_lock_owner.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 release_lock_owner_avg_latency Unit: microsec Type: average,no-zero-values Base: release_lock_owner_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_release_lock_owner_avg_latency"},{"location":"ontap-metrics/#svm_nfs_release_lock_owner_total","text":"Total number of RELEASE_LOCKOWNER procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 release_lock_owner.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 release_lock_owner_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_release_lock_owner_total"},{"location":"ontap-metrics/#svm_nfs_remove_avg_latency","text":"Average latency of NFSv4.2 REMOVE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 remove.average_latency Unit: microsec Type: average Base: remove.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 remove_avg_latency Unit: microsec Type: average,no-zero-values Base: remove_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_remove_avg_latency"},{"location":"ontap-metrics/#svm_nfs_remove_total","text":"Total number of NFSv4.2 REMOVE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 remove.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 remove_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_remove_total"},{"location":"ontap-metrics/#svm_nfs_rename_avg_latency","text":"Average latency of NFSv4.2 RENAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 rename.average_latency Unit: microsec Type: average Base: rename.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 rename_avg_latency Unit: microsec Type: average,no-zero-values Base: rename_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_rename_avg_latency"},{"location":"ontap-metrics/#svm_nfs_rename_total","text":"Total number of NFSv4.2 RENAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 rename.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 rename_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_rename_total"},{"location":"ontap-metrics/#svm_nfs_renew_avg_latency","text":"Average latency of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 renew.average_latency Unit: microsec Type: average Base: renew.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 renew_avg_latency Unit: microsec Type: average,no-zero-values Base: renew_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_renew_avg_latency"},{"location":"ontap-metrics/#svm_nfs_renew_total","text":"Total number of RENEW procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 renew.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 renew_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_renew_total"},{"location":"ontap-metrics/#svm_nfs_restorefh_avg_latency","text":"Average latency of NFSv4.2 RESTOREFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 restorefh.average_latency Unit: microsec Type: average Base: restorefh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 restorefh_avg_latency Unit: microsec Type: average,no-zero-values Base: restorefh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_restorefh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_restorefh_total","text":"Total number of NFSv4.2 RESTOREFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 restorefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 restorefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_restorefh_total"},{"location":"ontap-metrics/#svm_nfs_rmdir_avg_latency","text":"Average latency of RmDir procedure requests. The counter keeps track of the average response time of RmDir requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 rmdir.average_latency Unit: microsec Type: average Base: rmdir.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 rmdir_avg_latency Unit: microsec Type: average,no-zero-values Base: rmdir_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_rmdir_avg_latency"},{"location":"ontap-metrics/#svm_nfs_rmdir_total","text":"Total number RmDir of procedure requests. It is the total number of RmDir success and RmDir error requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 rmdir.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 rmdir_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_rmdir_total"},{"location":"ontap-metrics/#svm_nfs_savefh_avg_latency","text":"Average latency of NFSv4.2 SAVEFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 savefh.average_latency Unit: microsec Type: average Base: savefh.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 savefh_avg_latency Unit: microsec Type: average,no-zero-values Base: savefh_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_savefh_avg_latency"},{"location":"ontap-metrics/#svm_nfs_savefh_total","text":"Total number of NFSv4.2 SAVEFH operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 savefh.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 savefh_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_savefh_total"},{"location":"ontap-metrics/#svm_nfs_secinfo_avg_latency","text":"Average latency of NFSv4.2 SECINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo.average_latency Unit: microsec Type: average Base: secinfo.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_secinfo_avg_latency"},{"location":"ontap-metrics/#svm_nfs_secinfo_no_name_avg_latency","text":"Average latency of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo_no_name.average_latency Unit: microsec Type: average Base: secinfo_no_name.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_no_name_avg_latency Unit: microsec Type: average,no-zero-values Base: secinfo_no_name_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_secinfo_no_name_avg_latency"},{"location":"ontap-metrics/#svm_nfs_secinfo_no_name_total","text":"Total number of NFSv4.2 SECINFO_NO_NAME operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo_no_name.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_no_name_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_secinfo_no_name_total"},{"location":"ontap-metrics/#svm_nfs_secinfo_total","text":"Total number of NFSv4.2 SECINFO operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 secinfo.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 secinfo_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_secinfo_total"},{"location":"ontap-metrics/#svm_nfs_sequence_avg_latency","text":"Average latency of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 sequence.average_latency Unit: microsec Type: average Base: sequence.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 sequence_avg_latency Unit: microsec Type: average,no-zero-values Base: sequence_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_sequence_avg_latency"},{"location":"ontap-metrics/#svm_nfs_sequence_total","text":"Total number of NFSv4.2 SEQUENCE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 sequence.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 sequence_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_sequence_total"},{"location":"ontap-metrics/#svm_nfs_set_ssv_avg_latency","text":"Average latency of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 set_ssv.average_latency Unit: microsec Type: average Base: set_ssv.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 set_ssv_avg_latency Unit: microsec Type: average,no-zero-values Base: set_ssv_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_set_ssv_avg_latency"},{"location":"ontap-metrics/#svm_nfs_set_ssv_total","text":"Total number of NFSv4.2 SET_SSV operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 set_ssv.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 set_ssv_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_set_ssv_total"},{"location":"ontap-metrics/#svm_nfs_setattr_avg_latency","text":"Average latency of NFSv4.2 SETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 setattr.average_latency Unit: microsec Type: average Base: setattr.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 setattr_avg_latency Unit: microsec Type: average,no-zero-values Base: setattr_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_setattr_avg_latency"},{"location":"ontap-metrics/#svm_nfs_setattr_total","text":"Total number of NFSv4.2 SETATTR operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 setattr.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 setattr_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_setattr_total"},{"location":"ontap-metrics/#svm_nfs_setclientid_avg_latency","text":"Average latency of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid.average_latency Unit: microsec Type: average Base: setclientid.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_setclientid_avg_latency"},{"location":"ontap-metrics/#svm_nfs_setclientid_confirm_avg_latency","text":"Average latency of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid_confirm.average_latency Unit: microsec Type: average Base: setclientid_confirm.total conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_confirm_avg_latency Unit: microsec Type: average,no-zero-values Base: setclientid_confirm_total conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_setclientid_confirm_avg_latency"},{"location":"ontap-metrics/#svm_nfs_setclientid_confirm_total","text":"Total number of SETCLIENTID_CONFIRM procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid_confirm.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_confirm_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_setclientid_confirm_total"},{"location":"ontap-metrics/#svm_nfs_setclientid_total","text":"Total number of SETCLIENTID procedures API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v4 setclientid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4.yaml ZAPI perf-object-get-instances nfsv4 setclientid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4.yaml","title":"svm_nfs_setclientid_total"},{"location":"ontap-metrics/#svm_nfs_symlink_avg_latency","text":"Average latency of SymLink procedure requests. The counter keeps track of the average response time of SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 symlink.average_latency Unit: microsec Type: average Base: symlink.total conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 symlink_avg_latency Unit: microsec Type: average,no-zero-values Base: symlink_total conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_symlink_avg_latency"},{"location":"ontap-metrics/#svm_nfs_symlink_total","text":"Total number SymLink of procedure requests. It is the total number of SymLink success and create SymLink requests. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 symlink.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 symlink_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_symlink_total"},{"location":"ontap-metrics/#svm_nfs_test_stateid_avg_latency","text":"Average latency of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 test_stateid.average_latency Unit: microsec Type: average Base: test_stateid.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 test_stateid_avg_latency Unit: microsec Type: average,no-zero-values Base: test_stateid_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_test_stateid_avg_latency"},{"location":"ontap-metrics/#svm_nfs_test_stateid_total","text":"Total number of NFSv4.2 TEST_STATEID operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 test_stateid.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 test_stateid_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_test_stateid_total"},{"location":"ontap-metrics/#svm_nfs_throughput","text":"NFSv4.2 write data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.write_throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_throughput"},{"location":"ontap-metrics/#svm_nfs_verify_avg_latency","text":"Average latency of NFSv4.2 VERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 verify.average_latency Unit: microsec Type: average Base: verify.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 verify_avg_latency Unit: microsec Type: average,no-zero-values Base: verify_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_verify_avg_latency"},{"location":"ontap-metrics/#svm_nfs_verify_total","text":"Total number of NFSv4.2 VERIFY operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 verify.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 verify_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_verify_total"},{"location":"ontap-metrics/#svm_nfs_want_delegation_avg_latency","text":"Average latency of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 want_delegation.average_latency Unit: microsec Type: average Base: want_delegation.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 want_delegation_avg_latency Unit: microsec Type: average,no-zero-values Base: want_delegation_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_want_delegation_avg_latency"},{"location":"ontap-metrics/#svm_nfs_want_delegation_total","text":"Total number of NFSv4.2 WANT_DELEGATION operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 want_delegation.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 want_delegation_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_want_delegation_total"},{"location":"ontap-metrics/#svm_nfs_write_avg_latency","text":"Average latency of NFSv4.2 WRITE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 write.average_latency Unit: microsec Type: average Base: write.total conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 write_avg_latency Unit: microsec Type: average,no-zero-values Base: write_total conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_write_avg_latency"},{"location":"ontap-metrics/#svm_nfs_write_ops","text":"Total observed NFSv3 write operations per second. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v3 write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv3.yaml ZAPI perf-object-get-instances nfsv3 nfsv3_write_ops Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv3.yaml","title":"svm_nfs_write_ops"},{"location":"ontap-metrics/#svm_nfs_write_throughput","text":"NFSv4.2 data transfers. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 total.throughput Unit: per_sec Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 nfs41_write_throughput Unit: per_sec Type: rate,no-zero-values Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_write_throughput"},{"location":"ontap-metrics/#svm_nfs_write_total","text":"Total number of NFSv4.2 WRITE operations. API Endpoint Metric Template REST api/cluster/counter/tables/svm_nfs_v42 write.total Unit: none Type: rate Base: conf/restperf/9.12.0/nfsv4_2.yaml ZAPI perf-object-get-instances nfsv4_1 write_total Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/nfsv4_1.yaml","title":"svm_nfs_write_total"},{"location":"ontap-metrics/#svm_vol_avg_latency","text":"Average latency in microseconds for the WAFL filesystem to process all the operations on the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_avg_latency"},{"location":"ontap-metrics/#svm_vol_other_latency","text":"Average latency in microseconds for the WAFL filesystem to process other operations to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm other_latency Unit: microsec Type: average Base: total_other_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_other_latency"},{"location":"ontap-metrics/#svm_vol_other_ops","text":"Number of other operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_other_ops"},{"location":"ontap-metrics/#svm_vol_read_data","text":"Bytes read per second API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm bytes_read Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_read_data"},{"location":"ontap-metrics/#svm_vol_read_latency","text":"Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_read_latency"},{"location":"ontap-metrics/#svm_vol_read_ops","text":"Number of read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_read_ops"},{"location":"ontap-metrics/#svm_vol_total_ops","text":"Number of operations per second serviced by the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_total_ops"},{"location":"ontap-metrics/#svm_vol_write_data","text":"Bytes written per second API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm bytes_written Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_write_data"},{"location":"ontap-metrics/#svm_vol_write_latency","text":"Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_write_latency"},{"location":"ontap-metrics/#svm_vol_write_ops","text":"Number of write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume:svm total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume_svm.yaml ZAPI perf-object-get-instances volume:vserver write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume_svm.yaml","title":"svm_vol_write_ops"},{"location":"ontap-metrics/#svm_vscan_connections_active","text":"Total number of current active connections API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan connections_active Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml","title":"svm_vscan_connections_active"},{"location":"ontap-metrics/#svm_vscan_dispatch_latency","text":"Average dispatch latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan dispatch_latency Unit: microsec Type: average Base: dispatch_latency_base conf/zapiperf/cdot/9.8.0/vscan_svm.yaml","title":"svm_vscan_dispatch_latency"},{"location":"ontap-metrics/#svm_vscan_scan_latency","text":"Average scan latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_latency Unit: microsec Type: average Base: scan_latency_base conf/zapiperf/cdot/9.8.0/vscan_svm.yaml","title":"svm_vscan_scan_latency"},{"location":"ontap-metrics/#svm_vscan_scan_noti_received_rate","text":"Total number of scan notifications received by the dispatcher per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_noti_received_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml","title":"svm_vscan_scan_noti_received_rate"},{"location":"ontap-metrics/#svm_vscan_scan_request_dispatched_rate","text":"Total number of scan requests sent to the Vscanner per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan scan_request_dispatched_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan_svm.yaml","title":"svm_vscan_scan_request_dispatched_rate"},{"location":"ontap-metrics/#token_copy_bytes","text":"Total number of bytes copied. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_copy_bytes"},{"location":"ontap-metrics/#token_copy_failure","text":"Number of failed token copy requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_copy_failure"},{"location":"ontap-metrics/#token_copy_success","text":"Number of successful token copy requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_copy.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_copy_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_copy_success"},{"location":"ontap-metrics/#token_create_bytes","text":"Total number of bytes for which tokens are created. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_create_bytes"},{"location":"ontap-metrics/#token_create_failure","text":"Number of failed token create requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_create_failure"},{"location":"ontap-metrics/#token_create_success","text":"Number of successful token create requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_create.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_create_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_create_success"},{"location":"ontap-metrics/#token_zero_bytes","text":"Total number of bytes zeroed. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.bytes Unit: none Type: rate Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_bytes Unit: none Type: rate Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_zero_bytes"},{"location":"ontap-metrics/#token_zero_failure","text":"Number of failed token zero requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.failures Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_failure Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_zero_failure"},{"location":"ontap-metrics/#token_zero_success","text":"Number of successful token zero requests. API Endpoint Metric Template REST api/cluster/counter/tables/token_manager token_zero.successes Unit: none Type: delta Base: conf/restperf/9.12.0/token_manager.yaml ZAPI perf-object-get-instances token_manager token_zero_success Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/token_manager.yaml","title":"token_zero_success"},{"location":"ontap-metrics/#volume_autosize_grow_threshold_percent","text":"Used space threshold size, in percentage, for the automatic growth of the volume. When the amount of used space in the volume becomes greater than this threhold, the volume automatically grows unless it has reached the maximum size. The volume grows when 'space.used' is greater than this percent of 'space.size'. The 'grow_threshold' size cannot be less than or equal to the 'shrink_threshold' size.. API Endpoint Metric Template REST api/storage/volumes autosize.grow_threshold conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-autosize-attributes.grow-threshold-percent conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_autosize_grow_threshold_percent"},{"location":"ontap-metrics/#volume_autosize_maximum_size","text":"Maximum size in bytes up to which a volume grows automatically. This size cannot be less than the current volume size, or less than or equal to the minimum size of volume. API Endpoint Metric Template REST api/storage/volumes autosize.maximum conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-autosize-attributes.maximum-size conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_autosize_maximum_size"},{"location":"ontap-metrics/#volume_avg_latency","text":"Average latency in microseconds for the WAFL filesystem to process all the operations on the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume average_latency Unit: microsec Type: average Base: total_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume avg_latency Unit: microsec Type: average Base: total_ops conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_avg_latency"},{"location":"ontap-metrics/#volume_filesystem_size","text":"Total usable size of the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.filesystem_size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.filesystem-size conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_filesystem_size"},{"location":"ontap-metrics/#volume_inode_files_total","text":"Total user-visible file (inode) count, i.e., current maximum number of user-visible files (inodes) that this volume can currently hold. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-inode-attributes.files-total conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume files conf/rest/9.12.0/volume.yaml","title":"volume_inode_files_total"},{"location":"ontap-metrics/#volume_inode_files_used","text":"Number of user-visible files (inodes) used. This field is valid only when the volume is online. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-inode-attributes.files-used conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume files_used conf/rest/9.12.0/volume.yaml","title":"volume_inode_files_used"},{"location":"ontap-metrics/#volume_inode_used_percent","text":"volume_inode_files_used / volume_inode_total API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_inode_used_percent"},{"location":"ontap-metrics/#volume_other_latency","text":"Average latency in microseconds for the WAFL filesystem to process other operations to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume other_latency Unit: microsec Type: average Base: total_other_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume other_latency Unit: microsec Type: average Base: other_ops conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_other_latency"},{"location":"ontap-metrics/#volume_other_ops","text":"Number of other operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_other_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume other_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_other_ops"},{"location":"ontap-metrics/#volume_overwrite_reserve_available","text":"amount of storage space that is currently available for overwrites, calculated by subtracting the total amount of overwrite reserve space from the amount that has already been used. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_overwrite_reserve_available"},{"location":"ontap-metrics/#volume_overwrite_reserve_total","text":"Reserved space for overwrites, in bytes. API Endpoint Metric Template REST api/storage/volumes space.overwrite_reserve conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.overwrite-reserve conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_overwrite_reserve_total"},{"location":"ontap-metrics/#volume_overwrite_reserve_used","text":"Overwrite logical reserve space used, in bytes. API Endpoint Metric Template REST api/storage/volumes space.overwrite_reserve_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.overwrite-reserve-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_overwrite_reserve_used"},{"location":"ontap-metrics/#volume_read_data","text":"Bytes read per second API Endpoint Metric Template REST api/cluster/counter/tables/volume bytes_read Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_read_data"},{"location":"ontap-metrics/#volume_read_latency","text":"Average latency in microseconds for the WAFL filesystem to process read request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume read_latency Unit: microsec Type: average Base: total_read_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_latency Unit: microsec Type: average Base: read_ops conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_read_latency"},{"location":"ontap-metrics/#volume_read_ops","text":"Number of read operations per second from the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_read_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume read_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_read_ops"},{"location":"ontap-metrics/#volume_sis_compress_saved","text":"The total disk space (in bytes) that is saved by compressing blocks on the referenced file system. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.compression-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume compression_space_saved conf/rest/9.12.0/volume.yaml","title":"volume_sis_compress_saved"},{"location":"ontap-metrics/#volume_sis_compress_saved_percent","text":"Percentage of the total disk space that is saved by compressing blocks on the referenced file system API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-compression-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume compression_space_saved_percent conf/rest/9.12.0/volume.yaml","title":"volume_sis_compress_saved_percent"},{"location":"ontap-metrics/#volume_sis_dedup_saved","text":"The total disk space (in bytes) that is saved by deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.deduplication-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume dedupe_space_saved conf/rest/9.12.0/volume.yaml","title":"volume_sis_dedup_saved"},{"location":"ontap-metrics/#volume_sis_dedup_saved_percent","text":"Percentage of the total disk space that is saved by deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-deduplication-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume dedupe_space_saved_percent conf/rest/9.12.0/volume.yaml","title":"volume_sis_dedup_saved_percent"},{"location":"ontap-metrics/#volume_sis_total_saved","text":"Total space saved (in bytes) in the volume due to deduplication, compression, and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.total-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume sis_space_saved conf/rest/9.12.0/volume.yaml","title":"volume_sis_total_saved"},{"location":"ontap-metrics/#volume_sis_total_saved_percent","text":"Percentage of total disk space that is saved by compressing blocks, deduplication and file cloning. API Endpoint Metric Template ZAPI volume-get-iter volume-attributes.volume-sis-attributes.percentage-total-space-saved conf/zapi/cdot/9.8.0/volume.yaml REST api/private/cli/volume sis_space_saved_percent conf/rest/9.12.0/volume.yaml","title":"volume_sis_total_saved_percent"},{"location":"ontap-metrics/#volume_size","text":"Total provisioned size. The default size is equal to the minimum size of 20MB, in bytes. API Endpoint Metric Template REST api/storage/volumes space.size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_size"},{"location":"ontap-metrics/#volume_size_available","text":"The available space, in bytes. API Endpoint Metric Template REST api/storage/volumes space.available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-available conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_size_available"},{"location":"ontap-metrics/#volume_size_total","text":"Total size of AFS, excluding snap-reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.afs_total conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-total conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_size_total"},{"location":"ontap-metrics/#volume_size_used","text":"The virtual space used (includes volume reserves) before storage efficiency, in bytes. API Endpoint Metric Template REST api/storage/volumes space.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_size_used"},{"location":"ontap-metrics/#volume_size_used_percent","text":"percentage of utilized storage space in a volume relative to its total capacity API Endpoint Metric Template REST api/storage/volumes space.percent_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-size-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_size_used_percent"},{"location":"ontap-metrics/#volume_snapshot_count","text":"Number of Snapshot copies in the volume. API Endpoint Metric Template REST api/storage/volumes snapshot_count conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-snapshot-attributes.snapshot-count conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_count"},{"location":"ontap-metrics/#volume_snapshot_reserve_available","text":"Size available for Snapshot copies within the Snapshot copy reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.snapshot-reserve-available conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_reserve_available"},{"location":"ontap-metrics/#volume_snapshot_reserve_percent","text":"The space that has been set aside as a reserve for Snapshot copy usage, in percent. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-snapshot-reserve conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_reserve_percent"},{"location":"ontap-metrics/#volume_snapshot_reserve_size","text":"Size in the volume that has been set aside as a reserve for Snapshot copy usage, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.reserve_size conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.snapshot-reserve-size conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_reserve_size"},{"location":"ontap-metrics/#volume_snapshot_reserve_used","text":"amount of storage space currently used by a volume's snapshot reserve, which is calculated by subtracting the snapshot reserve available space from the snapshot reserve size. API Endpoint Metric Template REST NA Harvest generated conf/rest/9.12.0/volume.yaml ZAPI NA Harvest generated conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_reserve_used"},{"location":"ontap-metrics/#volume_snapshot_reserve_used_percent","text":"Percentage of snapshot reserve size that has been used. API Endpoint Metric Template REST api/storage/volumes space.snapshot.space_used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.percentage-snapshot-reserve-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshot_reserve_used_percent"},{"location":"ontap-metrics/#volume_snapshots_size_available","text":"Available space for Snapshot copies from snap-reserve, in bytes. API Endpoint Metric Template REST api/storage/volumes space.size_available_for_snapshots conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-available-for-snapshots conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshots_size_available"},{"location":"ontap-metrics/#volume_snapshots_size_used","text":"The total space used by Snapshot copies in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.snapshot.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.size-used-by-snapshots conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_snapshots_size_used"},{"location":"ontap-metrics/#volume_space_expected_available","text":"Size that should be available for the volume, irrespective of available size in the aggregate, in bytes. API Endpoint Metric Template REST api/storage/volumes space.expected_available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.expected-available conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_expected_available"},{"location":"ontap-metrics/#volume_space_logical_available","text":"The amount of space available in this volume with storage efficiency space considered used, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.available conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-available conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_logical_available"},{"location":"ontap-metrics/#volume_space_logical_used","text":"SUM of (physical-used, shared_refs, compression_saved_in_plane0, vbn_zero, future_blk_cnt), in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_logical_used"},{"location":"ontap-metrics/#volume_space_logical_used_by_afs","text":"The virtual space used by AFS alone (includes volume reserves) and along with storage efficiency, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_by_afs conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-by-afs conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_logical_used_by_afs"},{"location":"ontap-metrics/#volume_space_logical_used_by_snapshots","text":"Size that is logically used across all Snapshot copies in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_by_snapshots conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-by-snapshots conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_logical_used_by_snapshots"},{"location":"ontap-metrics/#volume_space_logical_used_percent","text":"SUM of (physical-used, shared_refs, compression_saved_in_plane0, vbn_zero, future_blk_cnt), as a percentage. API Endpoint Metric Template REST api/storage/volumes space.logical_space.used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.logical-used-percent conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_logical_used_percent"},{"location":"ontap-metrics/#volume_space_physical_used","text":"Size that is physically used in the volume, in bytes. API Endpoint Metric Template REST api/storage/volumes space.physical_used conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.physical-used conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_physical_used"},{"location":"ontap-metrics/#volume_space_physical_used_percent","text":"Size that is physically used in the volume, as a percentage. API Endpoint Metric Template REST api/storage/volumes space.physical_used_percent conf/rest/9.12.0/volume.yaml ZAPI volume-get-iter volume-attributes.volume-space-attributes.physical-used-percent conf/zapi/cdot/9.8.0/volume.yaml","title":"volume_space_physical_used_percent"},{"location":"ontap-metrics/#volume_total_ops","text":"Number of operations per second serviced by the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume total_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_total_ops"},{"location":"ontap-metrics/#volume_write_data","text":"Bytes written per second API Endpoint Metric Template REST api/cluster/counter/tables/volume bytes_written Unit: b_per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_data Unit: b_per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_write_data"},{"location":"ontap-metrics/#volume_write_latency","text":"Average latency in microseconds for the WAFL filesystem to process write request to the volume; not including request processing or network communication time API Endpoint Metric Template REST api/cluster/counter/tables/volume write_latency Unit: microsec Type: average Base: total_write_ops conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_latency Unit: microsec Type: average Base: write_ops conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_write_latency"},{"location":"ontap-metrics/#volume_write_ops","text":"Number of write operations per second to the volume API Endpoint Metric Template REST api/cluster/counter/tables/volume total_write_ops Unit: per_sec Type: rate Base: conf/restperf/9.12.0/volume.yaml ZAPI perf-object-get-instances volume write_ops Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/volume.yaml","title":"volume_write_ops"},{"location":"ontap-metrics/#vscan_scan_latency","text":"Average scan latency API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scan_latency Unit: microsec Type: average Base: scan_latency_base conf/zapiperf/cdot/9.8.0/vscan.yaml","title":"vscan_scan_latency"},{"location":"ontap-metrics/#vscan_scan_request_dispatched_rate","text":"Total number of scan requests sent to the Vscanner per second API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scan_request_dispatched_rate Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/vscan.yaml","title":"vscan_scan_request_dispatched_rate"},{"location":"ontap-metrics/#vscan_scanner_stats_pct_cpu_used","text":"Percentage CPU utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_cpu_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml","title":"vscan_scanner_stats_pct_cpu_used"},{"location":"ontap-metrics/#vscan_scanner_stats_pct_mem_used","text":"Percentage RAM utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_mem_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml","title":"vscan_scanner_stats_pct_mem_used"},{"location":"ontap-metrics/#vscan_scanner_stats_pct_network_used","text":"Percentage network utilization on scanner API Endpoint Metric Template ZAPI perf-object-get-instances offbox_vscan_server scanner_stats_pct_network_used Unit: none Type: raw Base: conf/zapiperf/cdot/9.8.0/vscan.yaml","title":"vscan_scanner_stats_pct_network_used"},{"location":"ontap-metrics/#wafl_avg_msg_latency","text":"Average turnaround time for WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_msg_latency Unit: millisec Type: average Base: msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_wafl_msg_latency Unit: millisec Type: average Base: wafl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_avg_msg_latency"},{"location":"ontap-metrics/#wafl_avg_non_wafl_msg_latency","text":"Average turnaround time for non-WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_non_wafl_msg_latency Unit: millisec Type: average Base: non_wafl_msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_non_wafl_msg_latency Unit: millisec Type: average Base: non_wafl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_avg_non_wafl_msg_latency"},{"location":"ontap-metrics/#wafl_avg_repl_msg_latency","text":"Average turnaround time for replication WAFL messages in milliseconds. API Endpoint Metric Template REST api/cluster/counter/tables/wafl average_replication_msg_latency Unit: millisec Type: average Base: replication_msg_total conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl avg_wafl_repl_msg_latency Unit: millisec Type: average Base: wafl_repl_msg_total conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_avg_repl_msg_latency"},{"location":"ontap-metrics/#wafl_cp_count","text":"Array of counts of different types of Consistency Points (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl cp_count Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl cp_count Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_cp_count"},{"location":"ontap-metrics/#wafl_cp_phase_times","text":"Array of percentage time spent in different phases of Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl cp_phase_times Unit: percent Type: percent Base: total_cp_msecs conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl cp_phase_times Unit: percent Type: percent Base: total_cp_msecs conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_cp_phase_times"},{"location":"ontap-metrics/#wafl_memory_free","text":"The current WAFL memory available in the system. API Endpoint Metric Template REST api/cluster/counter/tables/wafl memory_free Unit: mb Type: raw Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_memory_free Unit: mb Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_memory_free"},{"location":"ontap-metrics/#wafl_memory_used","text":"The current WAFL memory used in the system. API Endpoint Metric Template REST api/cluster/counter/tables/wafl memory_used Unit: mb Type: raw Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_memory_used Unit: mb Type: raw Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_memory_used"},{"location":"ontap-metrics/#wafl_msg_total","text":"Total number of WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_msg_total"},{"location":"ontap-metrics/#wafl_non_wafl_msg_total","text":"Total number of non-WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl non_wafl_msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl non_wafl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_non_wafl_msg_total"},{"location":"ontap-metrics/#wafl_read_io_type","text":"Percentage of reads served from buffer cache, external cache, or disk. API Endpoint Metric Template REST api/cluster/counter/tables/wafl read_io_type Unit: percent Type: percent Base: read_io_type_base conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl read_io_type Unit: percent Type: percent Base: read_io_type_base conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_read_io_type"},{"location":"ontap-metrics/#wafl_reads_from_cache","text":"WAFL reads from cache. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cache Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cache Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_cache"},{"location":"ontap-metrics/#wafl_reads_from_cloud","text":"WAFL reads from cloud storage. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cloud Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cloud Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_cloud"},{"location":"ontap-metrics/#wafl_reads_from_cloud_s2c_bin","text":"WAFL reads from cloud storage via s2c bin. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_cloud_s2c_bin Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_cloud_s2c_bin Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_cloud_s2c_bin"},{"location":"ontap-metrics/#wafl_reads_from_disk","text":"WAFL reads from disk. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_disk Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_disk Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_disk"},{"location":"ontap-metrics/#wafl_reads_from_ext_cache","text":"WAFL reads from external cache. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_external_cache Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_ext_cache Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_ext_cache"},{"location":"ontap-metrics/#wafl_reads_from_fc_miss","text":"WAFL reads from remote volume for fc_miss. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_fc_miss Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_fc_miss Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_fc_miss"},{"location":"ontap-metrics/#wafl_reads_from_pmem","text":"Wafl reads from persistent mmeory. API Endpoint Metric Template ZAPI perf-object-get-instances wafl wafl_reads_from_pmem Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_pmem"},{"location":"ontap-metrics/#wafl_reads_from_ssd","text":"WAFL reads from SSD. API Endpoint Metric Template REST api/cluster/counter/tables/wafl reads_from_ssd Unit: none Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_reads_from_ssd Unit: none Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_reads_from_ssd"},{"location":"ontap-metrics/#wafl_repl_msg_total","text":"Total number of replication WAFL messages per second. API Endpoint Metric Template REST api/cluster/counter/tables/wafl replication_msg_total Unit: per_sec Type: rate Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl wafl_repl_msg_total Unit: per_sec Type: rate Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_repl_msg_total"},{"location":"ontap-metrics/#wafl_total_cp_msecs","text":"Milliseconds spent in Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl total_cp_msecs Unit: millisec Type: delta Base: conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl total_cp_msecs Unit: millisec Type: delta Base: conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_total_cp_msecs"},{"location":"ontap-metrics/#wafl_total_cp_util","text":"Percentage of time spent in a Consistency Point (CP). API Endpoint Metric Template REST api/cluster/counter/tables/wafl total_cp_util Unit: percent Type: percent Base: cpu_elapsed_time conf/restperf/9.12.0/wafl.yaml ZAPI perf-object-get-instances wafl total_cp_util Unit: percent Type: percent Base: cpu_elapsed_time conf/zapiperf/cdot/9.8.0/wafl.yaml","title":"wafl_total_cp_util"},{"location":"plugins/","text":"Built-in Plugins \u00b6 The plugin feature allows users to manipulate and customize data collected by collectors without changing the collectors. Plugins have the same capabilities as collectors and therefore can collect data on their own as well. Furthermore, multiple plugins can be put in a pipeline to perform more complex operations. Harvest architecture defines three types of plugins: built-in generic - Statically compiled, generic plugins. \"Generic\" means the plugin is collector-agnostic. These plugins are provided in this package. dynamic-generic - These are generic plugins as well, but they are compiled as shared objects and dynamically loaded. These plugins are living in the directory src/plugins. dynamic-custom - These plugins are collector-specific. Their source code should reside inside the plugins/ subdirectory of the collector package. Custom plugins have access to all the parameters of their parent collector and should be therefore treated with great care. This documentation gives an overview of builtin plugins. For other plugins, see their respective documentation. For writing your own plugin, see Developer's documentation. Note: the rules are executed in the same order as you've added them. Aggregator \u00b6 Aggregator creates a new collection of metrics (Matrix) by summarizing and/or averaging metric values from an existing Matrix for a given label. For example, if the collected metrics are for volumes, you can create an aggregation for nodes or svms. Rule syntax \u00b6 simplest case: plugins : Aggregator : - LABEL # will aggregate a new Matrix based on target label LABEL If you want to specify which labels should be included in the new instances, you can add those space-seperated after LABEL : - LABEL LABEL1,LABEL2 # same, but LABEL1 and LABEL2 will be copied into the new instances # (default is to only copy LABEL and any global labels (such as cluster and datacenter) Or include all labels: - LABEL ... # copy all labels of the original instance By default, aggregated metrics will be prefixed with LABEL . For example if the object of the original Matrix is volume (meaning metrics are prefixed with volume_ ) and LABEL is aggr , then the metric volume_read_ops will become aggr_volume_read_ops , etc. You can override this by providing the <>OBJ using the following syntax: - LABEL<>OBJ # use OBJ as the object of the new matrix, e.g. if the original object is \"volume\" and you # want to leave metric names unchanged, use \"volume\" Finally, sometimes you only want to aggregate instances with a specific label value. You can use <VALUE> for that ( optionally follow by OBJ ): - LABEL<VALUE> # aggregate all instances if LABEL has value VALUE - LABEL<`VALUE`> # same, but VALUE is regular expression - LABEL<LABELX=`VALUE`> # same, but check against \"LABELX\" (instead of \"LABEL\") Examples: plugins : Aggregator : # will aggregate metrics of the aggregate. The labels \"node\" and \"type\" are included in the new instances - aggr node type # aggregate instances if label \"type\" has value \"flexgroup\" # include all original labels - type<flexgroup> ... # aggregate all instances if value of \"volume\" ends with underscore and 4 digits - volume<`_\\d{4}$`> Aggregation rules \u00b6 The plugin tries to intelligently aggregate metrics based on a few rules: Sum - the default rule, if no other rules apply Average - if any of the following is true: metric name has suffix _percent or _percentage metric name has prefix average_ or avg_ metric has property ( metric.GetProperty() ) percent or average Weighted Average - applied if metric has property average and suffix _latency and if there is a matching _ops metric. (This is currently only matching to ZapiPerf metrics, which use the Property field of metrics.) Ignore - metrics created by some plugins, such as value_to_num by LabelAgent Max \u00b6 Max creates a new collection of metrics (Matrix) by calculating max of metric values from an existing Matrix for a given label. For example, if the collected metrics are for disks, you can create max at the node or aggregate level. Refer Max Examples for more details. Max Rule syntax \u00b6 simplest case: plugins : Max : - LABEL # create a new Matrix of max values on target label LABEL If you want to specify which labels should be included in the new instances, you can add those space-seperated after LABEL : - LABEL LABEL1,LABEL2 # similar to the above example, but LABEL1 and LABEL2 will be copied into the new instances # (default is to only copy LABEL and all global labels (such as cluster and datacenter) Or include all labels: - LABEL ... # copy all labels of the original instance By default, metrics will be prefixed with LABEL . For example if the object of the original Matrix is volume (meaning metrics are prefixed with volume_ ) and LABEL is aggr , then the metric volume_read_ops will become aggr_volume_read_ops . You can override this using the <>OBJ pattern shown below: - LABEL<>OBJ # use OBJ as the object of the new matrix, e.g. if the original object is \"volume\" and you # want to leave metric names unchanged, use \"volume\" Finally, sometimes you only want to generate instances with a specific label value. You can use <VALUE> for that ( optionally followed by OBJ ): - LABEL<VALUE> # aggregate all instances if LABEL has value VALUE - LABEL<`VALUE`> # same, but VALUE is regular expression - LABEL<LABELX=`VALUE`> # same, but check against \"LABELX\" (instead of \"LABEL\") Max Examples \u00b6 plugins : Max : # will create max of each aggregate metric. All metrics will be prefixed with aggr_disk_max. All labels are included in the new instances - aggr<>aggr_disk_max ... # calculate max instances if label \"disk\" has value \"1.1.0\". Prefix with disk_max # include all original labels - disk<1.1.0>disk_max ... # max of all instances if value of \"volume\" ends with underscore and 4 digits - volume<`_\\d{4}$`> LabelAgent \u00b6 LabelAgent are used to manipulate instance labels based on rules. You can define multiple rules, here is an example of what you could add to the yaml file of a collector: plugins : LabelAgent : # our rules: split : node `/` ,aggr,plex,disk replace_regex : node node `^(node)_(\\d+)_.*$` `Node-$2` Note: Labels for creating new label should use name defined in right side of =>. If not present then left side of => is used. split \u00b6 Rule syntax: split : - LABEL `SEP` LABEL1,LABEL2,LABEL3 # source label - separator - comma-seperated target labels Splits the value of a given label by separator SEP and creates new labels if their number matches to the number of target labels defined in rule. To discard a subvalue, just add a redundant , in the names of the target labels. Example: split : - node `/` ,aggr,plex,disk # will split the value of \"node\" using separator \"/\" # will expect 4 values: first will be discarded, remaining # three will be stored as labels \"aggr\", \"plex\" and \"disk\" split_regex \u00b6 Does the same as split but uses a regular expression instead of a separator. Rule syntax: split_regex : - LABEL `REGEX` LABEL1,LABEL2,LABEL3 Example: split_regex : - node `.*_(ag\\d+)_(p\\d+)_(d\\d+)` aggr,plex,disk # will look for \"_ag\", \"_p\", \"_d\", each followed by one # or more numbers, if there is a match, the submatches # will be stored as \"aggr\", \"plex\" and \"disk\" split_pairs \u00b6 Rule syntax: split_pairs : - LABEL `SEP1` `SEP2` # source label - pair separator - key-value separator Extracts key-value pairs from the value of source label LABEL . Note that you need to add these keys in the export options, otherwise they will not be exported. Example: split_pairs : - comment ` ` `:` # will split pairs using a single space and split key-values using colon # e.g. if comment=\"owner:jack contact:some@email\", the result wll be # two new labels: owner=\"jack\" and contact=\"some@email\" join \u00b6 Join multiple label values using separator SEP and create a new label. Rule syntax: join : - LABEL `SEP` LABEL1,LABEL2,LABEL3 # target label - separator - comma-seperated source labels Example: join : - plex_long `_` aggr,plex # will look for the values of labels \"aggr\" and \"plex\", # if they are set, a new \"plex_long\" label will be added # by joining their values with \"_\" replace \u00b6 Substitute substring OLD with NEW in label SOURCE and store in TARGET . Note that target and source labels can be the same. Rule syntax: replace : - SOURCE TARGET `OLD` `NEW` # source label - target label - substring to replace - replace with Example: replace : - node node_short `node_` `` # this rule will just remove \"node_\" from all values of label # \"node\". E.g. if label is \"node_jamaica1\", it will rewrite it # as \"jamaica1\" replace_regex \u00b6 Same as replace , but will use a regular expression instead of OLD . Note you can use $n to specify n th submatch in NEW . Rule syntax: replace_regex : - SOURCE TARGET `REGEX` `NEW` # source label - target label - substring to replace - replace with Example: replace_regex : - node node `^(node)_(\\d+)_.*$` `Node-$2` # if there is a match, will capitalize \"Node\" and remove suffixes. # E.g. if label is \"node_10_dc2\", it will rewrite it as # will rewrite it as \"Node-10\" exclude_equals \u00b6 Exclude each instance, if the value of LABEL is exactly VALUE . Exclude means that metrics for this instance will not be exported. Rule syntax: exclude_equals : - LABEL `VALUE` # label name - label value Example: exclude_equals : - vol_type `flexgroup_constituent` # all instances, which have label \"vol_type\" with value # \"flexgroup_constituent\" will not be exported exclude_contains \u00b6 Same as exclude_equals , but all labels that contain VALUE will be excluded Rule syntax: exclude_contains : - LABEL `VALUE` # label name - label value Example: exclude_contains : - vol_type `flexgroup_` # all instances, which have label \"vol_type\" which contain # \"flexgroup_\" will not be exported exclude_regex \u00b6 Same as exclude_equals , but will use a regular expression and all matching instances will be excluded. Rule syntax: exclude_regex : - LABEL `REGEX` # label name - regular expression Example: exclude_regex : - vol_type `^flex` # all instances, which have label \"vol_type\" which starts with # \"flex\" will not be exported include_equals \u00b6 Include each instance, if the value of LABEL is exactly VALUE . Include means that metrics for this instance will be exported and instances that do not match will not be exported. Rule syntax: include_equals : - LABEL `VALUE` # label name - label value Example: include_equals : - vol_type `flexgroup_constituent` # all instances, which have label \"vol_type\" with value # \"flexgroup_constituent\" will be exported include_contains \u00b6 Same as include_equals , but all labels that contain VALUE will be included Rule syntax: include_contains : - LABEL `VALUE` # label name - label value Example: include_contains : - vol_type `flexgroup_` # all instances, which have label \"vol_type\" which contain # \"flexgroup_\" will be exported include_regex \u00b6 Same as include_equals , but a regular expression will be used for inclusion. Similar to the other includes, all matching instances will be included and all non-matching will not be exported. Rule syntax: include_regex : - LABEL `REGEX` # label name - regular expression Example: include_regex : - vol_type `^flex` # all instances, which have label \"vol_type\" which starts with # \"flex\" will be exported value_mapping \u00b6 value_mapping was deprecated in 21.11 and removed in 22.02. Use value_to_num mapping instead. value_to_num \u00b6 Map values of a given label to a numeric metric (of type uint8 ). This rule maps values of a given label to a numeric metric (of type unit8 ). Healthy is mapped to 1 and all non-healthy values are mapped to 0. This is handy to manipulate the data in the DB or Grafana (e.g. change color based on status or create alert). Note that you don't define the numeric values yourself, instead, you only provide the possible (expected) values, the plugin will map each value to its index in the rule. Rule syntax: value_to_num : - METRIC LABEL ZAPI_VALUE REST_VALUE `N` # map values of LABEL to 1 if it is ZAPI_VALUE or REST_VALUE # otherwise, value of METRIC is set to N The default value N is optional, if no default value is given and the label value does not match any of the given values, the metric value will not be set. Examples: value_to_num : - status state up online `0` # a new metric will be created with the name \"status\" # if an instance has label \"state\" with value \"up\", the metric value will be 1, # if it's \"online\", the value will be set to 1, # if it's any other value, it will be set to the specified default, 0 value_to_num : - status state up online `4` # metric value will be set to 1 if \"state\" is \"up\", otherwise to **4** value_to_num : - status outage - - `0` #ok_value is empty value. # metric value will be set to 1 if \"outage\" is empty, if it's any other value, it will be set to the default, 0 # '-' is a special symbol in this mapping, and it will be converted to blank while processing. value_to_num_regex \u00b6 Same as value_to_num, but will use a regular expression. All matches are mapped to 1 and non-matches are mapped to 0. This is handy to manipulate the data in the DB or Grafana (e.g. change color based on status or create alert). Note that you don't define the numeric values, instead, you provide the expected values and the plugin will map each value to its index in the rule. Rule syntax: value_to_num_regex : - METRIC LABEL ZAPI_REGEX REST_REGEX `N` # map values of LABEL to 1 if it matches ZAPI_REGEX or REST_REGEX # otherwise, value of METRIC is set to N The default value N is optional, if no default value is given and the label value does not match any of the given values, the metric value will not be set. Examples: value_to_num_regex : - certificateuser methods .*cert.*$ .*certificate.*$ `0` # a new metric will be created with the name \"certificateuser\" # if an instance has label \"methods\" with value contains \"cert\", the metric value will be 1, # if value contains \"certificate\", the value will be set to 1, # if value doesn't contain \"cert\" and \"certificate\", it will be set to the specified default, 0 value_to_num_regex : - status state ^up$ ^ok$ `4` # metric value will be set to 1 if label \"state\" matches regex, otherwise set to **4** MetricAgent \u00b6 MetricAgent are used to manipulate metrics based on rules. You can define multiple rules, here is an example of what you could add to the yaml file of a collector: plugins : MetricAgent : compute_metric : - snapshot_maxfiles_possible ADD snapshot.max_files_available snapshot.max_files_used - raid_disk_count ADD block_storage.primary.disk_count block_storage.hybrid_cache.disk_count Note: Metric names used to create new metrics can come from the left or right side of the rename operator ( => ) Note: The metric agent currently does not work for histogram or array metrics. compute_metric \u00b6 This rule creates a new metric (of type float64) using the provided scalar or an existing metric value combined with a mathematical operation. You can provide a numeric value or a metric name with an operation. The plugin will use the provided number or fetch the value of a given metric, perform the requested mathematical operation, and store the result in new custom metric. Currently, we support these operations: ADD SUBTRACT MULTIPLY DIVIDE PERCENT Rule syntax: compute_metric : - METRIC OPERATION METRIC1 METRIC2 METRIC3 # target new metric - mathematical operation - input metric names # apply OPERATION on metric values of METRIC1, METRIC2 and METRIC3 and set result in METRIC # METRIC1, METRIC2, METRIC3 can be a scalar or an existing metric name. Examples: compute_metric : - space_total ADD space_available space_used # a new metric will be created with the name \"space_total\" # if an instance has metric \"space_available\" with value \"1000\", and \"space_used\" with value \"400\", # the result value will be \"1400\" and set to metric \"space_total\". compute_metric : - disk_count ADD primary.disk_count secondary.disk_count hybrid.disk_count # value of metric \"disk_count\" would be addition of all the given disk_counts metric values. # disk_count = primary.disk_count + secondary.disk_count + hybrid.disk_count compute_metric : - files_available SUBTRACT files files_used # value of metric \"files_available\" would be subtraction of the metric value of files_used from metric value of files. # files_available = files - files_used compute_metric : - total_bytes MULTIPLY bytes_per_sector sector_count # value of metric \"total_bytes\" would be multiplication of metric value of bytes_per_sector and metric value of sector_count. # total_bytes = bytes_per_sector * sector_count compute_metric : - uptime MULTIPLY stats.power_on_hours 60 60 # value of metric \"uptime\" would be multiplication of metric value of stats.power_on_hours and scalar value of 60 * 60. # total_bytes = bytes_per_sector * sector_count compute_metric : - transmission_rate DIVIDE transfer.bytes_transferred transfer.total_duration # value of metric \"transmission_rate\" would be division of metric value of transfer.bytes_transferred by metric value of transfer.total_duration. # transmission_rate = transfer.bytes_transferred / transfer.total_duration compute_metric : - inode_used_percent PERCENT inode_files_used inode_files_total # a new metric named \"inode_used_percent\" will be created by dividing the metric \"inode_files_used\" by # \"inode_files_total\" and multiplying the result by 100. # inode_used_percent = inode_files_used / inode_files_total * 100","title":"Plugins"},{"location":"plugins/#built-in-plugins","text":"The plugin feature allows users to manipulate and customize data collected by collectors without changing the collectors. Plugins have the same capabilities as collectors and therefore can collect data on their own as well. Furthermore, multiple plugins can be put in a pipeline to perform more complex operations. Harvest architecture defines three types of plugins: built-in generic - Statically compiled, generic plugins. \"Generic\" means the plugin is collector-agnostic. These plugins are provided in this package. dynamic-generic - These are generic plugins as well, but they are compiled as shared objects and dynamically loaded. These plugins are living in the directory src/plugins. dynamic-custom - These plugins are collector-specific. Their source code should reside inside the plugins/ subdirectory of the collector package. Custom plugins have access to all the parameters of their parent collector and should be therefore treated with great care. This documentation gives an overview of builtin plugins. For other plugins, see their respective documentation. For writing your own plugin, see Developer's documentation. Note: the rules are executed in the same order as you've added them.","title":"Built-in Plugins"},{"location":"plugins/#aggregator","text":"Aggregator creates a new collection of metrics (Matrix) by summarizing and/or averaging metric values from an existing Matrix for a given label. For example, if the collected metrics are for volumes, you can create an aggregation for nodes or svms.","title":"Aggregator"},{"location":"plugins/#rule-syntax","text":"simplest case: plugins : Aggregator : - LABEL # will aggregate a new Matrix based on target label LABEL If you want to specify which labels should be included in the new instances, you can add those space-seperated after LABEL : - LABEL LABEL1,LABEL2 # same, but LABEL1 and LABEL2 will be copied into the new instances # (default is to only copy LABEL and any global labels (such as cluster and datacenter) Or include all labels: - LABEL ... # copy all labels of the original instance By default, aggregated metrics will be prefixed with LABEL . For example if the object of the original Matrix is volume (meaning metrics are prefixed with volume_ ) and LABEL is aggr , then the metric volume_read_ops will become aggr_volume_read_ops , etc. You can override this by providing the <>OBJ using the following syntax: - LABEL<>OBJ # use OBJ as the object of the new matrix, e.g. if the original object is \"volume\" and you # want to leave metric names unchanged, use \"volume\" Finally, sometimes you only want to aggregate instances with a specific label value. You can use <VALUE> for that ( optionally follow by OBJ ): - LABEL<VALUE> # aggregate all instances if LABEL has value VALUE - LABEL<`VALUE`> # same, but VALUE is regular expression - LABEL<LABELX=`VALUE`> # same, but check against \"LABELX\" (instead of \"LABEL\") Examples: plugins : Aggregator : # will aggregate metrics of the aggregate. The labels \"node\" and \"type\" are included in the new instances - aggr node type # aggregate instances if label \"type\" has value \"flexgroup\" # include all original labels - type<flexgroup> ... # aggregate all instances if value of \"volume\" ends with underscore and 4 digits - volume<`_\\d{4}$`>","title":"Rule syntax"},{"location":"plugins/#aggregation-rules","text":"The plugin tries to intelligently aggregate metrics based on a few rules: Sum - the default rule, if no other rules apply Average - if any of the following is true: metric name has suffix _percent or _percentage metric name has prefix average_ or avg_ metric has property ( metric.GetProperty() ) percent or average Weighted Average - applied if metric has property average and suffix _latency and if there is a matching _ops metric. (This is currently only matching to ZapiPerf metrics, which use the Property field of metrics.) Ignore - metrics created by some plugins, such as value_to_num by LabelAgent","title":"Aggregation rules"},{"location":"plugins/#max","text":"Max creates a new collection of metrics (Matrix) by calculating max of metric values from an existing Matrix for a given label. For example, if the collected metrics are for disks, you can create max at the node or aggregate level. Refer Max Examples for more details.","title":"Max"},{"location":"plugins/#max-rule-syntax","text":"simplest case: plugins : Max : - LABEL # create a new Matrix of max values on target label LABEL If you want to specify which labels should be included in the new instances, you can add those space-seperated after LABEL : - LABEL LABEL1,LABEL2 # similar to the above example, but LABEL1 and LABEL2 will be copied into the new instances # (default is to only copy LABEL and all global labels (such as cluster and datacenter) Or include all labels: - LABEL ... # copy all labels of the original instance By default, metrics will be prefixed with LABEL . For example if the object of the original Matrix is volume (meaning metrics are prefixed with volume_ ) and LABEL is aggr , then the metric volume_read_ops will become aggr_volume_read_ops . You can override this using the <>OBJ pattern shown below: - LABEL<>OBJ # use OBJ as the object of the new matrix, e.g. if the original object is \"volume\" and you # want to leave metric names unchanged, use \"volume\" Finally, sometimes you only want to generate instances with a specific label value. You can use <VALUE> for that ( optionally followed by OBJ ): - LABEL<VALUE> # aggregate all instances if LABEL has value VALUE - LABEL<`VALUE`> # same, but VALUE is regular expression - LABEL<LABELX=`VALUE`> # same, but check against \"LABELX\" (instead of \"LABEL\")","title":"Max Rule syntax"},{"location":"plugins/#max-examples","text":"plugins : Max : # will create max of each aggregate metric. All metrics will be prefixed with aggr_disk_max. All labels are included in the new instances - aggr<>aggr_disk_max ... # calculate max instances if label \"disk\" has value \"1.1.0\". Prefix with disk_max # include all original labels - disk<1.1.0>disk_max ... # max of all instances if value of \"volume\" ends with underscore and 4 digits - volume<`_\\d{4}$`>","title":"Max Examples"},{"location":"plugins/#labelagent","text":"LabelAgent are used to manipulate instance labels based on rules. You can define multiple rules, here is an example of what you could add to the yaml file of a collector: plugins : LabelAgent : # our rules: split : node `/` ,aggr,plex,disk replace_regex : node node `^(node)_(\\d+)_.*$` `Node-$2` Note: Labels for creating new label should use name defined in right side of =>. If not present then left side of => is used.","title":"LabelAgent"},{"location":"plugins/#split","text":"Rule syntax: split : - LABEL `SEP` LABEL1,LABEL2,LABEL3 # source label - separator - comma-seperated target labels Splits the value of a given label by separator SEP and creates new labels if their number matches to the number of target labels defined in rule. To discard a subvalue, just add a redundant , in the names of the target labels. Example: split : - node `/` ,aggr,plex,disk # will split the value of \"node\" using separator \"/\" # will expect 4 values: first will be discarded, remaining # three will be stored as labels \"aggr\", \"plex\" and \"disk\"","title":"split"},{"location":"plugins/#split_regex","text":"Does the same as split but uses a regular expression instead of a separator. Rule syntax: split_regex : - LABEL `REGEX` LABEL1,LABEL2,LABEL3 Example: split_regex : - node `.*_(ag\\d+)_(p\\d+)_(d\\d+)` aggr,plex,disk # will look for \"_ag\", \"_p\", \"_d\", each followed by one # or more numbers, if there is a match, the submatches # will be stored as \"aggr\", \"plex\" and \"disk\"","title":"split_regex"},{"location":"plugins/#split_pairs","text":"Rule syntax: split_pairs : - LABEL `SEP1` `SEP2` # source label - pair separator - key-value separator Extracts key-value pairs from the value of source label LABEL . Note that you need to add these keys in the export options, otherwise they will not be exported. Example: split_pairs : - comment ` ` `:` # will split pairs using a single space and split key-values using colon # e.g. if comment=\"owner:jack contact:some@email\", the result wll be # two new labels: owner=\"jack\" and contact=\"some@email\"","title":"split_pairs"},{"location":"plugins/#join","text":"Join multiple label values using separator SEP and create a new label. Rule syntax: join : - LABEL `SEP` LABEL1,LABEL2,LABEL3 # target label - separator - comma-seperated source labels Example: join : - plex_long `_` aggr,plex # will look for the values of labels \"aggr\" and \"plex\", # if they are set, a new \"plex_long\" label will be added # by joining their values with \"_\"","title":"join"},{"location":"plugins/#replace","text":"Substitute substring OLD with NEW in label SOURCE and store in TARGET . Note that target and source labels can be the same. Rule syntax: replace : - SOURCE TARGET `OLD` `NEW` # source label - target label - substring to replace - replace with Example: replace : - node node_short `node_` `` # this rule will just remove \"node_\" from all values of label # \"node\". E.g. if label is \"node_jamaica1\", it will rewrite it # as \"jamaica1\"","title":"replace"},{"location":"plugins/#replace_regex","text":"Same as replace , but will use a regular expression instead of OLD . Note you can use $n to specify n th submatch in NEW . Rule syntax: replace_regex : - SOURCE TARGET `REGEX` `NEW` # source label - target label - substring to replace - replace with Example: replace_regex : - node node `^(node)_(\\d+)_.*$` `Node-$2` # if there is a match, will capitalize \"Node\" and remove suffixes. # E.g. if label is \"node_10_dc2\", it will rewrite it as # will rewrite it as \"Node-10\"","title":"replace_regex"},{"location":"plugins/#exclude_equals","text":"Exclude each instance, if the value of LABEL is exactly VALUE . Exclude means that metrics for this instance will not be exported. Rule syntax: exclude_equals : - LABEL `VALUE` # label name - label value Example: exclude_equals : - vol_type `flexgroup_constituent` # all instances, which have label \"vol_type\" with value # \"flexgroup_constituent\" will not be exported","title":"exclude_equals"},{"location":"plugins/#exclude_contains","text":"Same as exclude_equals , but all labels that contain VALUE will be excluded Rule syntax: exclude_contains : - LABEL `VALUE` # label name - label value Example: exclude_contains : - vol_type `flexgroup_` # all instances, which have label \"vol_type\" which contain # \"flexgroup_\" will not be exported","title":"exclude_contains"},{"location":"plugins/#exclude_regex","text":"Same as exclude_equals , but will use a regular expression and all matching instances will be excluded. Rule syntax: exclude_regex : - LABEL `REGEX` # label name - regular expression Example: exclude_regex : - vol_type `^flex` # all instances, which have label \"vol_type\" which starts with # \"flex\" will not be exported","title":"exclude_regex"},{"location":"plugins/#include_equals","text":"Include each instance, if the value of LABEL is exactly VALUE . Include means that metrics for this instance will be exported and instances that do not match will not be exported. Rule syntax: include_equals : - LABEL `VALUE` # label name - label value Example: include_equals : - vol_type `flexgroup_constituent` # all instances, which have label \"vol_type\" with value # \"flexgroup_constituent\" will be exported","title":"include_equals"},{"location":"plugins/#include_contains","text":"Same as include_equals , but all labels that contain VALUE will be included Rule syntax: include_contains : - LABEL `VALUE` # label name - label value Example: include_contains : - vol_type `flexgroup_` # all instances, which have label \"vol_type\" which contain # \"flexgroup_\" will be exported","title":"include_contains"},{"location":"plugins/#include_regex","text":"Same as include_equals , but a regular expression will be used for inclusion. Similar to the other includes, all matching instances will be included and all non-matching will not be exported. Rule syntax: include_regex : - LABEL `REGEX` # label name - regular expression Example: include_regex : - vol_type `^flex` # all instances, which have label \"vol_type\" which starts with # \"flex\" will be exported","title":"include_regex"},{"location":"plugins/#value_mapping","text":"value_mapping was deprecated in 21.11 and removed in 22.02. Use value_to_num mapping instead.","title":"value_mapping"},{"location":"plugins/#value_to_num","text":"Map values of a given label to a numeric metric (of type uint8 ). This rule maps values of a given label to a numeric metric (of type unit8 ). Healthy is mapped to 1 and all non-healthy values are mapped to 0. This is handy to manipulate the data in the DB or Grafana (e.g. change color based on status or create alert). Note that you don't define the numeric values yourself, instead, you only provide the possible (expected) values, the plugin will map each value to its index in the rule. Rule syntax: value_to_num : - METRIC LABEL ZAPI_VALUE REST_VALUE `N` # map values of LABEL to 1 if it is ZAPI_VALUE or REST_VALUE # otherwise, value of METRIC is set to N The default value N is optional, if no default value is given and the label value does not match any of the given values, the metric value will not be set. Examples: value_to_num : - status state up online `0` # a new metric will be created with the name \"status\" # if an instance has label \"state\" with value \"up\", the metric value will be 1, # if it's \"online\", the value will be set to 1, # if it's any other value, it will be set to the specified default, 0 value_to_num : - status state up online `4` # metric value will be set to 1 if \"state\" is \"up\", otherwise to **4** value_to_num : - status outage - - `0` #ok_value is empty value. # metric value will be set to 1 if \"outage\" is empty, if it's any other value, it will be set to the default, 0 # '-' is a special symbol in this mapping, and it will be converted to blank while processing.","title":"value_to_num"},{"location":"plugins/#value_to_num_regex","text":"Same as value_to_num, but will use a regular expression. All matches are mapped to 1 and non-matches are mapped to 0. This is handy to manipulate the data in the DB or Grafana (e.g. change color based on status or create alert). Note that you don't define the numeric values, instead, you provide the expected values and the plugin will map each value to its index in the rule. Rule syntax: value_to_num_regex : - METRIC LABEL ZAPI_REGEX REST_REGEX `N` # map values of LABEL to 1 if it matches ZAPI_REGEX or REST_REGEX # otherwise, value of METRIC is set to N The default value N is optional, if no default value is given and the label value does not match any of the given values, the metric value will not be set. Examples: value_to_num_regex : - certificateuser methods .*cert.*$ .*certificate.*$ `0` # a new metric will be created with the name \"certificateuser\" # if an instance has label \"methods\" with value contains \"cert\", the metric value will be 1, # if value contains \"certificate\", the value will be set to 1, # if value doesn't contain \"cert\" and \"certificate\", it will be set to the specified default, 0 value_to_num_regex : - status state ^up$ ^ok$ `4` # metric value will be set to 1 if label \"state\" matches regex, otherwise set to **4**","title":"value_to_num_regex"},{"location":"plugins/#metricagent","text":"MetricAgent are used to manipulate metrics based on rules. You can define multiple rules, here is an example of what you could add to the yaml file of a collector: plugins : MetricAgent : compute_metric : - snapshot_maxfiles_possible ADD snapshot.max_files_available snapshot.max_files_used - raid_disk_count ADD block_storage.primary.disk_count block_storage.hybrid_cache.disk_count Note: Metric names used to create new metrics can come from the left or right side of the rename operator ( => ) Note: The metric agent currently does not work for histogram or array metrics.","title":"MetricAgent"},{"location":"plugins/#compute_metric","text":"This rule creates a new metric (of type float64) using the provided scalar or an existing metric value combined with a mathematical operation. You can provide a numeric value or a metric name with an operation. The plugin will use the provided number or fetch the value of a given metric, perform the requested mathematical operation, and store the result in new custom metric. Currently, we support these operations: ADD SUBTRACT MULTIPLY DIVIDE PERCENT Rule syntax: compute_metric : - METRIC OPERATION METRIC1 METRIC2 METRIC3 # target new metric - mathematical operation - input metric names # apply OPERATION on metric values of METRIC1, METRIC2 and METRIC3 and set result in METRIC # METRIC1, METRIC2, METRIC3 can be a scalar or an existing metric name. Examples: compute_metric : - space_total ADD space_available space_used # a new metric will be created with the name \"space_total\" # if an instance has metric \"space_available\" with value \"1000\", and \"space_used\" with value \"400\", # the result value will be \"1400\" and set to metric \"space_total\". compute_metric : - disk_count ADD primary.disk_count secondary.disk_count hybrid.disk_count # value of metric \"disk_count\" would be addition of all the given disk_counts metric values. # disk_count = primary.disk_count + secondary.disk_count + hybrid.disk_count compute_metric : - files_available SUBTRACT files files_used # value of metric \"files_available\" would be subtraction of the metric value of files_used from metric value of files. # files_available = files - files_used compute_metric : - total_bytes MULTIPLY bytes_per_sector sector_count # value of metric \"total_bytes\" would be multiplication of metric value of bytes_per_sector and metric value of sector_count. # total_bytes = bytes_per_sector * sector_count compute_metric : - uptime MULTIPLY stats.power_on_hours 60 60 # value of metric \"uptime\" would be multiplication of metric value of stats.power_on_hours and scalar value of 60 * 60. # total_bytes = bytes_per_sector * sector_count compute_metric : - transmission_rate DIVIDE transfer.bytes_transferred transfer.total_duration # value of metric \"transmission_rate\" would be division of metric value of transfer.bytes_transferred by metric value of transfer.total_duration. # transmission_rate = transfer.bytes_transferred / transfer.total_duration compute_metric : - inode_used_percent PERCENT inode_files_used inode_files_total # a new metric named \"inode_used_percent\" will be created by dividing the metric \"inode_files_used\" by # \"inode_files_total\" and multiplying the result by 100. # inode_used_percent = inode_files_used / inode_files_total * 100","title":"compute_metric"},{"location":"prepare-7mode-clusters/","text":"NetApp Harvest requires login credentials to access monitored hosts. Although, a generic admin account can be used, it is best practice to create a dedicated monitoring account with the least privilege access. ONTAP 7-mode supports only username / password based authentication with NetApp Harvest. Harvest communicates with monitored systems exclusively via HTTPS, which is not enabled by default in Data ONTAP 7-mode. Login as a user with full administrative privileges and execute the following steps. Enabling HTTPS and TLS (ONTAP 7-mode only) \u00b6 Verify SSL is configured secureadmin status ssl If ssl is \u2018active\u2019 continue. If not, setup SSL and be sure to choose a Key length (bits) of 2048: secureadmin setup ssl SSL Setup has already been done before. Do you want to proceed? [no] yes Country Name (2 letter code) [US]: NL State or Province Name (full name) [California]: Noord-Holland Locality Name (city, town, etc.) [Santa Clara]: Schiphol Organization Name (company) [Your Company]: NetApp Organization Unit Name (division): SalesEngineering Common Name (fully qualified domain name) [sdt-7dot1a.nltestlab.hq.netapp.com]: Administrator email: noreply@netapp.com Days until expires [5475] :5475 Key length (bits) [512] :2048 Enable management via SSL and enable TLS options httpd.admin.ssl.enable on options tls.enable on Creating ONTAP user \u00b6 Create the role with required capabilities \u00b6 role add netapp-harvest-role -c \"Role for performance monitoring by NetApp Harvest\" -a login-http-admin,api-system-get-version,api-system-get-info,api-perf-object-*,api-emsautosupport-log Create a group for this role \u00b6 useradmin group add netapp-harvest-group -c \"Group for performance monitoring by NetApp Harvest\" -r netapp-harvest-role Create a user for the role and enter the password when prompted \u00b6 useradmin user add netapp-harvest -c \"User account for performance monitoring by NetApp Harvest\" -n \"NetApp Harvest\" -g netapp-harvest-group The user is now created and can be configured for use by NetApp Harvest.","title":"ONTAP 7mode"},{"location":"prepare-7mode-clusters/#enabling-https-and-tls-ontap-7-mode-only","text":"Verify SSL is configured secureadmin status ssl If ssl is \u2018active\u2019 continue. If not, setup SSL and be sure to choose a Key length (bits) of 2048: secureadmin setup ssl SSL Setup has already been done before. Do you want to proceed? [no] yes Country Name (2 letter code) [US]: NL State or Province Name (full name) [California]: Noord-Holland Locality Name (city, town, etc.) [Santa Clara]: Schiphol Organization Name (company) [Your Company]: NetApp Organization Unit Name (division): SalesEngineering Common Name (fully qualified domain name) [sdt-7dot1a.nltestlab.hq.netapp.com]: Administrator email: noreply@netapp.com Days until expires [5475] :5475 Key length (bits) [512] :2048 Enable management via SSL and enable TLS options httpd.admin.ssl.enable on options tls.enable on","title":"Enabling HTTPS and TLS (ONTAP 7-mode only)"},{"location":"prepare-7mode-clusters/#creating-ontap-user","text":"","title":"Creating ONTAP user"},{"location":"prepare-7mode-clusters/#create-the-role-with-required-capabilities","text":"role add netapp-harvest-role -c \"Role for performance monitoring by NetApp Harvest\" -a login-http-admin,api-system-get-version,api-system-get-info,api-perf-object-*,api-emsautosupport-log","title":"Create the role with required capabilities"},{"location":"prepare-7mode-clusters/#create-a-group-for-this-role","text":"useradmin group add netapp-harvest-group -c \"Group for performance monitoring by NetApp Harvest\" -r netapp-harvest-role","title":"Create a group for this role"},{"location":"prepare-7mode-clusters/#create-a-user-for-the-role-and-enter-the-password-when-prompted","text":"useradmin user add netapp-harvest -c \"User account for performance monitoring by NetApp Harvest\" -n \"NetApp Harvest\" -g netapp-harvest-group The user is now created and can be configured for use by NetApp Harvest.","title":"Create a user for the role and enter the password when prompted"},{"location":"prepare-cdot-clusters/","text":"Prepare ONTAP cDOT cluster \u00b6 NetApp Harvest requires login credentials to access monitored hosts. Although, a generic admin account can be used, it is best practice to create a dedicated monitoring account with the least privilege access. In the examples below, the user, group, roles, etc., use a naming convention of \u2018netapp-harvest\u2019. These can be modified as needed to match your environment standards. There are few steps required to prepare each monitored system for collection. Harvest supports two authentication styles ( auth_style ) to connect to ONTAP clusters. They are basic_auth or certificate_auth . Both work well, but if you're starting fresh, the recommendation is to create a read-only harvest user on your ONTAP server and use certificate-based TLS authentication. Here's a summary of what we're going to do Create an ONTAP role with the necessary capabilities that Harvest will use to auth and collect data Create a user account using the role created in step #1. Creating ONTAP user \u00b6 There are two ways to create a read-only user: Create a user with read-only access to all API objects Create a user with read-only access to only the APIs Harvest collects today The second option has a smaller attack surface, but each time you want to collect counters for a new object, you will need to update the user's privileges. Below we explain how to create an ONTAP user and role for Harvest using ONTAP System Manager (Classic interface & New interface) and CLI. System Manager: New interface \u00b6 Note: in this section we add a user with read-only access to all API objects. For limited access, use either the classic interface or the CLI Open System Manager. Click on CLUSTER in the left menu bar, Settings and Users and Roles . In the right column, under Roles , click on Add to add a new role. Choose a role name (e.g. harvest2-role ). In the REST API PATH field, type /api and select Read-Only for ACCESS . Click on Save . In the left column, under Users , click on Add to create a new user. Choose a username. Under Role , select the role that we just created. Under User Login Methods select ONTAPI , and select one of the two authentication methods. Type in a password if you chose Password . Click on Save If you chose Password , you can add the username and password to the Harvest configuration file and start Harvest. If you chose Certificate jump to Using Certificate Authentication to generate certificates files. System Manager: Classic interface \u00b6 Open System Manager. Click on the Settings icon in the top-right corner of the window. Click on Roles in the left menu bar and click Add . Choose a role name (e.g. harvest2-role ). If you want to give Harvest read-only access to all API objects, then under Role Attributes click on Add , under Command type DEFAULT , leave Query empty, select readonly under Access Level , click on OK and Add . If you want to limit the API objects, then under Role Attributes , add each of the following lines as an entry. All of those should be entered under the Command column, Query should be left blank, and Access Level should be selected readonly . cluster qos lun snapmirror statistics storage aggregate storage disk storage shelf system node version volume After you click on Add , this is what you should see: Now we need to create a user. Click on Users in the left menu bar and Add . Choose a username and password. Under User Login Methods , click on Add , select ontapi as Application and select the role that we just created as Role . Click on Add in the pop-up window to save. Now add the username and password to harvest.yml and start Harvest. ONTAP CLI \u00b6 We are going to: create a Harvest role with read-only access to the API objects create a Harvest user and assign it to that role You should decide if you want to limit the Harvest role to only the subset of API objects Harvest requires or give Harvest access to all API objects. In both cases, Harvest's access will be read-only. Either approach is fine, following the principle of least-privilege, we recommend the limited approach. Login to the CLI of your c-DOT ONTAP system using SSH. Least-privilege approach \u00b6 Verify there are no errors when you copy/paste these. Warnings are fine. security login role create -role harvest2-role -access readonly -cmddirname \"cluster\" security login role create -role harvest2-role -access readonly -cmddirname \"lun\" security login role create -role harvest2-role -access readonly -cmddirname \"qos workload show\" security login role create -role harvest2-role -access readonly -cmddirname \"snapmirror\" security login role create -role harvest2-role -access readonly -cmddirname \"statistics\" security login role create -role harvest2-role -access readonly -cmddirname \"storage aggregate\" security login role create -role harvest2-role -access readonly -cmddirname \"storage disk\" security login role create -role harvest2-role -access readonly -cmddirname \"storage shelf\" security login role create -role harvest2-role -access readonly -cmddirname \"system health status show\" security login role create -role harvest2-role -access readonly -cmddirname \"system health subsystem show\" security login role create -role harvest2-role -access readonly -cmddirname \"system node\" security login role create -role harvest2-role -access readonly -cmddirname \"version\" security login role create -role harvest2-role -access readonly -cmddirname \"volume\" # Permissions required for Harvest 22.05+ security dashboard security login role create -role harvest2-role -access readonly -cmddirname \"network interface\" security login role create -role harvest2-role -access readonly -cmddirname \"security\" security login role create -role harvest2-role -access readonly -cmddirname \"storage encryption disk\" security login role create -role harvest2-role -access readonly -cmddirname \"vserver\" # Permissions required for Harvest 23.05+ QoS policies security login role create -role harvest2-role -access readonly -cmddirname \"qos adaptive-policy-group\" security login role create -role harvest2-role -access readonly -cmddirname \"qos policy-group\" All APIs read-only approach \u00b6 security login role create -role harvest2-role -access readonly -cmddirname \"DEFAULT\" Create harvest user and associate to role \u00b6 Use this for password authentication # ZAPI based access security login create -user-or-group-name harvest2 -application ontapi -role harvest2-role -authentication-method password # REST based access security login create -user-or-group-name harvest2 -application http -role harvest2-role -authentication-method password Or this for certificate authentication # ZAPI based access security login create -user-or-group-name harvest2 -application ontapi -role harvest2-role -authentication-method cert # REST based access security login create -user-or-group-name harvest2 -application http -role harvest2-role -authentication-method cert Verify that an entry is present by running the following commands # ZAPI based access vserver services web access show -role harvest2-role -name ontapi # REST based access vserver services web access show -role harvest2-role -name rest If the entry is missing, enable access by running the following # ZAPI based access vserver services web access create -vserver $ADMIN_VSERVER -name ontapi -role harvest2-role # REST based access vserver services web access create -vserver $ADMIN_VSERVER -name rest -role harvest2-role 7-Mode CLI \u00b6 Login to the CLI of your 7-Mode ONTAP system (e.g. using SSH). First, we create a user role. If you want to give the user readonly access to all API objects, type in the following command: useradmin role modify harvest2-role -a login-http-admin,api-system-get-version, \\ api-system-get-info,api-perf-object-*,api-ems-autosupport-log,api-diagnosis-status-get, \\ api-lun-list-info,api-diagnosis-subsystem-config-get-iter,api-disk-list-info, \\ api-diagnosis-config-get-iter,api-aggr-list-info,api-volume-list-info, \\ api-storage-shelf-environment-list-info,api-qtree-list,api-quota-report Using Certificate Authentication \u00b6 See comments here for troubleshooting client certificate authentication. Client certificate authentication allows you to authenticate with your ONTAP cluster without including username/passwords in your harvest.yml file. The process to setup client certificates is straightforward, although self-signed certificates introduce more work as does Go's strict treatment of common names. Unless you've installed production certificates on your ONTAP cluster, you'll need to replace your cluster's common-name-based self-signed certificates with a subject alternative name based certificate. After that step is completed, we'll create client certificates and add those for passwordless login. If you can't or don't want to replace your ONTAP cluster certificates, there are some workarounds. You can Use use_insecure_tls: true in your harvest.yml to disable certificate verification Change your harvest.yml to connect via hostname instead of IP address Create Self-Signed Subject Alternate Name Certificates for ONTAP \u00b6 Subject alternate name (SAN) certificates allow multiple hostnames in a single certificate. Starting with Go 1.3, when connecting to a cluster via its IP address, the CN field in the server certificate is ignored. This often causes errors like this: x509: cannot validate certificate for 127.0.0.1 because it doesn't contain any IP SANs Overview of steps to create a self-signed SAN certificate and make ONTAP use it \u00b6 Create a root key Create a root certificate authority certificate Create a SAN certificate for your ONTAP cluster, using #2 to create it Install root ca certificate created in step #2 on cluster Install SAN certificate created in step #3 on your cluster Modify you cluster/SVM to use the new certificate installed at step #5 Setup \u00b6 # create a place to store the certificate authority files, adjust as needed mkdir -p ca/{private,certs} Create a root key \u00b6 cd ca # generate a private key that we will use to create our self-signed certificate authority openssl genrsa -out private/ca.key.pem 4096 chmod 400 private/ca.key.pem Create a root certificate authority certificate \u00b6 Download the sample openssl.cnf file and put it in the directory we created in setup . Edit line 9, changing dir to point to your ca directory created in setup . openssl req -config openssl.cnf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem # Verify openssl x509 -noout -text -in certs/ca.cert.pem # Make sure these are present Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1 X509v3 extensions: X509v3 Subject Key Identifier: --removed X509v3 Authority Key Identifier: --removed X509v3 Basic Constraints: critical CA:TRUE <======== CA must be true X509v3 Key Usage: critical Digital Signature, Certificate Sign, CRL Sign <======== Digital and certificate signature Create a SAN certificate for your ONTAP cluster \u00b6 First, we'll create the certificate signing request and then the certificate. In this example, the ONTAP cluster is named umeng-aff300-05-06 , update accordingly. Download the sample server_cert.cnf file and put it in the directory we created in setup . Edit lines 18-21 to include your ONTAP cluster hostnames and IP addresses. Edit lines 6-11 with new names as needed. openssl req -new -newkey rsa:4096 -nodes -sha256 -subj \"/\" -config server_cert.cnf -outform pem -out umeng-aff300-05-06.csr -keyout umeng-aff300-05-06.key # Verify openssl req -text -noout -in umeng-aff300-05-06.csr # Make sure these are present Attributes: Requested Extensions: X509v3 Subject Alternative Name: <======== Section that lists alternate DNS and IP names DNS:umeng-aff300-05-06-cm.rtp.openenglab.netapp.com, DNS:umeng-aff300-05-06, IP Address:10.193.48.11, IP Address:10.193.48.11 Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1 We'll now use the certificate signing request and the recently create certificate authority to create a new SAN certificate for our cluster. openssl x509 -req -sha256 -days 30 -in umeng-aff300-05-06.csr -CA certs/ca.cert.pem -CAkey private/ca.key.pem -CAcreateserial -out umeng-aff300-05-06.crt -extensions req_ext -extfile server_cert.cnf # Verify openssl x509 -text -noout -in umeng-aff300-05-06.crt # Make sure these are present X509v3 extensions: X509v3 Subject Alternative Name: <======== Section that lists alternate DNS and IP names DNS:umeng-aff300-05-06-cm.rtp.openenglab.netapp.com, DNS:umeng-aff300-05-06, IP Address:10.193.48.11, IP Address:10.193.48.11 Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1 Install Root CA Certificate On Cluster \u00b6 Login to your cluster with admin credentials and install the server certificate authority. Copy from ca/certs/ca.cert.pem ssh admin@IP umeng-aff300-05-06::*> security certificate install -type server-ca Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: ntap Serial: 46AFFC7A3A9999999E8FB2FEB0 The certificate's generated name for reference: ntap Now install the server certificate we created above with SAN. Copy certificate from ca/umeng-aff300-05-06.crt and private key from ca/umeng-aff300-05-06.key umeng-aff300-05-06::*> security certificate install -type server Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- .. -----END CERTIFICATE----- Please enter Private Key: Press <Enter> when done -----BEGIN PRIVATE KEY----- ... -----END PRIVATE KEY----- Please enter certificates of Certification Authorities (CA) which form the certificate chain of the server certificate. This starts with the issuing CA certificate of the server certificate and can range up to the root CA certificate. Do you want to continue entering root and/or intermediate certificates {y|n}: n If ONTAP tells you the provided certificate does not have a common name in the subject field, type the hostname of the cluster like this: The provided certificate does not have a common name in the subject field. Enter a valid common name to continue installation of the certificate: Enter a valid common name to continue installation of the certificate: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com You should keep a copy of the private key and the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: ntap Serial: 67A94AA25B229A68AC5BABACA8939A835AA998A58 The certificate's generated name for reference: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com Modify the admin SVM to use the new certificate \u00b6 We'll modify the cluster's admin SVM to use the just installed server certificate and certificate authority. vserver show -type admin -fields vserver,type vserver type ------------------ ----- umeng-aff300-05-06 admin umeng-aff300-05-06::*> ssl modify -vserver umeng-aff300-05-06 -server-enabled true -serial 67A94AA25B229A68AC5BABACA8939A835AA998A58 -ca ntap (security ssl modify) You can verify the certificate(s) are installed and working by using openssl like so: openssl s_client -CAfile certs/ca.cert.pem -showcerts -servername server -connect umeng-aff300-05-06-cm.rtp.openenglab.netapp.com:443 CONNECTED(00000005) depth=1 C = US, ST = NC, L = RTP, O = ntap, OU = ntap verify return:1 depth=0 verify return:1 ... without the -CAfile , openssl will report CONNECTED(00000005) depth=0 verify error:num=20:unable to get local issuer certificate verify return:1 depth=0 verify error:num=21:unable to verify the first certificate verify return:1 --- Create Client Certificates for Password-less Login \u00b6 Copy the server certificate we created above into the Harvest install directory. cp ca/umeng-aff300-05-06.crt /opt/harvest cd /opt/harvest Create a self-signed client key and certificate with the same name as the hostname where Harvest is running. It's not required to name the key/cert pair after the hostname, but if you do, Harvest will load them automatically when you specify auth_style: certificate_auth otherwise you can point to them directly. See Pollers for details. Change the common name to the ONTAP user you setup with the harvest role above. e.g harvest2 cd /opt/harvest mkdir cert openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout cert/$(hostname).key -out cert/$(hostname).pem -subj \"/CN=harvest2\" Install Client Certificates on Cluster \u00b6 Login to your cluster with admin credentials and install the client certificate. Copy from cert/$(hostname).pem ssh admin@IP umeng-aff300-05-06::*> security certificate install -type client-ca -vserver umeng-aff300-05-06 Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: cbg Serial: B77B59444444CCCC The certificate's generated name for reference: cbg_B77B59444444CCCC Now that the client certificate is installed, let's enable it. umeng-aff300-05-06::*> ssl modify -vserver umeng-aff300-05-06 -client-enabled true (security ssl modify) Verify with a recent version of curl . If you are running on a Mac see below . curl --cacert umeng-aff300-05-06.crt --key cert/$(hostname).key --cert cert/$(hostname).pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks Update Harvest.yml to use client certificates \u00b6 Update the poller section with auth_style: certificate_auth like this: u2-cert: auth_style: certificate_auth addr: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com Restart your poller and enjoy your password-less life-style. macOS \u00b6 The version of curl installed on macOS up through Monterey is not recent enough to work with self-signed SAN certs. You will need to install a newer version of curl via Homebrew, MacPorts, source, etc. Example of failure when running with older version of curl - you will see this in client auth test step above. curl --version curl 7.64.1 (x86_64-apple-darwin20.0) libcurl/7.64.1 (SecureTransport) LibreSSL/2.8.3 zlib/1.2.11 nghttp2/1.41.0 curl --cacert umeng-aff300-05-06.crt --key cert/cgrindst-mac-0.key --cert cert/cgrindst-mac-0.pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks curl: (60) SSL certificate problem: unable to get local issuer certificate Let's install curl via Homebrew. Make sure you don't miss the message that Homebrew prints about your path. If you need to have curl first in your PATH, run: echo 'export PATH=\"/usr/local/opt/curl/bin:$PATH\"' >> /Users/cgrindst/.bash_profile Now when we make a client auth request with our self-signed certificate it works! \\o/ brew install curl curl --version curl 7.80.0 (x86_64-apple-darwin20.6.0) libcurl/7.80.0 (SecureTransport) OpenSSL/1.1.1l zlib/1.2.11 brotli/1.0.9 zstd/1.5.0 libidn2/2.3.2 libssh2/1.10.0 nghttp2/1.46.0 librtmp/2.3 OpenLDAP/2.6.0 Release-Date: 2021-11-10 Protocols: dict file ftp ftps gopher gophers http https imap imaps ldap ldaps mqtt pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp Features: alt-svc AsynchDNS brotli GSS-API HSTS HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz MultiSSL NTLM NTLM_WB SPNEGO SSL TLS-SRP UnixSockets zstd curl --cacert umeng-aff300-05-06.crt --key cert/cgrindst-mac-0.key --cert cert/cgrindst-mac-0.pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks { \"records\": [ { \"name\": \"1.1.22\", \"_links\": { \"self\": { \"href\": \"/api/storage/disks/1.1.22\" } } } } Change directory to your Harvest home directory (replace /opt/harvest/ if this is not the default): $ cd /opt/harvest/ Generate an SSL cert and key pair with the following command. Note that it's preferred to generate these files using the hostname of the local machine. The command below assumes debian8 as our hostname name and harvest2 as the user we created in the previous step: openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout cert/debian8.key \\ -out cert/debian8.pem -subj \"/CN=harvest2\" Next, open the public key ( debian8.pem in our example) and copy all of its content. Login into your ONTAP CLI and run this command by replacing CLUSTER with the name of your cluster. security certificate install -type client-ca -vserver CLUSTER Paste the public key content and hit enter. Output should be similar to this: jamaica::> security certificate install -type client-ca -vserver jamaica Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- MIIDETCCAfmgAwIBAgIUP9EUXyl2BDSUOkNEcDU0yqbJ29IwDQYJKoZIhvcNAQEL BQAwGDEWMBQGA1UEAwwNaGFydmVzdDItY2xpMzAeFw0yMDEwMDkxMjA0MDhaFw0y MzEwMDktcGFueSBMdGQxFzAVBgNVBAMlc3QyLWNsaTMwggEiMA0tcGFueSBGCSqG SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCVVy25BeCRoGCJWFOlyUL7Ddkze4Hl2/6u qye/3mk5vBNsGuXUrtad5XfBB70Ez9hWl5sraLiY68ro6MyX1icjiUTeaYDvS/76 Iw7HeXJ5Pyb/fWth1nePunytoLyG/vaTCySINkIV5nlxC+k0X3wWFJdfJzhloPtt 1Vdm7aCF2q6a2oZRnUEBGQb6t5KyF0/Xh65mvfgB0pl/AS2HY5Gz+~L54Xyvs+BY V7UmTop7WBYl0L3QXLieERpHXnyOXmtwlm1vG5g4n/0DVBNTBXjEdvc6oRh8sxBN ZlQWRApE7pa/I1bLD7G2AiS4UcPmR4cEpPRVEsOFOaAN3Z3YskvnAgMBAAGjUzBR MB0GA1UdDgQWBBQr4syV6TCcgO/5EcU/F8L2YYF15jAfBgNVHSMEGDAWgBQr4syV 6TCcgO/5EcU/F8L2YYF15jAPBgNVHRMdfdfwerH/MA0GCSqGSIb^ECd3DQEBCwUA A4IBAQBjP1BVhClRKkO/M3zlWa2L9Ztce6SuGwSnm6Ebmbs+iMc7o2N9p3RmV6Xl h6NcdXRzzPAVrUoK8ewhnBzdghgIPoCI6inAf1CUhcCX2xcnE/osO+CfvKuFnPYE WQ7UNLsdfka0a9kTK13r3GMs09z/VsDs0gD8UhPjoeO7LQhdU9tJ/qOaSP3s48pv sYzZurHUgKmVOaOE4t9DAdevSECEWCETRETA $Vbn %@@@%%rcdrctru65ryFaByb+ hTtGhDnoHwzt/cAGvLGV/RyWdGFAbu7Fb1rV94ceggE7nh1FqbdLH9siot6LlnQN MhEWp5PYgndOW49dDYUxoauCCkiA -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate 's CA and serial number for reference: CA: harvest2 Serial: 3FD1145F2976043012213d3009095534CCRDBD2 The certificate' s generated name for reference: harvest2 Finally, we need to enable SSL authentication with the following command (replace CLUSTER with the name of your cluster): security ssl modify -client-enabled true -vserver CLUSTER Reference \u00b6 https://github.com/jcbsmpsn/golang-https-example","title":"ONTAP cDOT"},{"location":"prepare-cdot-clusters/#prepare-ontap-cdot-cluster","text":"NetApp Harvest requires login credentials to access monitored hosts. Although, a generic admin account can be used, it is best practice to create a dedicated monitoring account with the least privilege access. In the examples below, the user, group, roles, etc., use a naming convention of \u2018netapp-harvest\u2019. These can be modified as needed to match your environment standards. There are few steps required to prepare each monitored system for collection. Harvest supports two authentication styles ( auth_style ) to connect to ONTAP clusters. They are basic_auth or certificate_auth . Both work well, but if you're starting fresh, the recommendation is to create a read-only harvest user on your ONTAP server and use certificate-based TLS authentication. Here's a summary of what we're going to do Create an ONTAP role with the necessary capabilities that Harvest will use to auth and collect data Create a user account using the role created in step #1.","title":"Prepare ONTAP cDOT cluster"},{"location":"prepare-cdot-clusters/#creating-ontap-user","text":"There are two ways to create a read-only user: Create a user with read-only access to all API objects Create a user with read-only access to only the APIs Harvest collects today The second option has a smaller attack surface, but each time you want to collect counters for a new object, you will need to update the user's privileges. Below we explain how to create an ONTAP user and role for Harvest using ONTAP System Manager (Classic interface & New interface) and CLI.","title":"Creating ONTAP user"},{"location":"prepare-cdot-clusters/#system-manager-new-interface","text":"Note: in this section we add a user with read-only access to all API objects. For limited access, use either the classic interface or the CLI Open System Manager. Click on CLUSTER in the left menu bar, Settings and Users and Roles . In the right column, under Roles , click on Add to add a new role. Choose a role name (e.g. harvest2-role ). In the REST API PATH field, type /api and select Read-Only for ACCESS . Click on Save . In the left column, under Users , click on Add to create a new user. Choose a username. Under Role , select the role that we just created. Under User Login Methods select ONTAPI , and select one of the two authentication methods. Type in a password if you chose Password . Click on Save If you chose Password , you can add the username and password to the Harvest configuration file and start Harvest. If you chose Certificate jump to Using Certificate Authentication to generate certificates files.","title":"System Manager: New interface"},{"location":"prepare-cdot-clusters/#system-manager-classic-interface","text":"Open System Manager. Click on the Settings icon in the top-right corner of the window. Click on Roles in the left menu bar and click Add . Choose a role name (e.g. harvest2-role ). If you want to give Harvest read-only access to all API objects, then under Role Attributes click on Add , under Command type DEFAULT , leave Query empty, select readonly under Access Level , click on OK and Add . If you want to limit the API objects, then under Role Attributes , add each of the following lines as an entry. All of those should be entered under the Command column, Query should be left blank, and Access Level should be selected readonly . cluster qos lun snapmirror statistics storage aggregate storage disk storage shelf system node version volume After you click on Add , this is what you should see: Now we need to create a user. Click on Users in the left menu bar and Add . Choose a username and password. Under User Login Methods , click on Add , select ontapi as Application and select the role that we just created as Role . Click on Add in the pop-up window to save. Now add the username and password to harvest.yml and start Harvest.","title":"System Manager: Classic interface"},{"location":"prepare-cdot-clusters/#ontap-cli","text":"We are going to: create a Harvest role with read-only access to the API objects create a Harvest user and assign it to that role You should decide if you want to limit the Harvest role to only the subset of API objects Harvest requires or give Harvest access to all API objects. In both cases, Harvest's access will be read-only. Either approach is fine, following the principle of least-privilege, we recommend the limited approach. Login to the CLI of your c-DOT ONTAP system using SSH.","title":"ONTAP CLI"},{"location":"prepare-cdot-clusters/#least-privilege-approach","text":"Verify there are no errors when you copy/paste these. Warnings are fine. security login role create -role harvest2-role -access readonly -cmddirname \"cluster\" security login role create -role harvest2-role -access readonly -cmddirname \"lun\" security login role create -role harvest2-role -access readonly -cmddirname \"qos workload show\" security login role create -role harvest2-role -access readonly -cmddirname \"snapmirror\" security login role create -role harvest2-role -access readonly -cmddirname \"statistics\" security login role create -role harvest2-role -access readonly -cmddirname \"storage aggregate\" security login role create -role harvest2-role -access readonly -cmddirname \"storage disk\" security login role create -role harvest2-role -access readonly -cmddirname \"storage shelf\" security login role create -role harvest2-role -access readonly -cmddirname \"system health status show\" security login role create -role harvest2-role -access readonly -cmddirname \"system health subsystem show\" security login role create -role harvest2-role -access readonly -cmddirname \"system node\" security login role create -role harvest2-role -access readonly -cmddirname \"version\" security login role create -role harvest2-role -access readonly -cmddirname \"volume\" # Permissions required for Harvest 22.05+ security dashboard security login role create -role harvest2-role -access readonly -cmddirname \"network interface\" security login role create -role harvest2-role -access readonly -cmddirname \"security\" security login role create -role harvest2-role -access readonly -cmddirname \"storage encryption disk\" security login role create -role harvest2-role -access readonly -cmddirname \"vserver\" # Permissions required for Harvest 23.05+ QoS policies security login role create -role harvest2-role -access readonly -cmddirname \"qos adaptive-policy-group\" security login role create -role harvest2-role -access readonly -cmddirname \"qos policy-group\"","title":"Least-privilege approach"},{"location":"prepare-cdot-clusters/#all-apis-read-only-approach","text":"security login role create -role harvest2-role -access readonly -cmddirname \"DEFAULT\"","title":"All APIs read-only approach"},{"location":"prepare-cdot-clusters/#create-harvest-user-and-associate-to-role","text":"Use this for password authentication # ZAPI based access security login create -user-or-group-name harvest2 -application ontapi -role harvest2-role -authentication-method password # REST based access security login create -user-or-group-name harvest2 -application http -role harvest2-role -authentication-method password Or this for certificate authentication # ZAPI based access security login create -user-or-group-name harvest2 -application ontapi -role harvest2-role -authentication-method cert # REST based access security login create -user-or-group-name harvest2 -application http -role harvest2-role -authentication-method cert Verify that an entry is present by running the following commands # ZAPI based access vserver services web access show -role harvest2-role -name ontapi # REST based access vserver services web access show -role harvest2-role -name rest If the entry is missing, enable access by running the following # ZAPI based access vserver services web access create -vserver $ADMIN_VSERVER -name ontapi -role harvest2-role # REST based access vserver services web access create -vserver $ADMIN_VSERVER -name rest -role harvest2-role","title":"Create harvest user and associate to role"},{"location":"prepare-cdot-clusters/#7-mode-cli","text":"Login to the CLI of your 7-Mode ONTAP system (e.g. using SSH). First, we create a user role. If you want to give the user readonly access to all API objects, type in the following command: useradmin role modify harvest2-role -a login-http-admin,api-system-get-version, \\ api-system-get-info,api-perf-object-*,api-ems-autosupport-log,api-diagnosis-status-get, \\ api-lun-list-info,api-diagnosis-subsystem-config-get-iter,api-disk-list-info, \\ api-diagnosis-config-get-iter,api-aggr-list-info,api-volume-list-info, \\ api-storage-shelf-environment-list-info,api-qtree-list,api-quota-report","title":"7-Mode CLI"},{"location":"prepare-cdot-clusters/#using-certificate-authentication","text":"See comments here for troubleshooting client certificate authentication. Client certificate authentication allows you to authenticate with your ONTAP cluster without including username/passwords in your harvest.yml file. The process to setup client certificates is straightforward, although self-signed certificates introduce more work as does Go's strict treatment of common names. Unless you've installed production certificates on your ONTAP cluster, you'll need to replace your cluster's common-name-based self-signed certificates with a subject alternative name based certificate. After that step is completed, we'll create client certificates and add those for passwordless login. If you can't or don't want to replace your ONTAP cluster certificates, there are some workarounds. You can Use use_insecure_tls: true in your harvest.yml to disable certificate verification Change your harvest.yml to connect via hostname instead of IP address","title":"Using Certificate Authentication"},{"location":"prepare-cdot-clusters/#create-self-signed-subject-alternate-name-certificates-for-ontap","text":"Subject alternate name (SAN) certificates allow multiple hostnames in a single certificate. Starting with Go 1.3, when connecting to a cluster via its IP address, the CN field in the server certificate is ignored. This often causes errors like this: x509: cannot validate certificate for 127.0.0.1 because it doesn't contain any IP SANs","title":"Create Self-Signed Subject Alternate Name Certificates for ONTAP"},{"location":"prepare-cdot-clusters/#overview-of-steps-to-create-a-self-signed-san-certificate-and-make-ontap-use-it","text":"Create a root key Create a root certificate authority certificate Create a SAN certificate for your ONTAP cluster, using #2 to create it Install root ca certificate created in step #2 on cluster Install SAN certificate created in step #3 on your cluster Modify you cluster/SVM to use the new certificate installed at step #5","title":"Overview of steps to create a self-signed SAN certificate and make ONTAP use it"},{"location":"prepare-cdot-clusters/#setup","text":"# create a place to store the certificate authority files, adjust as needed mkdir -p ca/{private,certs}","title":"Setup"},{"location":"prepare-cdot-clusters/#create-a-root-key","text":"cd ca # generate a private key that we will use to create our self-signed certificate authority openssl genrsa -out private/ca.key.pem 4096 chmod 400 private/ca.key.pem","title":"Create a root key"},{"location":"prepare-cdot-clusters/#create-a-root-certificate-authority-certificate","text":"Download the sample openssl.cnf file and put it in the directory we created in setup . Edit line 9, changing dir to point to your ca directory created in setup . openssl req -config openssl.cnf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem # Verify openssl x509 -noout -text -in certs/ca.cert.pem # Make sure these are present Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1 X509v3 extensions: X509v3 Subject Key Identifier: --removed X509v3 Authority Key Identifier: --removed X509v3 Basic Constraints: critical CA:TRUE <======== CA must be true X509v3 Key Usage: critical Digital Signature, Certificate Sign, CRL Sign <======== Digital and certificate signature","title":"Create a root certificate authority certificate"},{"location":"prepare-cdot-clusters/#create-a-san-certificate-for-your-ontap-cluster","text":"First, we'll create the certificate signing request and then the certificate. In this example, the ONTAP cluster is named umeng-aff300-05-06 , update accordingly. Download the sample server_cert.cnf file and put it in the directory we created in setup . Edit lines 18-21 to include your ONTAP cluster hostnames and IP addresses. Edit lines 6-11 with new names as needed. openssl req -new -newkey rsa:4096 -nodes -sha256 -subj \"/\" -config server_cert.cnf -outform pem -out umeng-aff300-05-06.csr -keyout umeng-aff300-05-06.key # Verify openssl req -text -noout -in umeng-aff300-05-06.csr # Make sure these are present Attributes: Requested Extensions: X509v3 Subject Alternative Name: <======== Section that lists alternate DNS and IP names DNS:umeng-aff300-05-06-cm.rtp.openenglab.netapp.com, DNS:umeng-aff300-05-06, IP Address:10.193.48.11, IP Address:10.193.48.11 Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1 We'll now use the certificate signing request and the recently create certificate authority to create a new SAN certificate for our cluster. openssl x509 -req -sha256 -days 30 -in umeng-aff300-05-06.csr -CA certs/ca.cert.pem -CAkey private/ca.key.pem -CAcreateserial -out umeng-aff300-05-06.crt -extensions req_ext -extfile server_cert.cnf # Verify openssl x509 -text -noout -in umeng-aff300-05-06.crt # Make sure these are present X509v3 extensions: X509v3 Subject Alternative Name: <======== Section that lists alternate DNS and IP names DNS:umeng-aff300-05-06-cm.rtp.openenglab.netapp.com, DNS:umeng-aff300-05-06, IP Address:10.193.48.11, IP Address:10.193.48.11 Signature Algorithm: sha256WithRSAEncryption <======== Signature Algorithm can not be sha-1","title":"Create a SAN certificate for your ONTAP cluster"},{"location":"prepare-cdot-clusters/#install-root-ca-certificate-on-cluster","text":"Login to your cluster with admin credentials and install the server certificate authority. Copy from ca/certs/ca.cert.pem ssh admin@IP umeng-aff300-05-06::*> security certificate install -type server-ca Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: ntap Serial: 46AFFC7A3A9999999E8FB2FEB0 The certificate's generated name for reference: ntap Now install the server certificate we created above with SAN. Copy certificate from ca/umeng-aff300-05-06.crt and private key from ca/umeng-aff300-05-06.key umeng-aff300-05-06::*> security certificate install -type server Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- .. -----END CERTIFICATE----- Please enter Private Key: Press <Enter> when done -----BEGIN PRIVATE KEY----- ... -----END PRIVATE KEY----- Please enter certificates of Certification Authorities (CA) which form the certificate chain of the server certificate. This starts with the issuing CA certificate of the server certificate and can range up to the root CA certificate. Do you want to continue entering root and/or intermediate certificates {y|n}: n If ONTAP tells you the provided certificate does not have a common name in the subject field, type the hostname of the cluster like this: The provided certificate does not have a common name in the subject field. Enter a valid common name to continue installation of the certificate: Enter a valid common name to continue installation of the certificate: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com You should keep a copy of the private key and the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: ntap Serial: 67A94AA25B229A68AC5BABACA8939A835AA998A58 The certificate's generated name for reference: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com","title":"Install Root CA Certificate On Cluster"},{"location":"prepare-cdot-clusters/#modify-the-admin-svm-to-use-the-new-certificate","text":"We'll modify the cluster's admin SVM to use the just installed server certificate and certificate authority. vserver show -type admin -fields vserver,type vserver type ------------------ ----- umeng-aff300-05-06 admin umeng-aff300-05-06::*> ssl modify -vserver umeng-aff300-05-06 -server-enabled true -serial 67A94AA25B229A68AC5BABACA8939A835AA998A58 -ca ntap (security ssl modify) You can verify the certificate(s) are installed and working by using openssl like so: openssl s_client -CAfile certs/ca.cert.pem -showcerts -servername server -connect umeng-aff300-05-06-cm.rtp.openenglab.netapp.com:443 CONNECTED(00000005) depth=1 C = US, ST = NC, L = RTP, O = ntap, OU = ntap verify return:1 depth=0 verify return:1 ... without the -CAfile , openssl will report CONNECTED(00000005) depth=0 verify error:num=20:unable to get local issuer certificate verify return:1 depth=0 verify error:num=21:unable to verify the first certificate verify return:1 ---","title":"Modify the admin SVM to use the new certificate"},{"location":"prepare-cdot-clusters/#create-client-certificates-for-password-less-login","text":"Copy the server certificate we created above into the Harvest install directory. cp ca/umeng-aff300-05-06.crt /opt/harvest cd /opt/harvest Create a self-signed client key and certificate with the same name as the hostname where Harvest is running. It's not required to name the key/cert pair after the hostname, but if you do, Harvest will load them automatically when you specify auth_style: certificate_auth otherwise you can point to them directly. See Pollers for details. Change the common name to the ONTAP user you setup with the harvest role above. e.g harvest2 cd /opt/harvest mkdir cert openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout cert/$(hostname).key -out cert/$(hostname).pem -subj \"/CN=harvest2\"","title":"Create Client Certificates for Password-less Login"},{"location":"prepare-cdot-clusters/#install-client-certificates-on-cluster","text":"Login to your cluster with admin credentials and install the client certificate. Copy from cert/$(hostname).pem ssh admin@IP umeng-aff300-05-06::*> security certificate install -type client-ca -vserver umeng-aff300-05-06 Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate's CA and serial number for reference: CA: cbg Serial: B77B59444444CCCC The certificate's generated name for reference: cbg_B77B59444444CCCC Now that the client certificate is installed, let's enable it. umeng-aff300-05-06::*> ssl modify -vserver umeng-aff300-05-06 -client-enabled true (security ssl modify) Verify with a recent version of curl . If you are running on a Mac see below . curl --cacert umeng-aff300-05-06.crt --key cert/$(hostname).key --cert cert/$(hostname).pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks","title":"Install Client Certificates on Cluster"},{"location":"prepare-cdot-clusters/#update-harvestyml-to-use-client-certificates","text":"Update the poller section with auth_style: certificate_auth like this: u2-cert: auth_style: certificate_auth addr: umeng-aff300-05-06-cm.rtp.openenglab.netapp.com Restart your poller and enjoy your password-less life-style.","title":"Update Harvest.yml to use client certificates"},{"location":"prepare-cdot-clusters/#macos","text":"The version of curl installed on macOS up through Monterey is not recent enough to work with self-signed SAN certs. You will need to install a newer version of curl via Homebrew, MacPorts, source, etc. Example of failure when running with older version of curl - you will see this in client auth test step above. curl --version curl 7.64.1 (x86_64-apple-darwin20.0) libcurl/7.64.1 (SecureTransport) LibreSSL/2.8.3 zlib/1.2.11 nghttp2/1.41.0 curl --cacert umeng-aff300-05-06.crt --key cert/cgrindst-mac-0.key --cert cert/cgrindst-mac-0.pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks curl: (60) SSL certificate problem: unable to get local issuer certificate Let's install curl via Homebrew. Make sure you don't miss the message that Homebrew prints about your path. If you need to have curl first in your PATH, run: echo 'export PATH=\"/usr/local/opt/curl/bin:$PATH\"' >> /Users/cgrindst/.bash_profile Now when we make a client auth request with our self-signed certificate it works! \\o/ brew install curl curl --version curl 7.80.0 (x86_64-apple-darwin20.6.0) libcurl/7.80.0 (SecureTransport) OpenSSL/1.1.1l zlib/1.2.11 brotli/1.0.9 zstd/1.5.0 libidn2/2.3.2 libssh2/1.10.0 nghttp2/1.46.0 librtmp/2.3 OpenLDAP/2.6.0 Release-Date: 2021-11-10 Protocols: dict file ftp ftps gopher gophers http https imap imaps ldap ldaps mqtt pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp Features: alt-svc AsynchDNS brotli GSS-API HSTS HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz MultiSSL NTLM NTLM_WB SPNEGO SSL TLS-SRP UnixSockets zstd curl --cacert umeng-aff300-05-06.crt --key cert/cgrindst-mac-0.key --cert cert/cgrindst-mac-0.pem https://umeng-aff300-05-06-cm.rtp.openenglab.netapp.com/api/storage/disks { \"records\": [ { \"name\": \"1.1.22\", \"_links\": { \"self\": { \"href\": \"/api/storage/disks/1.1.22\" } } } } Change directory to your Harvest home directory (replace /opt/harvest/ if this is not the default): $ cd /opt/harvest/ Generate an SSL cert and key pair with the following command. Note that it's preferred to generate these files using the hostname of the local machine. The command below assumes debian8 as our hostname name and harvest2 as the user we created in the previous step: openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -keyout cert/debian8.key \\ -out cert/debian8.pem -subj \"/CN=harvest2\" Next, open the public key ( debian8.pem in our example) and copy all of its content. Login into your ONTAP CLI and run this command by replacing CLUSTER with the name of your cluster. security certificate install -type client-ca -vserver CLUSTER Paste the public key content and hit enter. Output should be similar to this: jamaica::> security certificate install -type client-ca -vserver jamaica Please enter Certificate: Press <Enter> when done -----BEGIN CERTIFICATE----- MIIDETCCAfmgAwIBAgIUP9EUXyl2BDSUOkNEcDU0yqbJ29IwDQYJKoZIhvcNAQEL BQAwGDEWMBQGA1UEAwwNaGFydmVzdDItY2xpMzAeFw0yMDEwMDkxMjA0MDhaFw0y MzEwMDktcGFueSBMdGQxFzAVBgNVBAMlc3QyLWNsaTMwggEiMA0tcGFueSBGCSqG SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCVVy25BeCRoGCJWFOlyUL7Ddkze4Hl2/6u qye/3mk5vBNsGuXUrtad5XfBB70Ez9hWl5sraLiY68ro6MyX1icjiUTeaYDvS/76 Iw7HeXJ5Pyb/fWth1nePunytoLyG/vaTCySINkIV5nlxC+k0X3wWFJdfJzhloPtt 1Vdm7aCF2q6a2oZRnUEBGQb6t5KyF0/Xh65mvfgB0pl/AS2HY5Gz+~L54Xyvs+BY V7UmTop7WBYl0L3QXLieERpHXnyOXmtwlm1vG5g4n/0DVBNTBXjEdvc6oRh8sxBN ZlQWRApE7pa/I1bLD7G2AiS4UcPmR4cEpPRVEsOFOaAN3Z3YskvnAgMBAAGjUzBR MB0GA1UdDgQWBBQr4syV6TCcgO/5EcU/F8L2YYF15jAfBgNVHSMEGDAWgBQr4syV 6TCcgO/5EcU/F8L2YYF15jAPBgNVHRMdfdfwerH/MA0GCSqGSIb^ECd3DQEBCwUA A4IBAQBjP1BVhClRKkO/M3zlWa2L9Ztce6SuGwSnm6Ebmbs+iMc7o2N9p3RmV6Xl h6NcdXRzzPAVrUoK8ewhnBzdghgIPoCI6inAf1CUhcCX2xcnE/osO+CfvKuFnPYE WQ7UNLsdfka0a9kTK13r3GMs09z/VsDs0gD8UhPjoeO7LQhdU9tJ/qOaSP3s48pv sYzZurHUgKmVOaOE4t9DAdevSECEWCETRETA $Vbn %@@@%%rcdrctru65ryFaByb+ hTtGhDnoHwzt/cAGvLGV/RyWdGFAbu7Fb1rV94ceggE7nh1FqbdLH9siot6LlnQN MhEWp5PYgndOW49dDYUxoauCCkiA -----END CERTIFICATE----- You should keep a copy of the CA-signed digital certificate for future reference. The installed certificate 's CA and serial number for reference: CA: harvest2 Serial: 3FD1145F2976043012213d3009095534CCRDBD2 The certificate' s generated name for reference: harvest2 Finally, we need to enable SSL authentication with the following command (replace CLUSTER with the name of your cluster): security ssl modify -client-enabled true -vserver CLUSTER","title":"macOS"},{"location":"prepare-cdot-clusters/#reference","text":"https://github.com/jcbsmpsn/golang-https-example","title":"Reference"},{"location":"prepare-fsx-clusters/","text":"Prepare Amazon FSx for ONTAP \u00b6 To set up Harvest and FSx make sure you read through Monitoring FSx for ONTAP file systems using Harvest and Grafana Supported Harvest Dashboards \u00b6 Amazon FSx for ONTAP exposes a different set of metrics than ONTAP cDOT. That means a limited set of out-of-the-box dashboards are supported and some panels may be missing information. The dashboards that work with FSx are tagged with fsx and listed below: ONTAP: Volume ONTAP: SVM ONTAP: Security ONTAP: Data Protection Snapshots ONTAP: Compliance ONTAP: Headroom (Only works for Rest Collector)","title":"Amazon FSx for ONTAP"},{"location":"prepare-fsx-clusters/#prepare-amazon-fsx-for-ontap","text":"To set up Harvest and FSx make sure you read through Monitoring FSx for ONTAP file systems using Harvest and Grafana","title":"Prepare Amazon FSx for ONTAP"},{"location":"prepare-fsx-clusters/#supported-harvest-dashboards","text":"Amazon FSx for ONTAP exposes a different set of metrics than ONTAP cDOT. That means a limited set of out-of-the-box dashboards are supported and some panels may be missing information. The dashboards that work with FSx are tagged with fsx and listed below: ONTAP: Volume ONTAP: SVM ONTAP: Security ONTAP: Data Protection Snapshots ONTAP: Compliance ONTAP: Headroom (Only works for Rest Collector)","title":"Supported Harvest Dashboards"},{"location":"prepare-storagegrid-clusters/","text":"Prepare StorageGRID cluster \u00b6 NetApp Harvest requires login credentials to access StorageGRID hosts. Although, a generic admin account can be used, it is better to create a dedicated monitoring user with the fewest permissions. Here's a summary of what we're going to do Create a StorageGRID group with the necessary capabilities that Harvest will use to auth and collect data Create a user assigned to the group created in step #1. Create StorageGRID group permissions \u00b6 These steps are documented here . You will need a root or admin account to create a new group permission. Select CONFIGURATION > Access control > Admin groups Select Create group Select Local group Enter a display name for the group, which you can update later as required. For example, Harvest or monitoring . Enter a unique name for the group, which you cannot update later. Select Continue On the Manage group permissions screen, select the permissions you want. At a minimum, Harvest requires the Tenant accounts and Metrics query permissions. Select Save changes Create a StorageGRID user \u00b6 These steps are documented here . You will need a root or admin account to create a new user. Select CONFIGURATION > Access control > Admin users Select Create user Enter the user\u2019s full name, a unique username, and a password. Select Continue . Assign the user to the previously created harvest group. Select Create user and select Finish. Reference \u00b6 See group permissions for more information on StorageGRID permissions.","title":"StorageGRID"},{"location":"prepare-storagegrid-clusters/#prepare-storagegrid-cluster","text":"NetApp Harvest requires login credentials to access StorageGRID hosts. Although, a generic admin account can be used, it is better to create a dedicated monitoring user with the fewest permissions. Here's a summary of what we're going to do Create a StorageGRID group with the necessary capabilities that Harvest will use to auth and collect data Create a user assigned to the group created in step #1.","title":"Prepare StorageGRID cluster"},{"location":"prepare-storagegrid-clusters/#create-storagegrid-group-permissions","text":"These steps are documented here . You will need a root or admin account to create a new group permission. Select CONFIGURATION > Access control > Admin groups Select Create group Select Local group Enter a display name for the group, which you can update later as required. For example, Harvest or monitoring . Enter a unique name for the group, which you cannot update later. Select Continue On the Manage group permissions screen, select the permissions you want. At a minimum, Harvest requires the Tenant accounts and Metrics query permissions. Select Save changes","title":"Create StorageGRID group permissions"},{"location":"prepare-storagegrid-clusters/#create-a-storagegrid-user","text":"These steps are documented here . You will need a root or admin account to create a new user. Select CONFIGURATION > Access control > Admin users Select Create user Enter the user\u2019s full name, a unique username, and a password. Select Continue . Assign the user to the previously created harvest group. Select Create user and select Finish.","title":"Create a StorageGRID user"},{"location":"prepare-storagegrid-clusters/#reference","text":"See group permissions for more information on StorageGRID permissions.","title":"Reference"},{"location":"prometheus-exporter/","text":"Prometheus Exporter \u00b6 Prometheus Install The information below describes how to setup Harvest's Prometheus exporter. If you need help installing or setting up Prometheus, check out their documention . Overview \u00b6 The Prometheus exporter is responsible for: formatting metrics into the Prometheus line protocol creating a web-endpoint on http://<ADDR>:<PORT>/metrics for Prometheus to scrape A web end-point is required because Prometheus scrapes Harvest by polling that end-point. In addition to the /metrics end-point, the Prometheus exporter also serves an overview of all metrics and collectors available on its root address http://<ADDR>:<PORT>/ . Because Prometheus polls Harvest, don't forget to update your Prometheus configuration and tell Prometheus how to scrape each poller. There are two ways to configure the Prometheus exporter: using a port range or individual port s. The port range is more flexible and should be used when you want multiple pollers all exporting to the same instance of Prometheus. Both options are explained below. Parameters \u00b6 All parameters of the exporter are defined in the Exporters section of harvest.yml . An overview of all parameters: parameter type description default port_range int-int (range), overrides port if specified lower port to upper port (inclusive) of the HTTP end-point to create when a poller specifies this exporter. Starting at lower port, each free port will be tried sequentially up to the upper port. port int, required if port_range is not specified port of the HTTP end-point local_http_addr string, optional address of the HTTP server Harvest starts for Prometheus to scrape: use localhost to serve only on the local machine use 0.0.0.0 (default) if Prometheus is scrapping from another machine 0.0.0.0 global_prefix string, optional add a prefix to all metrics (e.g. netapp_ ) allow_addrs list of strings, optional allow access only if host matches any of the provided addresses allow_addrs_regex list of strings, optional allow access only if host address matches at least one of the regular expressions cache_max_keep string (Go duration format), optional maximum amount of time metrics are cached (in case Prometheus does not timely collect the metrics) 300s add_meta_tags bool, optional add HELP and TYPE metatags to metrics (currently no useful information, but required by some tools) false sort_labels bool, optional sort metric labels before exporting. Some open-metrics scrapers report stale metrics when labels are not sorted. false A few examples: port_range \u00b6 Exporters : prom-prod : exporter : Prometheus port_range : 2000-2030 Pollers : cluster-01 : exporters : - prom-prod cluster-02 : exporters : - prom-prod cluster-03 : exporters : - prom-prod # ... more cluster-16 : exporters : - prom-prod Sixteen pollers will collect metrics from 16 clusters and make those metrics available to a single instance of Prometheus named prom-prod . Sixteen web end-points will be created on the first 16 available free ports between 2000 and 2030 (inclusive). After staring the pollers in the example above, running bin/harvest status shows the following. Note that ports 2000 and 2003 were not available so the next free port in the range was selected. If no free port can be found an error will be logged. Datacenter Poller PID PromPort Status ++++++++++++ ++++++++++++ +++++++ +++++++++ ++++++++++++++++++++ DC-01 cluster-01 2339 2001 running DC-01 cluster-02 2343 2002 running DC-01 cluster-03 2351 2004 running ... DC-01 cluster-14 2405 2015 running DC-01 cluster-15 2502 2016 running DC-01 cluster-16 2514 2017 running allow_addrs \u00b6 Exporters : my_prom : allow_addrs : - 192.168.0.102 - 192.168.0.103 will only allow access from exactly these two addresses. allow_addrs_regex \u00b6 Exporters : my_prom : allow_addrs_regex : - ` ^192.168.0.\\d+$` will only allow access from the IP4 range 192.168.0.0 - 192.168.0.255 . Configure Prometheus to scrape Harvest pollers \u00b6 There are two ways to tell Prometheus how to scrape Harvest: using HTTP service discovery (SD) or listing each poller individually. HTTP service discovery is the more flexible of the two. It is also less error-prone, and easier to manage. Combined with the port_range configuration described above, SD is the least effort to configure Prometheus and the easiest way to keep both Harvest and Prometheus in sync. NOTE HTTP service discovery does not work with Docker yet. With Docker, you will need to list each poller individually or if possible, use the Docker Compose workflow that uses file service discovery to achieve a similar ease-of-use as HTTP service discovery. See the example below for how to use HTTP SD and port_range together. Prometheus HTTP Service Discovery \u00b6 HTTP service discovery was introduced in Prometheus version 2.28.0. Make sure you're using that version or later. The way service discovery works is: shortly after a poller starts up, it registers with the SD node (if one exists) the poller sends a heartbeat to the SD node, by default every 45s. if a poller fails to send a heartbeat, the SD node removes the poller from the list of active targets after a minute the SD end-point is reachable via SCHEMA:// /api/v1/sd To use HTTP service discovery you need to: tell Harvest to start the HTTP service discovery process tell Prometheus to use the HTTP service discovery endpoint Enable HTTP service discovery in Harvest \u00b6 Add the following to your harvest.yml Admin : httpsd : listen : :8887 This tells Harvest to create an HTTP service discovery end-point on interface 0.0.0.0:8887 . If you want to only listen on localhost, use 127.0.0.1:<port> instead. See net.Dial for details on the supported listen formats. Start the SD process by running bin/harvest admin start . Once it is started, you can curl the end-point for the list of running Harvest pollers. curl -s 'http://localhost:8887/api/v1/sd' | jq . [ { \"targets\": [ \"10.0.1.55:12990\", \"10.0.1.55:15037\", \"127.0.0.1:15511\", \"127.0.0.1:15008\", \"127.0.0.1:15191\", \"10.0.1.55:15343\" ] } ] Harvest HTTP Service Discovery options \u00b6 HTTP service discovery (SD) is configured in the Admin > httpsd section of your harvest.yml . parameter type description default listen required Interface and port to listen on, use localhost:PORT or :PORT for all interfaces auth_basic optional If present, enables basic authentication on /api/v1/sd end-point auth_basic username , password required child of auth_basic tls optional If present, enables TLS transport. If running in a container, see note tls cert_file , key_file required child of tls Relative or absolute path to TLS certificate and key file. TLS 1.3 certificates required. FIPS complaint P-256 TLS 1.3 certificates can be created with bin/harvest admin tls create server ssl_cert , ssl_key optional if auth_style is certificate_auth Absolute paths to SSL (client) certificate and key used to authenticate with the target system. If not provided, the poller will look for <hostname>.key and <hostname>.pem in $HARVEST_HOME/cert/ . To create certificates for ONTAP systems, see using certificate authentication heart_beat optional, Go Duration format How frequently each poller sends a heartbeat message to the SD node 45s expire_after optional, Go Duration format If a poller fails to send a heartbeat, the SD node removes the poller after this duration 1m Enable HTTP service discovery in Prometheus \u00b6 Edit your prometheus.yml and add the following section $ vim /etc/prometheus/prometheus.yml scrape_configs : - job_name : harvest http_sd_configs : - url : http://localhost:8887/api/v1/sd Harvest and Prometheus both support basic authentication for HTTP SD end-points. To enable basic auth, add the following to your Harvest config. Admin : httpsd : listen : :8887 # Basic auth protects GETs and publishes auth_basic : username : admin password : admin Don't forget to also update your Prometheus config with the matching basic_auth credentials. Prometheus HTTP Service Discovery and Port Range \u00b6 HTTP SD combined with Harvest's port_range feature leads to significantly less configuration in your harvest.yml . For example, if your clusters all export to the same Prometheus instance, you can refactor the per-poller exporter into a single exporter shared by all clusters in Defaults as shown below: Notice that none of the pollers specify an exporter. Instead, all the pollers share the single exporter named prometheus-r listed in Defaults . prometheus-r is the only exporter defined and as specified will manage up to 1,000 Harvest Prometheus exporters. If you add or remove more clusters in the Pollers section, you do not have to change Prometheus since it dynamically pulls the targets from the Harvest admin node. Admin : httpsd : listen : :8887 Exporters : prometheus-r : exporter : Prometheus port_range : 13000-13999 Defaults : collectors : - Zapi - ZapiPerf use_insecure_tls : false auth_style : password username : admin password : pass exporters : - prometheus-r Pollers : umeng_aff300 : datacenter : meg addr : 10.193.48.11 F2240-127-26 : datacenter : meg addr : 10.193.6.61 # ... add more clusters Static Scrape Targets \u00b6 If we define four prometheus exporters at ports: 12990, 12991, 14567, and 14568 you need to add four sections to your prometheus.yml . $ vim /etc/prometheus/prometheus.yml Scroll down to near the end of file and add the following lines: - job_name : 'harvest' scrape_interval : 60s static_configs : - targets : - 'localhost:12990' - 'localhost:12991' - 'localhost:14567' - 'localhost:14568' NOTE If Prometheus is not on the same machine as Harvest, then replace localhost with the IP address of your Harvest machine. Also note the scrape interval above is set to 60s. That matches the polling frequency of the default Harvest collectors. If you change the polling frequency of a Harvest collector to a lower value, you should also change the scrape interval. Prometheus Alerts \u00b6 Prometheus includes out-of-the-box support for simple alerting. Alert rules are configured in your prometheus.yml file. Setup and details can be found in the Prometheus guide on alerting . Harvest also includes ems alerts and sample alerts for reference. Refer EMS Collector for more details about EMS events. Alertmanager \u00b6 Prometheus's builtin alerts are good for simple workflows. They do a nice job telling you what's happening at the moment. If you need a richer solution that includes summarization, notification, advanced delivery, deduplication, etc. checkout Alertmanager . Reference \u00b6 Prometheus Alerting Alertmanager Alertmanager's notification metrics Prometheus Linter Collection of example Prometheus Alerts","title":"Prometheus"},{"location":"prometheus-exporter/#prometheus-exporter","text":"Prometheus Install The information below describes how to setup Harvest's Prometheus exporter. If you need help installing or setting up Prometheus, check out their documention .","title":"Prometheus Exporter"},{"location":"prometheus-exporter/#overview","text":"The Prometheus exporter is responsible for: formatting metrics into the Prometheus line protocol creating a web-endpoint on http://<ADDR>:<PORT>/metrics for Prometheus to scrape A web end-point is required because Prometheus scrapes Harvest by polling that end-point. In addition to the /metrics end-point, the Prometheus exporter also serves an overview of all metrics and collectors available on its root address http://<ADDR>:<PORT>/ . Because Prometheus polls Harvest, don't forget to update your Prometheus configuration and tell Prometheus how to scrape each poller. There are two ways to configure the Prometheus exporter: using a port range or individual port s. The port range is more flexible and should be used when you want multiple pollers all exporting to the same instance of Prometheus. Both options are explained below.","title":"Overview"},{"location":"prometheus-exporter/#parameters","text":"All parameters of the exporter are defined in the Exporters section of harvest.yml . An overview of all parameters: parameter type description default port_range int-int (range), overrides port if specified lower port to upper port (inclusive) of the HTTP end-point to create when a poller specifies this exporter. Starting at lower port, each free port will be tried sequentially up to the upper port. port int, required if port_range is not specified port of the HTTP end-point local_http_addr string, optional address of the HTTP server Harvest starts for Prometheus to scrape: use localhost to serve only on the local machine use 0.0.0.0 (default) if Prometheus is scrapping from another machine 0.0.0.0 global_prefix string, optional add a prefix to all metrics (e.g. netapp_ ) allow_addrs list of strings, optional allow access only if host matches any of the provided addresses allow_addrs_regex list of strings, optional allow access only if host address matches at least one of the regular expressions cache_max_keep string (Go duration format), optional maximum amount of time metrics are cached (in case Prometheus does not timely collect the metrics) 300s add_meta_tags bool, optional add HELP and TYPE metatags to metrics (currently no useful information, but required by some tools) false sort_labels bool, optional sort metric labels before exporting. Some open-metrics scrapers report stale metrics when labels are not sorted. false A few examples:","title":"Parameters"},{"location":"prometheus-exporter/#port_range","text":"Exporters : prom-prod : exporter : Prometheus port_range : 2000-2030 Pollers : cluster-01 : exporters : - prom-prod cluster-02 : exporters : - prom-prod cluster-03 : exporters : - prom-prod # ... more cluster-16 : exporters : - prom-prod Sixteen pollers will collect metrics from 16 clusters and make those metrics available to a single instance of Prometheus named prom-prod . Sixteen web end-points will be created on the first 16 available free ports between 2000 and 2030 (inclusive). After staring the pollers in the example above, running bin/harvest status shows the following. Note that ports 2000 and 2003 were not available so the next free port in the range was selected. If no free port can be found an error will be logged. Datacenter Poller PID PromPort Status ++++++++++++ ++++++++++++ +++++++ +++++++++ ++++++++++++++++++++ DC-01 cluster-01 2339 2001 running DC-01 cluster-02 2343 2002 running DC-01 cluster-03 2351 2004 running ... DC-01 cluster-14 2405 2015 running DC-01 cluster-15 2502 2016 running DC-01 cluster-16 2514 2017 running","title":"port_range"},{"location":"prometheus-exporter/#allow_addrs","text":"Exporters : my_prom : allow_addrs : - 192.168.0.102 - 192.168.0.103 will only allow access from exactly these two addresses.","title":"allow_addrs"},{"location":"prometheus-exporter/#allow_addrs_regex","text":"Exporters : my_prom : allow_addrs_regex : - ` ^192.168.0.\\d+$` will only allow access from the IP4 range 192.168.0.0 - 192.168.0.255 .","title":"allow_addrs_regex"},{"location":"prometheus-exporter/#configure-prometheus-to-scrape-harvest-pollers","text":"There are two ways to tell Prometheus how to scrape Harvest: using HTTP service discovery (SD) or listing each poller individually. HTTP service discovery is the more flexible of the two. It is also less error-prone, and easier to manage. Combined with the port_range configuration described above, SD is the least effort to configure Prometheus and the easiest way to keep both Harvest and Prometheus in sync. NOTE HTTP service discovery does not work with Docker yet. With Docker, you will need to list each poller individually or if possible, use the Docker Compose workflow that uses file service discovery to achieve a similar ease-of-use as HTTP service discovery. See the example below for how to use HTTP SD and port_range together.","title":"Configure Prometheus to scrape Harvest pollers"},{"location":"prometheus-exporter/#prometheus-http-service-discovery","text":"HTTP service discovery was introduced in Prometheus version 2.28.0. Make sure you're using that version or later. The way service discovery works is: shortly after a poller starts up, it registers with the SD node (if one exists) the poller sends a heartbeat to the SD node, by default every 45s. if a poller fails to send a heartbeat, the SD node removes the poller from the list of active targets after a minute the SD end-point is reachable via SCHEMA:// /api/v1/sd To use HTTP service discovery you need to: tell Harvest to start the HTTP service discovery process tell Prometheus to use the HTTP service discovery endpoint","title":"Prometheus HTTP Service Discovery"},{"location":"prometheus-exporter/#enable-http-service-discovery-in-harvest","text":"Add the following to your harvest.yml Admin : httpsd : listen : :8887 This tells Harvest to create an HTTP service discovery end-point on interface 0.0.0.0:8887 . If you want to only listen on localhost, use 127.0.0.1:<port> instead. See net.Dial for details on the supported listen formats. Start the SD process by running bin/harvest admin start . Once it is started, you can curl the end-point for the list of running Harvest pollers. curl -s 'http://localhost:8887/api/v1/sd' | jq . [ { \"targets\": [ \"10.0.1.55:12990\", \"10.0.1.55:15037\", \"127.0.0.1:15511\", \"127.0.0.1:15008\", \"127.0.0.1:15191\", \"10.0.1.55:15343\" ] } ]","title":"Enable HTTP service discovery in Harvest"},{"location":"prometheus-exporter/#harvest-http-service-discovery-options","text":"HTTP service discovery (SD) is configured in the Admin > httpsd section of your harvest.yml . parameter type description default listen required Interface and port to listen on, use localhost:PORT or :PORT for all interfaces auth_basic optional If present, enables basic authentication on /api/v1/sd end-point auth_basic username , password required child of auth_basic tls optional If present, enables TLS transport. If running in a container, see note tls cert_file , key_file required child of tls Relative or absolute path to TLS certificate and key file. TLS 1.3 certificates required. FIPS complaint P-256 TLS 1.3 certificates can be created with bin/harvest admin tls create server ssl_cert , ssl_key optional if auth_style is certificate_auth Absolute paths to SSL (client) certificate and key used to authenticate with the target system. If not provided, the poller will look for <hostname>.key and <hostname>.pem in $HARVEST_HOME/cert/ . To create certificates for ONTAP systems, see using certificate authentication heart_beat optional, Go Duration format How frequently each poller sends a heartbeat message to the SD node 45s expire_after optional, Go Duration format If a poller fails to send a heartbeat, the SD node removes the poller after this duration 1m","title":"Harvest HTTP Service Discovery options"},{"location":"prometheus-exporter/#enable-http-service-discovery-in-prometheus","text":"Edit your prometheus.yml and add the following section $ vim /etc/prometheus/prometheus.yml scrape_configs : - job_name : harvest http_sd_configs : - url : http://localhost:8887/api/v1/sd Harvest and Prometheus both support basic authentication for HTTP SD end-points. To enable basic auth, add the following to your Harvest config. Admin : httpsd : listen : :8887 # Basic auth protects GETs and publishes auth_basic : username : admin password : admin Don't forget to also update your Prometheus config with the matching basic_auth credentials.","title":"Enable HTTP service discovery in Prometheus"},{"location":"prometheus-exporter/#prometheus-http-service-discovery-and-port-range","text":"HTTP SD combined with Harvest's port_range feature leads to significantly less configuration in your harvest.yml . For example, if your clusters all export to the same Prometheus instance, you can refactor the per-poller exporter into a single exporter shared by all clusters in Defaults as shown below: Notice that none of the pollers specify an exporter. Instead, all the pollers share the single exporter named prometheus-r listed in Defaults . prometheus-r is the only exporter defined and as specified will manage up to 1,000 Harvest Prometheus exporters. If you add or remove more clusters in the Pollers section, you do not have to change Prometheus since it dynamically pulls the targets from the Harvest admin node. Admin : httpsd : listen : :8887 Exporters : prometheus-r : exporter : Prometheus port_range : 13000-13999 Defaults : collectors : - Zapi - ZapiPerf use_insecure_tls : false auth_style : password username : admin password : pass exporters : - prometheus-r Pollers : umeng_aff300 : datacenter : meg addr : 10.193.48.11 F2240-127-26 : datacenter : meg addr : 10.193.6.61 # ... add more clusters","title":"Prometheus HTTP Service Discovery and Port Range"},{"location":"prometheus-exporter/#static-scrape-targets","text":"If we define four prometheus exporters at ports: 12990, 12991, 14567, and 14568 you need to add four sections to your prometheus.yml . $ vim /etc/prometheus/prometheus.yml Scroll down to near the end of file and add the following lines: - job_name : 'harvest' scrape_interval : 60s static_configs : - targets : - 'localhost:12990' - 'localhost:12991' - 'localhost:14567' - 'localhost:14568' NOTE If Prometheus is not on the same machine as Harvest, then replace localhost with the IP address of your Harvest machine. Also note the scrape interval above is set to 60s. That matches the polling frequency of the default Harvest collectors. If you change the polling frequency of a Harvest collector to a lower value, you should also change the scrape interval.","title":"Static Scrape Targets"},{"location":"prometheus-exporter/#prometheus-alerts","text":"Prometheus includes out-of-the-box support for simple alerting. Alert rules are configured in your prometheus.yml file. Setup and details can be found in the Prometheus guide on alerting . Harvest also includes ems alerts and sample alerts for reference. Refer EMS Collector for more details about EMS events.","title":"Prometheus Alerts"},{"location":"prometheus-exporter/#alertmanager","text":"Prometheus's builtin alerts are good for simple workflows. They do a nice job telling you what's happening at the moment. If you need a richer solution that includes summarization, notification, advanced delivery, deduplication, etc. checkout Alertmanager .","title":"Alertmanager"},{"location":"prometheus-exporter/#reference","text":"Prometheus Alerting Alertmanager Alertmanager's notification metrics Prometheus Linter Collection of example Prometheus Alerts","title":"Reference"},{"location":"quickstart/","text":"1. Configuration file \u00b6 Harvest's configuration information is defined in harvest.yml . There are a few ways to tell Harvest how to load this file: If you don't use the --config flag, the harvest.yml file located in the current working directory will be used If you specify the --config flag like so harvest status --config /opt/harvest/harvest.yml , Harvest will use that file To start collecting metrics, you need to define at least one poller and one exporter in your configuration file. The default configuration comes with a pre-configured poller named unix which collects metrics from the local system. This is useful if you want to monitor resource usage by Harvest and serves as a good example. Feel free to delete it if you want. The next step is to add pollers for your ONTAP clusters in the Pollers section of the Harvest configuration file, harvest.yml . 2. Start Harvest \u00b6 Start all Harvest pollers as daemons: bin/harvest start Or start a specific poller(s). In this case, we're staring two pollers named jamaica and jamaica . bin/harvest start jamaica jamaica Replace jamaica and grenada with the poller names you defined in harvest.yml . The logs of each poller can be found in /var/log/harvest/ . 3. Import Grafana dashboards \u00b6 The Grafana dashboards are located in the $HARVEST_HOME/grafana directory. You can manually import the dashboards or use the bin/harvest grafana command ( more documentation ). Note: the current dashboards specify Prometheus as the datasource. If you use the InfluxDB exporter, you will need to create your own dashboards. 4. Verify the metrics \u00b6 If you use a Prometheus Exporter, open a browser and navigate to http://0.0.0.0:12990/ (replace 12990 with the port number of your poller). This is the Harvest created HTTP end-point for your Prometheus exporter. This page provides a real-time generated list of running collectors and names of exported metrics. The metric data that is exported for Prometheus to scrap is available at http://0.0.0.0:12990/metrics/ . More information on configuring the exporter can be found in the Prometheus exporter documentation. If you can't access the URL, check the logs of your pollers. These are located in /var/log/harvest/ . 5. (Optional) Setup Systemd service files \u00b6 If you're running Harvest on a system with Systemd, you may want to take advantage of systemd instantiated units to manage your pollers.","title":"Quickstart"},{"location":"quickstart/#1-configuration-file","text":"Harvest's configuration information is defined in harvest.yml . There are a few ways to tell Harvest how to load this file: If you don't use the --config flag, the harvest.yml file located in the current working directory will be used If you specify the --config flag like so harvest status --config /opt/harvest/harvest.yml , Harvest will use that file To start collecting metrics, you need to define at least one poller and one exporter in your configuration file. The default configuration comes with a pre-configured poller named unix which collects metrics from the local system. This is useful if you want to monitor resource usage by Harvest and serves as a good example. Feel free to delete it if you want. The next step is to add pollers for your ONTAP clusters in the Pollers section of the Harvest configuration file, harvest.yml .","title":"1. Configuration file"},{"location":"quickstart/#2-start-harvest","text":"Start all Harvest pollers as daemons: bin/harvest start Or start a specific poller(s). In this case, we're staring two pollers named jamaica and jamaica . bin/harvest start jamaica jamaica Replace jamaica and grenada with the poller names you defined in harvest.yml . The logs of each poller can be found in /var/log/harvest/ .","title":"2. Start Harvest"},{"location":"quickstart/#3-import-grafana-dashboards","text":"The Grafana dashboards are located in the $HARVEST_HOME/grafana directory. You can manually import the dashboards or use the bin/harvest grafana command ( more documentation ). Note: the current dashboards specify Prometheus as the datasource. If you use the InfluxDB exporter, you will need to create your own dashboards.","title":"3. Import Grafana dashboards"},{"location":"quickstart/#4-verify-the-metrics","text":"If you use a Prometheus Exporter, open a browser and navigate to http://0.0.0.0:12990/ (replace 12990 with the port number of your poller). This is the Harvest created HTTP end-point for your Prometheus exporter. This page provides a real-time generated list of running collectors and names of exported metrics. The metric data that is exported for Prometheus to scrap is available at http://0.0.0.0:12990/metrics/ . More information on configuring the exporter can be found in the Prometheus exporter documentation. If you can't access the URL, check the logs of your pollers. These are located in /var/log/harvest/ .","title":"4. Verify the metrics"},{"location":"quickstart/#5-optional-setup-systemd-service-files","text":"If you're running Harvest on a system with Systemd, you may want to take advantage of systemd instantiated units to manage your pollers.","title":"5. (Optional) Setup Systemd service files"},{"location":"release-notes/","text":"Changelog Releases","title":"Release Notes"},{"location":"system-requirements/","text":"Harvest is written in Go, which means it runs on recent Linux systems. It also runs on Macs for development. Hardware requirements depend on how many clusters you monitor and the number of metrics you chose to collect. With the default configuration, when monitoring 10 clusters, we recommend: CPU: 2 cores Memory: 1 GB Disk: 500 MB (mostly used by log files) Harvest is compatible with: Prometheus: 2.26 or higher InfluxDB: v2 Grafana: 8.1.X or higher Docker: 20.10.0 or higher and compatible Docker Compose","title":"System Requirements"},{"location":"troubleshooting/","text":"Troubleshooting Harvest FAQ NABox Troubleshooting","title":"Troubleshoot"},{"location":"upgrade/","text":"To upgrade Harvest Stop harvest cd <existing harvest directory> bin/harvest stop Verify that all pollers have stopped: bin/harvest status or pgrep --full '\\-\\-poller' # should return nothing if all pollers are stopped Follow the installation instructions to download and install Harvest and then copy your old harvest.yml into the new install directory like so: cp /path/to/old/harvest/harvest.yml /path/to/new/harvest.yml After upgrade, re-import all dashboards (either bin/harvest grafana import cli or via the Grafana UI) to get any new enhancements in dashboards.","title":"Upgrade"},{"location":"architecture/rest-collector/","text":"REST collector \u00b6 Status \u00b6 ~~Accepted~~ Superseded by REST strategy The exact version of ONTAP that has full ZAPI parity is subject to change. Everywhere you see version 9.12, may become 9.13 or later. Context \u00b6 We need to document and communicate to customers: - when they should switch from the ZAPI collectors to the REST ones - what versions of ONTAP are supported by Harvest's REST collectors - how to fill ONTAP gaps between the ZAPI and REST APIs The ONTAP version information is important because gaps are addressed in later versions of cDOT. Considered Options \u00b6 Only REST A clean cut-over, stop using ZAPI, and switch completely to REST. Both Support both ZAPI and REST collectors running at the same time, collecting the same objects. Flexible, but has the downside of last-write wins. Not recommended unless you selectively pick non-overlapping sets of objects. Template change that supports both Change the template to break ties, priority, etc. Rejected because additional complexity not worth the benefits. private-cli When there are REST gaps that have not been filled yet or will never be filled (WONTFIX), the Harvest REST collector will provide infrastructure and documentation on how to use private-cli pass-through to address gaps. Chosen Decision \u00b6 For clusters with ONTAP versions < 9.12, we recommend customers use the ZAPI collectors. (#2) (#4) Once ONTAP 9.12+ is released and customers have upgraded to it, they should make a clean cut-over to the REST collectors (#1). ONTAP 9.12 is the version of ONTAP that has the best parity with what Harvest collects in terms of config and performance counters. Harvest REST collectors, templates, and dashboards are validated against ONTAP 9.12+. Most of the REST config templates will work before 9.12, but unless you have specific needs, we recommend sticking with the ZAPI collectors until you upgrade to 9.12. There is little value in running both the ZAPI and REST collectors for an overlapping set of objects. It's unlikely you want to collect the same object via REST and ZAPI at the same time. Harvest doesn't support this use-case, but does nothing to detect or prevent it. If you want to collect a non-overlapping set of objects with REST and ZAPI, you can. If you do, we recommend you disable the ZAPI object collector. For example, if you enable the REST disk template, you should disable the ZAPI disk template. We do NOT recommend collecting an overlapping set of objects with both collectors since the last one to run will overwrite previously collected data. Harvest will document how to use the REST private cli pass-through to collect custom and non-public counters. The Harvest team recommends that customers open ONTAP issues for REST public API gaps that need filled. Consequences \u00b6 The Harvest REST collectors will work with limitations on earlier versions of ONTAP. ONTAP 9.12+ is the minimally validated version. We only validate the full set of templates, dashboards, counters, etc. on versions of ONTAP 9.12+ Harvest does not prevent you from collecting the same resource with ZAPI and REST.","title":"REST collector"},{"location":"architecture/rest-collector/#rest-collector","text":"","title":"REST collector"},{"location":"architecture/rest-collector/#status","text":"~~Accepted~~ Superseded by REST strategy The exact version of ONTAP that has full ZAPI parity is subject to change. Everywhere you see version 9.12, may become 9.13 or later.","title":"Status "},{"location":"architecture/rest-collector/#context","text":"We need to document and communicate to customers: - when they should switch from the ZAPI collectors to the REST ones - what versions of ONTAP are supported by Harvest's REST collectors - how to fill ONTAP gaps between the ZAPI and REST APIs The ONTAP version information is important because gaps are addressed in later versions of cDOT.","title":"Context"},{"location":"architecture/rest-collector/#considered-options","text":"Only REST A clean cut-over, stop using ZAPI, and switch completely to REST. Both Support both ZAPI and REST collectors running at the same time, collecting the same objects. Flexible, but has the downside of last-write wins. Not recommended unless you selectively pick non-overlapping sets of objects. Template change that supports both Change the template to break ties, priority, etc. Rejected because additional complexity not worth the benefits. private-cli When there are REST gaps that have not been filled yet or will never be filled (WONTFIX), the Harvest REST collector will provide infrastructure and documentation on how to use private-cli pass-through to address gaps.","title":"Considered Options"},{"location":"architecture/rest-collector/#chosen-decision","text":"For clusters with ONTAP versions < 9.12, we recommend customers use the ZAPI collectors. (#2) (#4) Once ONTAP 9.12+ is released and customers have upgraded to it, they should make a clean cut-over to the REST collectors (#1). ONTAP 9.12 is the version of ONTAP that has the best parity with what Harvest collects in terms of config and performance counters. Harvest REST collectors, templates, and dashboards are validated against ONTAP 9.12+. Most of the REST config templates will work before 9.12, but unless you have specific needs, we recommend sticking with the ZAPI collectors until you upgrade to 9.12. There is little value in running both the ZAPI and REST collectors for an overlapping set of objects. It's unlikely you want to collect the same object via REST and ZAPI at the same time. Harvest doesn't support this use-case, but does nothing to detect or prevent it. If you want to collect a non-overlapping set of objects with REST and ZAPI, you can. If you do, we recommend you disable the ZAPI object collector. For example, if you enable the REST disk template, you should disable the ZAPI disk template. We do NOT recommend collecting an overlapping set of objects with both collectors since the last one to run will overwrite previously collected data. Harvest will document how to use the REST private cli pass-through to collect custom and non-public counters. The Harvest team recommends that customers open ONTAP issues for REST public API gaps that need filled.","title":"Chosen Decision"},{"location":"architecture/rest-collector/#consequences","text":"The Harvest REST collectors will work with limitations on earlier versions of ONTAP. ONTAP 9.12+ is the minimally validated version. We only validate the full set of templates, dashboards, counters, etc. on versions of ONTAP 9.12+ Harvest does not prevent you from collecting the same resource with ZAPI and REST.","title":"Consequences"},{"location":"architecture/rest-strategy/","text":"REST Strategy \u00b6 Status \u00b6 Accepted Context \u00b6 ONTAP has published a customer product communiqu\u00e9 (CPC-00410) announcing that ZAPIs will reach end of availability (EOA) in ONTAP 9.13.1 released Q2 2023. This document describes how Harvest handles the ONTAP transition from ZAPI to REST. In most cases, no action is required on your part. Harvest API Transition \u00b6 By default, Harvest will use ZAPIs until ONTAP version 9.12.1 . Beginning with ONTAP 9.12.1 and after, Harvest will default to REST. Harvest includes a full set of REST templates that export identical metrics as the included ZAPI templates. No changes to dashboards or downstream metric-consumers will be required. See below if you have added metrics to the Harvest out-of-the-box templates. Read on if you want to know how you can use REST sooner, or you want to take advantage of REST-only features in ONTAP. Frequently Asked Questions \u00b6 How does Harvest decide whether to use REST or ZAPI APIs? \u00b6 Harvest asks the cluster for its ONTAP version: If the version is earlier than 9.12.1 , Harvest will use the collector(s) defined in your harvest.yml . If the version is 9.12.1 or later, Harvest will use REST, unless the HARVEST_NO_COLLECTOR_UPGRADE environment variable is set or the prefer_zapi poller option is true. When the environment variable or prefer_zapi option are set, Harvest will use ZAPIs unless the cluster no longer talks ZAPI. graph TD A(Harvest asks the cluster<br>for its ONTAP version) --> B(Version before<br>9.12.X?) A --> C(9.12.X) A --> D(9.13.X) B --> AA{Does your harvest.yml<br>specify a REST collector?} AA -->|No| F(Use ZAPI) AA -->|Yes|G(Use REST) C --> CC{Is HARVEST_NO_COLLECTOR_UPGRADE<br>environment variable set?<br><br>Or is the prefer_zapi poller option setset?} CC --> |No| G CC --> |Yes|CZ(Use ZAPI) D --> X(Use REST) Why would I switch to REST before 9.13.1 ? \u00b6 You have advanced use cases to validate before ONTAP removes ZAPIs in 9.13.1 You want to take advantage of new ONTAP features that are only available via REST (e.g. cloud features, event remediation's, name services, cluster peers, etc.) You want to collect a metric that is not available via ZAPI You want to collect a metric from the ONTAP CLI. The REST API includes a private CLI pass-through to access any ONTAP CLI command Can I start using REST before 9.13.1 ? \u00b6 Yes. Several customers already are. Be aware of the following limitations: Harvest collects config counters via REST by enabling the Rest collector in your harvest.yml , but ONTAP did not include performance counters via REST until 9.11.1 . That means Harvest's RestPerf collector won't work until 9.11.1 . ONTAP supports a subset of performance counters in 9.11.1 . The full set is available in 9.12.1 . There may be performance metrics missing from versions of ONTAP earlier than 9.11.1 . A counter is missing from REST. What do I do? \u00b6 The Harvest team has ensured that all the out-of-the-box ZAPI templates have matching REST templates with the same metrics. Any additional counters you have added may be missing in REST. Join the Harvest discord channel and ask us about the counter. Sometimes we may know which release the missing counter is coming in, otherwise we can point you to the ONTAP process to request new counters . Can I use the REST and ZAPI collectors at the same time? \u00b6 Yes. Harvest ensures that duplicate resources are not collected from both collectors. When there is potential duplication, Harvest first resolves the conflict in the order collectors are defined in your poller and then negotiates with the cluster on the most appropriate API to use per above . Let's take a look at a few examples using the following poller definition: cluster-1 : datacenter : dc-1 addr : 10.1.1.1 collectors : - Zapi - Rest When cluster-1 is running ONTAP 9.9.X (ONTAP still supports ZAPIs), the Zapi collector will be used since it is listed first in the list of collectors . When collecting a REST-only resource like, nfs_client , the Rest collector will be used since nfs_client objects are only available via REST. When cluster-1 is running ONTAP 9.12.1 (ONTAP still supports ZAPIs), the Rest collector will be used since Harvest automatically uses REST for clusters at 9.12.1 or later. When cluster-1 is running ONTAP 9.12.1 (ONTAP still supports ZAPIs) and the environment variable HARVEST_NO_COLLECTOR_UPGRADE is set, the Zapi collector will be used because of the included environment variable. When cluster-1 is running ONTAP 9.15.1 (ONTAP removed ZAPIs) and the environment variable HARVEST_NO_COLLECTOR_UPGRADE is set, the Rest collector will be used since Harvest asks the cluster if it speaks ZAPI and the cluster answers no. If you want the REST collector to be preferred over the ZAPI one, change the order in the collectors section so Rest comes before Zapi . If the resource does not exist for the first collector, the next collector will be tried. For example, when collecting VolumeAnalytics resources, the Zapi collector will not run because VolumeAnalytics objects are only available via REST. I've added counters to existing ZAPI templates. Will those counters work in REST? \u00b6 ZAPI config metrics often have a REST equivalent that can be found in ONTAP's ONTAPI to REST mapping document . ZAPI performance metrics may be missing in REST. If you have added new metrics or templates to the ZAPIPerf collector, those metrics likely aren't available via REST. You can check if the performance counter is available or ask the Harvest team on Discord . I'm using ONTAP version 9.12.X, but I want to continue using ZAPIs. How do I do that? \u00b6 There are two options: Set the environment variable HARVEST_NO_COLLECTOR_UPGRADE=1 and Harvest will not upgrade your collector from ZAPI to REST. Edit your harvest.yml config file and add the prefer_zapi option to the poller section. See configure Harvest for details. Reference \u00b6 Table of ONTAP versions, dates and API notes. ONTAP version Release Date ONTAP Notes 9.11.1 Q2 2022 First version with REST performance metrics 9.12.1 Q4 2022 ZAPIs still supported - REST performance metrics have parity with Harvest collected ZAPI performance metrics 9.13.1 Q2 2023 ZAPIs removed. REST only release - REST config and performance parity with ZAPIs","title":"REST Strategy"},{"location":"architecture/rest-strategy/#rest-strategy","text":"","title":"REST Strategy"},{"location":"architecture/rest-strategy/#status","text":"Accepted","title":"Status "},{"location":"architecture/rest-strategy/#context","text":"ONTAP has published a customer product communiqu\u00e9 (CPC-00410) announcing that ZAPIs will reach end of availability (EOA) in ONTAP 9.13.1 released Q2 2023. This document describes how Harvest handles the ONTAP transition from ZAPI to REST. In most cases, no action is required on your part.","title":"Context"},{"location":"architecture/rest-strategy/#harvest-api-transition","text":"By default, Harvest will use ZAPIs until ONTAP version 9.12.1 . Beginning with ONTAP 9.12.1 and after, Harvest will default to REST. Harvest includes a full set of REST templates that export identical metrics as the included ZAPI templates. No changes to dashboards or downstream metric-consumers will be required. See below if you have added metrics to the Harvest out-of-the-box templates. Read on if you want to know how you can use REST sooner, or you want to take advantage of REST-only features in ONTAP.","title":"Harvest API Transition"},{"location":"architecture/rest-strategy/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"architecture/rest-strategy/#how-does-harvest-decide-whether-to-use-rest-or-zapi-apis","text":"Harvest asks the cluster for its ONTAP version: If the version is earlier than 9.12.1 , Harvest will use the collector(s) defined in your harvest.yml . If the version is 9.12.1 or later, Harvest will use REST, unless the HARVEST_NO_COLLECTOR_UPGRADE environment variable is set or the prefer_zapi poller option is true. When the environment variable or prefer_zapi option are set, Harvest will use ZAPIs unless the cluster no longer talks ZAPI. graph TD A(Harvest asks the cluster<br>for its ONTAP version) --> B(Version before<br>9.12.X?) A --> C(9.12.X) A --> D(9.13.X) B --> AA{Does your harvest.yml<br>specify a REST collector?} AA -->|No| F(Use ZAPI) AA -->|Yes|G(Use REST) C --> CC{Is HARVEST_NO_COLLECTOR_UPGRADE<br>environment variable set?<br><br>Or is the prefer_zapi poller option setset?} CC --> |No| G CC --> |Yes|CZ(Use ZAPI) D --> X(Use REST)","title":"How does Harvest decide whether to use REST or ZAPI APIs?"},{"location":"architecture/rest-strategy/#why-would-i-switch-to-rest-before-9131","text":"You have advanced use cases to validate before ONTAP removes ZAPIs in 9.13.1 You want to take advantage of new ONTAP features that are only available via REST (e.g. cloud features, event remediation's, name services, cluster peers, etc.) You want to collect a metric that is not available via ZAPI You want to collect a metric from the ONTAP CLI. The REST API includes a private CLI pass-through to access any ONTAP CLI command","title":"Why would I switch to REST before 9.13.1?"},{"location":"architecture/rest-strategy/#can-i-start-using-rest-before-9131","text":"Yes. Several customers already are. Be aware of the following limitations: Harvest collects config counters via REST by enabling the Rest collector in your harvest.yml , but ONTAP did not include performance counters via REST until 9.11.1 . That means Harvest's RestPerf collector won't work until 9.11.1 . ONTAP supports a subset of performance counters in 9.11.1 . The full set is available in 9.12.1 . There may be performance metrics missing from versions of ONTAP earlier than 9.11.1 .","title":"Can I start using REST before 9.13.1?"},{"location":"architecture/rest-strategy/#a-counter-is-missing-from-rest-what-do-i-do","text":"The Harvest team has ensured that all the out-of-the-box ZAPI templates have matching REST templates with the same metrics. Any additional counters you have added may be missing in REST. Join the Harvest discord channel and ask us about the counter. Sometimes we may know which release the missing counter is coming in, otherwise we can point you to the ONTAP process to request new counters .","title":"A counter is missing from REST. What do I do?"},{"location":"architecture/rest-strategy/#can-i-use-the-rest-and-zapi-collectors-at-the-same-time","text":"Yes. Harvest ensures that duplicate resources are not collected from both collectors. When there is potential duplication, Harvest first resolves the conflict in the order collectors are defined in your poller and then negotiates with the cluster on the most appropriate API to use per above . Let's take a look at a few examples using the following poller definition: cluster-1 : datacenter : dc-1 addr : 10.1.1.1 collectors : - Zapi - Rest When cluster-1 is running ONTAP 9.9.X (ONTAP still supports ZAPIs), the Zapi collector will be used since it is listed first in the list of collectors . When collecting a REST-only resource like, nfs_client , the Rest collector will be used since nfs_client objects are only available via REST. When cluster-1 is running ONTAP 9.12.1 (ONTAP still supports ZAPIs), the Rest collector will be used since Harvest automatically uses REST for clusters at 9.12.1 or later. When cluster-1 is running ONTAP 9.12.1 (ONTAP still supports ZAPIs) and the environment variable HARVEST_NO_COLLECTOR_UPGRADE is set, the Zapi collector will be used because of the included environment variable. When cluster-1 is running ONTAP 9.15.1 (ONTAP removed ZAPIs) and the environment variable HARVEST_NO_COLLECTOR_UPGRADE is set, the Rest collector will be used since Harvest asks the cluster if it speaks ZAPI and the cluster answers no. If you want the REST collector to be preferred over the ZAPI one, change the order in the collectors section so Rest comes before Zapi . If the resource does not exist for the first collector, the next collector will be tried. For example, when collecting VolumeAnalytics resources, the Zapi collector will not run because VolumeAnalytics objects are only available via REST.","title":"Can I use the REST and ZAPI collectors at the same time?"},{"location":"architecture/rest-strategy/#ive-added-counters-to-existing-zapi-templates-will-those-counters-work-in-rest","text":"ZAPI config metrics often have a REST equivalent that can be found in ONTAP's ONTAPI to REST mapping document . ZAPI performance metrics may be missing in REST. If you have added new metrics or templates to the ZAPIPerf collector, those metrics likely aren't available via REST. You can check if the performance counter is available or ask the Harvest team on Discord .","title":"I've added counters to existing ZAPI templates. Will those counters work in REST?"},{"location":"architecture/rest-strategy/#im-using-ontap-version-912x-but-i-want-to-continue-using-zapis-how-do-i-do-that","text":"There are two options: Set the environment variable HARVEST_NO_COLLECTOR_UPGRADE=1 and Harvest will not upgrade your collector from ZAPI to REST. Edit your harvest.yml config file and add the prefer_zapi option to the poller section. See configure Harvest for details.","title":"I'm using ONTAP version 9.12.X, but I want to continue using ZAPIs. How do I do that?"},{"location":"architecture/rest-strategy/#reference","text":"Table of ONTAP versions, dates and API notes. ONTAP version Release Date ONTAP Notes 9.11.1 Q2 2022 First version with REST performance metrics 9.12.1 Q4 2022 ZAPIs still supported - REST performance metrics have parity with Harvest collected ZAPI performance metrics 9.13.1 Q2 2023 ZAPIs removed. REST only release - REST config and performance parity with ZAPIs","title":"Reference"},{"location":"install/containers/","text":"Overview \u00b6 Harvest is container-ready and supports several deployment options: Stand-up Prometheus, Grafana, and Harvest via Docker Compose . Choose this if you want to hit the ground running. Install, volume and network mounts automatically handled. Poller-per-container model that offers more flexibility in configuration. This deployment enables a broad range of orchestrators (Nomad, Mesosphere, Swarm, K8, etc.) since you pick-and-choose what gets built and how it's deployed, stronger familiarity with containers is recommended. If you prefer Ansible, David Blackwell created an Ansible script that stands up Harvest, Grafana, and Prometheus. Want to run Harvest on a Mac via containerd and Racher Desktop ? We got you covered. K8 Deployment via Kompose Docker Compose \u00b6 This is a quick way to install and get started with Harvest. Follow the four steps below to: Setup Harvest, Grafana, and Prometheus via Docker Compose Harvest dashboards are automatically imported and setup in Grafana with a Prometheus data source A separate poller container is created for each monitored cluster All pollers are automatically added as Prometheus scrape targets Download and untar \u00b6 Download the latest version of Harvest , untar, and cd into the harvest directory. Setup harvest.yml \u00b6 Create a harvest.yml file with your cluster details, below is an example with annotated comments. Modify as needed for your scenario. This config is using the Prometheus exporter port_range feature, so you don't have to manage the Prometheus exporter port mappings for each poller. Exporters: prometheus1: exporter: Prometheus addr: 0.0.0.0 port_range: 2000-2030 # <====== adjust to be greater than equal to the number of monitored clusters Defaults: collectors: - Zapi - ZapiPerf use_insecure_tls: true # <====== adjust as needed to enable/disable TLS checks exporters: - prometheus1 Pollers: infinity: # <====== add your cluster(s) here, they use the exporter defined three lines above datacenter: DC-01 addr: 10.0.1.2 auth_style: basic_auth username: user password: 123#abc # next cluster .... Generate a Docker compose for your Pollers \u00b6 Generate a Docker compose file from your harvest.yml bin/harvest generate docker full --port --output harvest-compose.yml generate docker full does two things: Creates a Docker compose file with a container for each Harvest poller defined in your harvest.yml Creates a matching Prometheus service discovery file for each Harvest poller (located in container/prometheus/harvest_targets.yml ). Prometheus uses this file to scrape the Harvest pollers. Start everything \u00b6 Bring everything up docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans Prometheus and Grafana \u00b6 The prom-stack.yml compose file creates a frontend and backend network. Prometheus and Grafana publish their admin ports on the front-end network and are routable to the local machine. By default, the Harvest pollers are part of the backend network and also expose their Prometheus web end-points. If you do not want their end-points exposed, remove the --port option from the generate sub-command in the previous step . Prometheus \u00b6 After bringing up the prom-stack.yml compose file, you can check Prometheus's list of targets at http://IP_OF_PROMETHEUS:9090/targets . Grafana \u00b6 After bringing up the prom-stack.yml compose file, you can access Grafana at http://IP_OF_GRAFANA:3000 . You will be prompted to create a new password the first time you log in. Grafana's default credentials are username: admin password: admin Manage pollers \u00b6 How do I add a new poller? \u00b6 Add poller to harvest.yml Regenerate compose file by running bin/harvest generate Run docker compose up , for example, docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans Stop all containers \u00b6 docker-compose -f prom-stack.yml -f harvest-compose.yml down Upgrade Harvest \u00b6 Note: If you want to keep your historical Prometheus data, and you set up your Docker Compose workflow before Harvest 22.11 , please read how to migrate your Prometheus volume before continuing with the upgrade steps below. To upgrade Harvest: Download the latest tar.gz or packaged version and install it. This is needed since the new version may contain new templates, dashboards, or other files not included in the Docker image. Copy your existing harvest.yml into the new Harvest directory created in step #1. Regenerate your harvest-compose.yml file by running bin/harvest generate docker full --output harvest-compose.yml By default, generate will use the latest tag. If you want to upgrade to a nightly build see the twisty. I want to upgrade to a nightly build Tell the generate cmd to use a different tag like so: bin/harvest generate docker full --image ghcr.io/netapp/harvest:nightly --output harvest-compose.yml Pull new images and restart your containers like so: docker pull ghcr.io/netapp/harvest # or if using Docker Hub: docker pull rahulguptajss/harvest docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans","title":"Containers"},{"location":"install/containers/#overview","text":"Harvest is container-ready and supports several deployment options: Stand-up Prometheus, Grafana, and Harvest via Docker Compose . Choose this if you want to hit the ground running. Install, volume and network mounts automatically handled. Poller-per-container model that offers more flexibility in configuration. This deployment enables a broad range of orchestrators (Nomad, Mesosphere, Swarm, K8, etc.) since you pick-and-choose what gets built and how it's deployed, stronger familiarity with containers is recommended. If you prefer Ansible, David Blackwell created an Ansible script that stands up Harvest, Grafana, and Prometheus. Want to run Harvest on a Mac via containerd and Racher Desktop ? We got you covered. K8 Deployment via Kompose","title":"Overview"},{"location":"install/containers/#docker-compose","text":"This is a quick way to install and get started with Harvest. Follow the four steps below to: Setup Harvest, Grafana, and Prometheus via Docker Compose Harvest dashboards are automatically imported and setup in Grafana with a Prometheus data source A separate poller container is created for each monitored cluster All pollers are automatically added as Prometheus scrape targets","title":"Docker Compose"},{"location":"install/containers/#download-and-untar","text":"Download the latest version of Harvest , untar, and cd into the harvest directory.","title":"Download and untar"},{"location":"install/containers/#setup-harvestyml","text":"Create a harvest.yml file with your cluster details, below is an example with annotated comments. Modify as needed for your scenario. This config is using the Prometheus exporter port_range feature, so you don't have to manage the Prometheus exporter port mappings for each poller. Exporters: prometheus1: exporter: Prometheus addr: 0.0.0.0 port_range: 2000-2030 # <====== adjust to be greater than equal to the number of monitored clusters Defaults: collectors: - Zapi - ZapiPerf use_insecure_tls: true # <====== adjust as needed to enable/disable TLS checks exporters: - prometheus1 Pollers: infinity: # <====== add your cluster(s) here, they use the exporter defined three lines above datacenter: DC-01 addr: 10.0.1.2 auth_style: basic_auth username: user password: 123#abc # next cluster ....","title":"Setup harvest.yml"},{"location":"install/containers/#generate-a-docker-compose-for-your-pollers","text":"Generate a Docker compose file from your harvest.yml bin/harvest generate docker full --port --output harvest-compose.yml generate docker full does two things: Creates a Docker compose file with a container for each Harvest poller defined in your harvest.yml Creates a matching Prometheus service discovery file for each Harvest poller (located in container/prometheus/harvest_targets.yml ). Prometheus uses this file to scrape the Harvest pollers.","title":"Generate a Docker compose for your Pollers"},{"location":"install/containers/#start-everything","text":"Bring everything up docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans","title":"Start everything"},{"location":"install/containers/#prometheus-and-grafana","text":"The prom-stack.yml compose file creates a frontend and backend network. Prometheus and Grafana publish their admin ports on the front-end network and are routable to the local machine. By default, the Harvest pollers are part of the backend network and also expose their Prometheus web end-points. If you do not want their end-points exposed, remove the --port option from the generate sub-command in the previous step .","title":"Prometheus and Grafana"},{"location":"install/containers/#prometheus","text":"After bringing up the prom-stack.yml compose file, you can check Prometheus's list of targets at http://IP_OF_PROMETHEUS:9090/targets .","title":"Prometheus"},{"location":"install/containers/#grafana","text":"After bringing up the prom-stack.yml compose file, you can access Grafana at http://IP_OF_GRAFANA:3000 . You will be prompted to create a new password the first time you log in. Grafana's default credentials are username: admin password: admin","title":"Grafana"},{"location":"install/containers/#manage-pollers","text":"","title":"Manage pollers"},{"location":"install/containers/#how-do-i-add-a-new-poller","text":"Add poller to harvest.yml Regenerate compose file by running bin/harvest generate Run docker compose up , for example, docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans","title":"How do I add a new poller?"},{"location":"install/containers/#stop-all-containers","text":"docker-compose -f prom-stack.yml -f harvest-compose.yml down","title":"Stop all containers"},{"location":"install/containers/#upgrade-harvest","text":"Note: If you want to keep your historical Prometheus data, and you set up your Docker Compose workflow before Harvest 22.11 , please read how to migrate your Prometheus volume before continuing with the upgrade steps below. To upgrade Harvest: Download the latest tar.gz or packaged version and install it. This is needed since the new version may contain new templates, dashboards, or other files not included in the Docker image. Copy your existing harvest.yml into the new Harvest directory created in step #1. Regenerate your harvest-compose.yml file by running bin/harvest generate docker full --output harvest-compose.yml By default, generate will use the latest tag. If you want to upgrade to a nightly build see the twisty. I want to upgrade to a nightly build Tell the generate cmd to use a different tag like so: bin/harvest generate docker full --image ghcr.io/netapp/harvest:nightly --output harvest-compose.yml Pull new images and restart your containers like so: docker pull ghcr.io/netapp/harvest # or if using Docker Hub: docker pull rahulguptajss/harvest docker-compose -f prom-stack.yml -f harvest-compose.yml up -d --remove-orphans","title":"Upgrade Harvest"},{"location":"install/native/","text":"Native \u00b6 Visit the Releases page and copy the tar.gz link for the latest release. For example, to download the v22.08.0 release: wget https://github.com/NetApp/harvest/releases/download/v22.08.0/harvest-22.08.0-1_linux_amd64.tar.gz tar -xvf harvest-22.08.0-1_linux_amd64.tar.gz cd harvest-22.08.0-1_linux_amd64 # Run Harvest with the default unix localhost collector bin/harvest start With curl If you don't have wget installed, you can use curl like so: curl -L -O https://github.com/NetApp/harvest/releases/download/v22.08.0/harvest-22.08.0-1_linux_amd64.tar.gz It's best to run Harvest as a non-root user. Make sure the user running Harvest can write to /var/log/harvest/ or tell Harvest to write the logs somewhere else with the HARVEST_LOGS environment variable. If something goes wrong, examine the logs files in /var/log/harvest , check out the troubleshooting section on the wiki and jump onto Discord and ask for help.","title":"Native"},{"location":"install/native/#native","text":"Visit the Releases page and copy the tar.gz link for the latest release. For example, to download the v22.08.0 release: wget https://github.com/NetApp/harvest/releases/download/v22.08.0/harvest-22.08.0-1_linux_amd64.tar.gz tar -xvf harvest-22.08.0-1_linux_amd64.tar.gz cd harvest-22.08.0-1_linux_amd64 # Run Harvest with the default unix localhost collector bin/harvest start With curl If you don't have wget installed, you can use curl like so: curl -L -O https://github.com/NetApp/harvest/releases/download/v22.08.0/harvest-22.08.0-1_linux_amd64.tar.gz It's best to run Harvest as a non-root user. Make sure the user running Harvest can write to /var/log/harvest/ or tell Harvest to write the logs somewhere else with the HARVEST_LOGS environment variable. If something goes wrong, examine the logs files in /var/log/harvest , check out the troubleshooting section on the wiki and jump onto Discord and ask for help.","title":"Native"},{"location":"install/overview/","text":"Get up and running with Harvest on your preferred platform. We provide pre-compiled binaries for Linux, RPMs, Debs, as well as prebuilt container images for both nightly and stable releases . Binaries for Linux RPM and Debs Containers Nabox \u00b6 Instructions on how to install Harvest via NAbox . Source \u00b6 To build Harvest from source code, first make sure you have a working Go environment with version 1.19 or greater installed . Clone the repo and build everything. git clone https://github.com/NetApp/harvest.git cd harvest make build bin/harvest version If you're building on a Mac use GOOS=darwin make build Checkout the Makefile for other targets of interest.","title":"Overview"},{"location":"install/overview/#nabox","text":"Instructions on how to install Harvest via NAbox .","title":"Nabox"},{"location":"install/overview/#source","text":"To build Harvest from source code, first make sure you have a working Go environment with version 1.19 or greater installed . Clone the repo and build everything. git clone https://github.com/NetApp/harvest.git cd harvest make build bin/harvest version If you're building on a Mac use GOOS=darwin make build Checkout the Makefile for other targets of interest.","title":"Source"},{"location":"install/package-managers/","text":"Redhat \u00b6 Installation and upgrade of the Harvest package may require root or administrator privileges Download the latest rpm of Harvest from the releases tab and install or upgrade with yum. sudo yum install harvest.XXX.rpm Once the installation has finished, edit the harvest.yml configuration file located in /opt/harvest/harvest.yml After editing /opt/harvest/harvest.yml , manage Harvest with systemctl start|stop|restart harvest . After upgrade, re-import all dashboards (either bin/harvest grafana import cli or via the Grafana UI) to get any new enhancements in dashboards. To ensure that you don't run into permission issues , make sure you manage Harvest using systemctl instead of running the harvest binary directly. Changes install makes Directories /var/log/harvest/ and /var/log/run/ are created A harvest user and group are created and the installed files are chowned to harvest Systemd /etc/systemd/system/harvest.service file is created and enabled Debian \u00b6 Installation and upgrade of the Harvest package may require root or administrator privileges Download the latest deb of Harvest from the releases tab and install or upgrade with apt. sudo apt update sudo apt install|upgrade ./harvest-<RELEASE>.amd64.deb Once the installation has finished, edit the harvest.yml configuration file located in /opt/harvest/harvest.yml After editing /opt/harvest/harvest.yml , manage Harvest with systemctl start|stop|restart harvest . After upgrade, re-import all dashboards (either bin/harvest grafana import cli or via the Grafana UI) to get any new enhancements in dashboards. To ensure that you don't run into permission issues , make sure you manage Harvest using systemctl instead of running the harvest binary directly. Changes install makes Directories /var/log/harvest/ and /var/log/run/ are created A harvest user and group are created and the installed files are chowned to harvest Systemd /etc/systemd/system/harvest.service file is created and enabled","title":"Package Managers"},{"location":"install/package-managers/#redhat","text":"Installation and upgrade of the Harvest package may require root or administrator privileges Download the latest rpm of Harvest from the releases tab and install or upgrade with yum. sudo yum install harvest.XXX.rpm Once the installation has finished, edit the harvest.yml configuration file located in /opt/harvest/harvest.yml After editing /opt/harvest/harvest.yml , manage Harvest with systemctl start|stop|restart harvest . After upgrade, re-import all dashboards (either bin/harvest grafana import cli or via the Grafana UI) to get any new enhancements in dashboards. To ensure that you don't run into permission issues , make sure you manage Harvest using systemctl instead of running the harvest binary directly. Changes install makes Directories /var/log/harvest/ and /var/log/run/ are created A harvest user and group are created and the installed files are chowned to harvest Systemd /etc/systemd/system/harvest.service file is created and enabled","title":"Redhat"},{"location":"install/package-managers/#debian","text":"Installation and upgrade of the Harvest package may require root or administrator privileges Download the latest deb of Harvest from the releases tab and install or upgrade with apt. sudo apt update sudo apt install|upgrade ./harvest-<RELEASE>.amd64.deb Once the installation has finished, edit the harvest.yml configuration file located in /opt/harvest/harvest.yml After editing /opt/harvest/harvest.yml , manage Harvest with systemctl start|stop|restart harvest . After upgrade, re-import all dashboards (either bin/harvest grafana import cli or via the Grafana UI) to get any new enhancements in dashboards. To ensure that you don't run into permission issues , make sure you manage Harvest using systemctl instead of running the harvest binary directly. Changes install makes Directories /var/log/harvest/ and /var/log/run/ are created A harvest user and group are created and the installed files are chowned to harvest Systemd /etc/systemd/system/harvest.service file is created and enabled","title":"Debian"},{"location":"resources/matrix/","text":"Matrix \u00b6 The \u2133atri\u03c7 package provides the matrix.Matrix data-structure for storage, manipulation and transmission of both numeric and non-numeric (string) data. It is utilized by core components of Harvest, including collectors, plugins and exporters. It furthermore serves as an interface between these components, such that \"the left hand does not know what the right hand does\". Internally, the Matrix is a collection of metrics ( matrix.Metric ) and instances ( matrix.Instance ) in the form of a 2-dimensional array: Since we use hash tables for accessing the elements of the array, all metrics and instances added to the matrix must have a unique key. Metrics are typed and contain the numeric data (i.e. rows) of the Matrix. Instances only serve as pointers to the columents of the Matrix, but they also store non-numeric data as labels ( *dict.Dict ). This package is the architectural backbone of Harvest, therefore understanding it is key for an advanced user or contributor. Basic Usage \u00b6 Initialize \u00b6 func matrix . New ( name , object string , identifier string ) * Matrix // always returns successfully pointer to (empty) Matrix This section describes how to properly initialize a new Matrix instance. Note that if you write a collector, a Matrix instance is already properly initialized for you (as MyCollector.matrix ), and if you write a plugin or exporter, it is passed to you from the collector. That means most of the time you don't have to worry about initializing the Matrix. matrix.New() requires three arguments: * UUID is by convention the collector name (e.g. MyCollector ) if the Matrix comes from a collector, or the collector name and the plugin name concatenated with a . (e.g. MyCollector.MyPlugin ) if the Matrix comes from a plugin. * object is a description of the instances of the Matrix. For example, if we collect data about cars and our instances are cars, a good name would be car . * identifier is a unique key used to identify a matrix instance Note that identifier should uniquely identify a Matrix instance. This is not a strict requirement, but guarantees that your data is properly handled by exporters. Example \u00b6 Here is an example from the point of view of a collector: import \"github.com/netapp/harvest/v2/pkg/matrix\" var myMatrix * matrix . Matrix myMatrix = matrix . New ( \"CarCollector\" , \"car\" , \"car\" ) Next step is to add metrics and instances to our Matrix. Add instances and instance labels \u00b6 func ( x * Matrix ) NewInstance ( key string ) ( * Instance , error ) // returns pointer to a new Instance, or nil with error (if key is not unique) func ( i * Instance ) SetLabel ( key , value string ) // always successful, overwrites existing values func ( i * Instance ) GetLabel ( key ) string // always returns value, if label is not set, returns empty string Once we have initialized a Matrix, we can add instances and add labels to our instances. Example \u00b6 var ( instance * matrix . Instance err error ) if instance , err = myMatrix . NewInstance ( \"SomeCarMark\" ); err != nil { return err // or handle err, but beware that instance is nil } instance . SetLabel ( \"mark\" , \"SomeCarMark\" ) instance . SetLabel ( \"color\" , \"red\" ) instance . SetLabel ( \"style\" , \"coupe\" ) // add as many labels as you like instance . GetLabel ( \"color\" ) // return \"red\" instance . GetLabel ( \"owner\" ) // returns \"\" Add Metrics \u00b6 func ( x * Matrix ) NewMetricInt64 ( key string ) ( Metric , error ) // returns pointer to a new MetricInt64, or nil with error (if key is not unique) // note that Metric is an interface Metrics are typed and there are currently 8 types, all can be created with the same signature as above: * MetricUint8 * MetricUint32 * MetricUint64 * MetricInt * MetricInt32 * MetricInt64 * MetricFloat32 * MetricFloat64 * We are able to read from and write to a metric instance using different types (as displayed in the next section), however choosing a type wisely ensures that this is done efficiently and overflow does not occur. We can add labels to metrics just like instances. This is usually done when we deal with histograms: func ( m Metric ) SetLabel ( key , value string ) // always successful, overwrites existing values func ( m Metric ) GetLabel ( key ) string // always returns value, if label is not set, returns empty string Example \u00b6 Continuing our Matrix for collecting car-related data: var ( speed , length matrix . Metric err error ) if speed , err = myMatrix . NewMetricUint32 ( \"max_speed\" ); err != nil { return err } if length , err = myMatrix . NewMetricFloat32 ( \"length_in_mm\" ); err != nil { return err } Write numeric data \u00b6 func ( x * Matrix ) Reset () // flush numeric data from previous poll func ( m Metric ) SetValueInt64 ( i * Instance , v int64 ) error func ( m Metric ) SetValueUint8 ( i * Instance , v uint8 ) error func ( m Metric ) SetValueUint64 ( i * Instance , v uint64 ) error func ( m Metric ) SetValueFloat64 ( i * Instance , v float64 ) error func ( m Metric ) SetValueBytes ( i * Instance , v [] byte ) error func ( m Metric ) SetValueString ( i * Instance , v [] string ) error // sets the numeric value for the instance i to v // returns error if v is invalid (explained below) func ( m Metric ) AddValueInt64 ( i * Instance , v int64 ) error // increments the numeric value for the instance i by v // same signatures for all the types defined above When possible you should reuse a Matrix for each data poll, but to do that, you need to call Reset() to drop old data from the Matrix. It is safe to add new instances and metrics after calling this method. The SetValue*() and AddValue*() methods are typed same as the metrics. Even though you are not required to use the same type as the metric, it is the safest and most efficient way. Since most collectors get their data as bytes or strings, it is recommended to use the SetValueString() and SetValueBytes() methods. These methods return an error if value v can not be converted to the type of the metric. Error is always nil when the type of v matches the type of the metric. Example \u00b6 Continuing with the previous examples: if err = myMatrix . Reset (); err != nil { return } // write numbers to the matrix using the instance and the metrics we have created // let the metric do the conversion for us if err = speed . SetValueString ( instance , \"500\" ); err != nil { logger . Error ( me . Prefix , \"set speed value: \" , err ) } // here we ignore err since type is the metric type length . SetValueFloat64 ( instance , 10000.00 ) // safe to add new instances var instance2 matrix . Instance if instance2 , err = myMatrix . NewInstance ( \"SomeOtherCar\" ); err != nil { return err } // possible and safe even though speed has type Float32 } if err = length . SetValueInt64 ( instance2 , 13000 ); err != nil { logger . Error ( me . Prefix , \"set speed value:\" , err ) } // possible, but will overflow since speed is unsigned } if err = speed . SetValueInt64 ( instance2 , - 500 ); err != nil { logger . Error ( me . Prefix , \"set length value:\" , err ) } Read metrics and instances \u00b6 In this section we switch gears and look at the Matrix from the point of view of plugins and exporters. Both those components need to read from the Matrix and have no knowledge of its origin or contents. func ( x * Matrix ) GetMetrics () map [ string ] Metric // returns all metrics in the Matrix func ( x * Matrix ) GetInstances () map [ string ] * Instance // returns all instances in the Matrix Usually we will do a nested loop with these two methods to read all data in the Matrix. See examples below. Example: Iterate over instances \u00b6 In this example the method PrintKeys() will iterate over a Matrix and print all metric and instance keys. func PrintKeys ( x * matrix . Matrix ) { for instanceKey , _ := range x . GetInstances () { fmt . Println ( \"instance key=\" , instanceKey ) } } Example: Read instance labels \u00b6 Each instance has a set of labels. We can iterate over these labels with the GetLabel() and GetLabels() method. In this example, we write a function that prints all labels of an instance: func PrintLabels ( instance * matrix . Instance ) { for label , value , := range instance . GetLabels (). Map () { fmt . Printf ( \"%s=%s\\n\" , label , value ) } } Example: Read metric values labels \u00b6 Similar to the SetValue* and AddValue* methods, you can choose a type when reading from a metric. If you don't know the type of the metric, it is safe to read it as a string. In this example, we write a function that prints the value of a metric for all instances in a Matrix: func PrintMetricValues ( x * matrix . Matrix , m matrix . Metric ) { for key , instance := range x . GetInstances () { if value , has := m . GetValueString ( instance ) { fmt . Printf ( \"instance %s = %s\\n\" , key , value ) } else { fmt . Printf ( \"instance %s has no value\\n\" , key ) } } }","title":"Matrix"},{"location":"resources/matrix/#matrix","text":"The \u2133atri\u03c7 package provides the matrix.Matrix data-structure for storage, manipulation and transmission of both numeric and non-numeric (string) data. It is utilized by core components of Harvest, including collectors, plugins and exporters. It furthermore serves as an interface between these components, such that \"the left hand does not know what the right hand does\". Internally, the Matrix is a collection of metrics ( matrix.Metric ) and instances ( matrix.Instance ) in the form of a 2-dimensional array: Since we use hash tables for accessing the elements of the array, all metrics and instances added to the matrix must have a unique key. Metrics are typed and contain the numeric data (i.e. rows) of the Matrix. Instances only serve as pointers to the columents of the Matrix, but they also store non-numeric data as labels ( *dict.Dict ). This package is the architectural backbone of Harvest, therefore understanding it is key for an advanced user or contributor.","title":"Matrix"},{"location":"resources/matrix/#basic-usage","text":"","title":"Basic Usage"},{"location":"resources/matrix/#initialize","text":"func matrix . New ( name , object string , identifier string ) * Matrix // always returns successfully pointer to (empty) Matrix This section describes how to properly initialize a new Matrix instance. Note that if you write a collector, a Matrix instance is already properly initialized for you (as MyCollector.matrix ), and if you write a plugin or exporter, it is passed to you from the collector. That means most of the time you don't have to worry about initializing the Matrix. matrix.New() requires three arguments: * UUID is by convention the collector name (e.g. MyCollector ) if the Matrix comes from a collector, or the collector name and the plugin name concatenated with a . (e.g. MyCollector.MyPlugin ) if the Matrix comes from a plugin. * object is a description of the instances of the Matrix. For example, if we collect data about cars and our instances are cars, a good name would be car . * identifier is a unique key used to identify a matrix instance Note that identifier should uniquely identify a Matrix instance. This is not a strict requirement, but guarantees that your data is properly handled by exporters.","title":"Initialize"},{"location":"resources/matrix/#example","text":"Here is an example from the point of view of a collector: import \"github.com/netapp/harvest/v2/pkg/matrix\" var myMatrix * matrix . Matrix myMatrix = matrix . New ( \"CarCollector\" , \"car\" , \"car\" ) Next step is to add metrics and instances to our Matrix.","title":"Example"},{"location":"resources/matrix/#add-instances-and-instance-labels","text":"func ( x * Matrix ) NewInstance ( key string ) ( * Instance , error ) // returns pointer to a new Instance, or nil with error (if key is not unique) func ( i * Instance ) SetLabel ( key , value string ) // always successful, overwrites existing values func ( i * Instance ) GetLabel ( key ) string // always returns value, if label is not set, returns empty string Once we have initialized a Matrix, we can add instances and add labels to our instances.","title":"Add instances and instance labels"},{"location":"resources/matrix/#example_1","text":"var ( instance * matrix . Instance err error ) if instance , err = myMatrix . NewInstance ( \"SomeCarMark\" ); err != nil { return err // or handle err, but beware that instance is nil } instance . SetLabel ( \"mark\" , \"SomeCarMark\" ) instance . SetLabel ( \"color\" , \"red\" ) instance . SetLabel ( \"style\" , \"coupe\" ) // add as many labels as you like instance . GetLabel ( \"color\" ) // return \"red\" instance . GetLabel ( \"owner\" ) // returns \"\"","title":"Example"},{"location":"resources/matrix/#add-metrics","text":"func ( x * Matrix ) NewMetricInt64 ( key string ) ( Metric , error ) // returns pointer to a new MetricInt64, or nil with error (if key is not unique) // note that Metric is an interface Metrics are typed and there are currently 8 types, all can be created with the same signature as above: * MetricUint8 * MetricUint32 * MetricUint64 * MetricInt * MetricInt32 * MetricInt64 * MetricFloat32 * MetricFloat64 * We are able to read from and write to a metric instance using different types (as displayed in the next section), however choosing a type wisely ensures that this is done efficiently and overflow does not occur. We can add labels to metrics just like instances. This is usually done when we deal with histograms: func ( m Metric ) SetLabel ( key , value string ) // always successful, overwrites existing values func ( m Metric ) GetLabel ( key ) string // always returns value, if label is not set, returns empty string","title":"Add Metrics"},{"location":"resources/matrix/#example_2","text":"Continuing our Matrix for collecting car-related data: var ( speed , length matrix . Metric err error ) if speed , err = myMatrix . NewMetricUint32 ( \"max_speed\" ); err != nil { return err } if length , err = myMatrix . NewMetricFloat32 ( \"length_in_mm\" ); err != nil { return err }","title":"Example"},{"location":"resources/matrix/#write-numeric-data","text":"func ( x * Matrix ) Reset () // flush numeric data from previous poll func ( m Metric ) SetValueInt64 ( i * Instance , v int64 ) error func ( m Metric ) SetValueUint8 ( i * Instance , v uint8 ) error func ( m Metric ) SetValueUint64 ( i * Instance , v uint64 ) error func ( m Metric ) SetValueFloat64 ( i * Instance , v float64 ) error func ( m Metric ) SetValueBytes ( i * Instance , v [] byte ) error func ( m Metric ) SetValueString ( i * Instance , v [] string ) error // sets the numeric value for the instance i to v // returns error if v is invalid (explained below) func ( m Metric ) AddValueInt64 ( i * Instance , v int64 ) error // increments the numeric value for the instance i by v // same signatures for all the types defined above When possible you should reuse a Matrix for each data poll, but to do that, you need to call Reset() to drop old data from the Matrix. It is safe to add new instances and metrics after calling this method. The SetValue*() and AddValue*() methods are typed same as the metrics. Even though you are not required to use the same type as the metric, it is the safest and most efficient way. Since most collectors get their data as bytes or strings, it is recommended to use the SetValueString() and SetValueBytes() methods. These methods return an error if value v can not be converted to the type of the metric. Error is always nil when the type of v matches the type of the metric.","title":"Write numeric data"},{"location":"resources/matrix/#example_3","text":"Continuing with the previous examples: if err = myMatrix . Reset (); err != nil { return } // write numbers to the matrix using the instance and the metrics we have created // let the metric do the conversion for us if err = speed . SetValueString ( instance , \"500\" ); err != nil { logger . Error ( me . Prefix , \"set speed value: \" , err ) } // here we ignore err since type is the metric type length . SetValueFloat64 ( instance , 10000.00 ) // safe to add new instances var instance2 matrix . Instance if instance2 , err = myMatrix . NewInstance ( \"SomeOtherCar\" ); err != nil { return err } // possible and safe even though speed has type Float32 } if err = length . SetValueInt64 ( instance2 , 13000 ); err != nil { logger . Error ( me . Prefix , \"set speed value:\" , err ) } // possible, but will overflow since speed is unsigned } if err = speed . SetValueInt64 ( instance2 , - 500 ); err != nil { logger . Error ( me . Prefix , \"set length value:\" , err ) }","title":"Example"},{"location":"resources/matrix/#read-metrics-and-instances","text":"In this section we switch gears and look at the Matrix from the point of view of plugins and exporters. Both those components need to read from the Matrix and have no knowledge of its origin or contents. func ( x * Matrix ) GetMetrics () map [ string ] Metric // returns all metrics in the Matrix func ( x * Matrix ) GetInstances () map [ string ] * Instance // returns all instances in the Matrix Usually we will do a nested loop with these two methods to read all data in the Matrix. See examples below.","title":"Read metrics and instances"},{"location":"resources/matrix/#example-iterate-over-instances","text":"In this example the method PrintKeys() will iterate over a Matrix and print all metric and instance keys. func PrintKeys ( x * matrix . Matrix ) { for instanceKey , _ := range x . GetInstances () { fmt . Println ( \"instance key=\" , instanceKey ) } }","title":"Example: Iterate over instances"},{"location":"resources/matrix/#example-read-instance-labels","text":"Each instance has a set of labels. We can iterate over these labels with the GetLabel() and GetLabels() method. In this example, we write a function that prints all labels of an instance: func PrintLabels ( instance * matrix . Instance ) { for label , value , := range instance . GetLabels (). Map () { fmt . Printf ( \"%s=%s\\n\" , label , value ) } }","title":"Example: Read instance labels"},{"location":"resources/matrix/#example-read-metric-values-labels","text":"Similar to the SetValue* and AddValue* methods, you can choose a type when reading from a metric. If you don't know the type of the metric, it is safe to read it as a string. In this example, we write a function that prints the value of a metric for all instances in a Matrix: func PrintMetricValues ( x * matrix . Matrix , m matrix . Metric ) { for key , instance := range x . GetInstances () { if value , has := m . GetValueString ( instance ) { fmt . Printf ( \"instance %s = %s\\n\" , key , value ) } else { fmt . Printf ( \"instance %s has no value\\n\" , key ) } } }","title":"Example: Read metric values labels"},{"location":"resources/rest-perf-metrics/","text":"This document describes implementation details about ONTAP's REST performance metrics endpoints, including how we built the Harvest RESTPerf collectors. Warning These are implemenation details about ONTAP's REST performance metrics. You do not need to understand any of this to use Harvest. If you want to know how to use or configure Harvest's REST collectors, checkout the Rest Collector documentation instead. If you're interested in the gory details. Read on. Introduction \u00b6 ONTAP REST metrics were introduced in ONTAP 9.11.1 and included parity with Harvest-collected ZAPI performance metrics by ONTAP 9.12.1 . Performance REST queries \u00b6 Mapping table ZAPI REST Comment perf-object-counter-list-info /api/cluster/counter/tables returns counter tables and schemas perf-object-instance-list-info-iter /api/cluster/counter/tables/{name}/rows returns instances and counter values perf-object-get-instances /api/cluster/counter/tables/{name}/rows returns instances and counter values Performance REST responses include properties and counters . Counters are metric-like, while properties include instance attributes. Examples \u00b6 Ask ONTAP for all resources that report performance metrics \u00b6 curl 'https://$clusterIP/api/cluster/counter/tables' Response { \"records\" : [ { \"name\" : \"copy_manager\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/copy_manager\" } } }, { \"name\" : \"copy_manager:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/copy_manager%3Aconstituent\" } } }, { \"name\" : \"disk\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk\" } } }, { \"name\" : \"disk:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk%3Aconstituent\" } } }, { \"name\" : \"disk:raid_group\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk%3Araid_group\" } } }, { \"name\" : \"external_cache\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/external_cache\" } } }, { \"name\" : \"fcp\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp\" } } }, { \"name\" : \"fcp:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp%3Anode\" } } }, { \"name\" : \"fcp_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif\" } } }, { \"name\" : \"fcp_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Anode\" } } }, { \"name\" : \"fcp_lif:port\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Aport\" } } }, { \"name\" : \"fcp_lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Asvm\" } } }, { \"name\" : \"fcvi\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcvi\" } } }, { \"name\" : \"headroom_aggregate\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/headroom_aggregate\" } } }, { \"name\" : \"headroom_cpu\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/headroom_cpu\" } } }, { \"name\" : \"host_adapter\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/host_adapter\" } } }, { \"name\" : \"iscsi_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif\" } } }, { \"name\" : \"iscsi_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif%3Anode\" } } }, { \"name\" : \"iscsi_lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif%3Asvm\" } } }, { \"name\" : \"lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lif\" } } }, { \"name\" : \"lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lif%3Asvm\" } } }, { \"name\" : \"lun\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun\" } } }, { \"name\" : \"lun:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun%3Aconstituent\" } } }, { \"name\" : \"lun:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun%3Anode\" } } }, { \"name\" : \"namespace\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/namespace\" } } }, { \"name\" : \"namespace:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/namespace%3Aconstituent\" } } }, { \"name\" : \"nfs_v4_diag\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nfs_v4_diag\" } } }, { \"name\" : \"nic_common\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nic_common\" } } }, { \"name\" : \"nvmf_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif\" } } }, { \"name\" : \"nvmf_lif:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Aconstituent\" } } }, { \"name\" : \"nvmf_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Anode\" } } }, { \"name\" : \"nvmf_lif:port\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Aport\" } } }, { \"name\" : \"object_store_client_op\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/object_store_client_op\" } } }, { \"name\" : \"path\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/path\" } } }, { \"name\" : \"processor\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/processor\" } } }, { \"name\" : \"processor:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/processor%3Anode\" } } }, { \"name\" : \"qos\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos\" } } }, { \"name\" : \"qos:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos%3Aconstituent\" } } }, { \"name\" : \"qos:policy_group\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos%3Apolicy_group\" } } }, { \"name\" : \"qos_detail\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_detail\" } } }, { \"name\" : \"qos_detail_volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_detail_volume\" } } }, { \"name\" : \"qos_volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_volume\" } } }, { \"name\" : \"qos_volume:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_volume%3Aconstituent\" } } }, { \"name\" : \"qtree\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qtree\" } } }, { \"name\" : \"qtree:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qtree%3Aconstituent\" } } }, { \"name\" : \"svm_cifs\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs\" } } }, { \"name\" : \"svm_cifs:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs%3Aconstituent\" } } }, { \"name\" : \"svm_cifs:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs%3Anode\" } } }, { \"name\" : \"svm_nfs_v3\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3\" } } }, { \"name\" : \"svm_nfs_v3:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v3:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3%3Anode\" } } }, { \"name\" : \"svm_nfs_v4\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4\" } } }, { \"name\" : \"svm_nfs_v41\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41\" } } }, { \"name\" : \"svm_nfs_v41:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v41:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41%3Anode\" } } }, { \"name\" : \"svm_nfs_v42\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42\" } } }, { \"name\" : \"svm_nfs_v42:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v42:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42%3Anode\" } } }, { \"name\" : \"svm_nfs_v4:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v4:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4%3Anode\" } } }, { \"name\" : \"system\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system\" } } }, { \"name\" : \"system:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system%3Aconstituent\" } } }, { \"name\" : \"system:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system%3Anode\" } } }, { \"name\" : \"token_manager\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/token_manager\" } } }, { \"name\" : \"volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume\" } } }, { \"name\" : \"volume:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume%3Anode\" } } }, { \"name\" : \"volume:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume%3Asvm\" } } }, { \"name\" : \"wafl\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl\" } } }, { \"name\" : \"wafl_comp_aggr_vol_bin\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_comp_aggr_vol_bin\" } } }, { \"name\" : \"wafl_hya_per_aggregate\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_hya_per_aggregate\" } } }, { \"name\" : \"wafl_hya_sizer\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_hya_sizer\" } } } ], \"num_records\" : 71 , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/\" } } } Node performance metrics metadata \u00b6 Ask ONTAP to return the schema for system:node . This will include the name, description, and metadata for all counters associated with system:node . curl 'https://$clusterIP/api/cluster/counter/tables/system:node?return_records=true' Response { \"name\" : \"system:node\" , \"description\" : \"The System table reports general system activity. This includes global throughput for the main services, I/O latency, and CPU activity. The alias name for system:node is system_node.\" , \"counter_schemas\" : [ { \"name\" : \"average_processor_busy_percent\" , \"description\" : \"Average processor utilization across all processors in the system\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cifs_ops\" , \"description\" : \"Number of CIFS operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"cp\" , \"description\" : \"CP time rate\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cp_time\" , \"description\" : \"Processor time in CP\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"cpu_busy\" , \"description\" : \"System CPU resource utilization. Returns a computed percentage for the default CPU field. Basically computes a 'cpu usage summary' value which indicates how 'busy' the system is based upon the most heavily utilized domain. The idea is to determine the amount of available CPU until we're limited by either a domain maxing out OR we exhaust all available idle CPU cycles, whichever occurs first.\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cpu_elapsed_time\" , \"description\" : \"Elapsed time since boot\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"disk_data_read\" , \"description\" : \"Number of disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"disk_data_written\" , \"description\" : \"Number of disk kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"domain_busy\" , \"description\" : \"Array of processor time in percentage spent in various domains\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"domain_shared\" , \"description\" : \"Array of processor time in percentage spent in various shared domains\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"dswitchto_cnt\" , \"description\" : \"Array of processor time in percentage spent in domain switch\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"fcp_data_received\" , \"description\" : \"Number of FCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"fcp_data_sent\" , \"description\" : \"Number of FCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"fcp_ops\" , \"description\" : \"Number of FCP operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"hard_switches\" , \"description\" : \"Number of context switches per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"hdd_data_read\" , \"description\" : \"Number of HDD Disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"hdd_data_written\" , \"description\" : \"Number of HDD kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"idle\" , \"description\" : \"Processor idle rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"idle_time\" , \"description\" : \"Processor idle time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"instance_name\" , \"description\" : \"Node name\" , \"type\" : \"string\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt\" , \"description\" : \"Processor interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"interrupt_in_cp\" , \"description\" : \"Processor interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cp_time\" } }, { \"name\" : \"interrupt_in_cp_time\" , \"description\" : \"Processor interrupt in CP time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"interrupt_num\" , \"description\" : \"Processor interrupt number\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt_num_in_cp\" , \"description\" : \"Number of processor interrupts in CP\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt_time\" , \"description\" : \"Processor interrupt time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"intr_cnt\" , \"description\" : \"Array of interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_ipi\" , \"description\" : \"IPI interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_msec\" , \"description\" : \"Millisecond interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_total\" , \"description\" : \"Total interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"iscsi_data_received\" , \"description\" : \"iSCSI kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"iscsi_data_sent\" , \"description\" : \"iSCSI kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"iscsi_ops\" , \"description\" : \"Number of iSCSI operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"memory\" , \"description\" : \"Total memory in megabytes (MB)\" , \"type\" : \"raw\" , \"unit\" : \"none\" }, { \"name\" : \"network_data_received\" , \"description\" : \"Number of network kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"network_data_sent\" , \"description\" : \"Number of network kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nfs_ops\" , \"description\" : \"Number of NFS operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"non_interrupt\" , \"description\" : \"Processor non-interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"non_interrupt_time\" , \"description\" : \"Processor non-interrupt time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"num_processors\" , \"description\" : \"Number of active processors in the system\" , \"type\" : \"raw\" , \"unit\" : \"none\" }, { \"name\" : \"nvme_fc_data_received\" , \"description\" : \"NVMe/FC kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_fc_data_sent\" , \"description\" : \"NVMe/FC kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_fc_ops\" , \"description\" : \"NVMe/FC operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"nvme_roce_data_received\" , \"description\" : \"NVMe/RoCE kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_roce_data_sent\" , \"description\" : \"NVMe/RoCE kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_roce_ops\" , \"description\" : \"NVMe/RoCE operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"nvme_tcp_data_received\" , \"description\" : \"NVMe/TCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_tcp_data_sent\" , \"description\" : \"NVMe/TCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_tcp_ops\" , \"description\" : \"NVMe/TCP operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"other_data\" , \"description\" : \"Other throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"other_latency\" , \"description\" : \"Average latency for all other operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"other_ops\" } }, { \"name\" : \"other_ops\" , \"description\" : \"All other operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"partner_data_received\" , \"description\" : \"SCSI Partner kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"partner_data_sent\" , \"description\" : \"SCSI Partner kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"processor_plevel\" , \"description\" : \"Processor plevel rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"processor_plevel_time\" , \"description\" : \"Processor plevel rate percentage\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"read_data\" , \"description\" : \"Read throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"read_latency\" , \"description\" : \"Average latency for all read operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"read_ops\" } }, { \"name\" : \"read_ops\" , \"description\" : \"Read operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"sk_switches\" , \"description\" : \"Number of sk switches per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"ssd_data_read\" , \"description\" : \"Number of SSD Disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"ssd_data_written\" , \"description\" : \"Number of SSD Disk kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_read_data\" , \"description\" : \"Network and FCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_total_data\" , \"description\" : \"Network and FCP kilobytes (KB) received and sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_write_data\" , \"description\" : \"Network and FCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"tape_data_read\" , \"description\" : \"Tape bytes read per millisecond\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"tape_data_written\" , \"description\" : \"Tape bytes written per millisecond\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"time\" , \"description\" : \"Time in seconds since the Epoch (00:00:00 UTC January 1 1970)\" , \"type\" : \"raw\" , \"unit\" : \"sec\" }, { \"name\" : \"time_per_interrupt\" , \"description\" : \"Processor time per interrupt\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"interrupt_num\" } }, { \"name\" : \"time_per_interrupt_in_cp\" , \"description\" : \"Processor time per interrupt in CP\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"interrupt_num_in_cp\" } }, { \"name\" : \"total_data\" , \"description\" : \"Total throughput in bytes\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"total_latency\" , \"description\" : \"Average latency for all operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"total_ops\" } }, { \"name\" : \"total_ops\" , \"description\" : \"Total number of operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"total_processor_busy\" , \"description\" : \"Total processor utilization of all processors in the system\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"total_processor_busy_time\" , \"description\" : \"Total processor time of all processors in the system\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"uptime\" , \"description\" : \"Time in seconds that the system has been up\" , \"type\" : \"raw\" , \"unit\" : \"sec\" }, { \"name\" : \"wafliron\" , \"description\" : \"Wafliron counters\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"write_data\" , \"description\" : \"Write throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"write_latency\" , \"description\" : \"Average latency for all write operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"write_ops\" } }, { \"name\" : \"write_ops\" , \"description\" : \"Write operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" } ], \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node\" } } } Node performance metrics with all instances, properties, and counters \u00b6 Ask ONTAP to return all instances of system:node . For each system:node include all of that node's properties and performance metrics. curl 'https://$clusterIP/api/cluster/counter/tables/system:node/rows?fields=*&return_records=true' Response { \"records\" : [ { \"counter_table\" : { \"name\" : \"system:node\" }, \"id\" : \"umeng-aff300-01:28e14eab-0580-11e8-bd9d-00a098d39e12\" , \"properties\" : [ { \"name\" : \"node.name\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"system_model\" , \"value\" : \"AFF-A300\" }, { \"name\" : \"ontap_version\" , \"value\" : \"NetApp Release R9.12.1xN_221108_1315: Tue Nov 8 15:32:25 EST 2022 \" }, { \"name\" : \"compile_flags\" , \"value\" : \"1\" }, { \"name\" : \"serial_no\" , \"value\" : \"721802000260\" }, { \"name\" : \"system_id\" , \"value\" : \"0537124012\" }, { \"name\" : \"hostname\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"name\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"uuid\" , \"value\" : \"28e14eab-0580-11e8-bd9d-00a098d39e12\" } ], \"counters\" : [ { \"name\" : \"memory\" , \"value\" : 88766 }, { \"name\" : \"nfs_ops\" , \"value\" : 15991465 }, { \"name\" : \"cifs_ops\" , \"value\" : 0 }, { \"name\" : \"fcp_ops\" , \"value\" : 0 }, { \"name\" : \"iscsi_ops\" , \"value\" : 355884195 }, { \"name\" : \"nvme_fc_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_ops\" , \"value\" : 0 }, { \"name\" : \"network_data_received\" , \"value\" : 33454266379 }, { \"name\" : \"network_data_sent\" , \"value\" : 9938586739 }, { \"name\" : \"fcp_data_received\" , \"value\" : 0 }, { \"name\" : \"fcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"iscsi_data_received\" , \"value\" : 4543696942 }, { \"name\" : \"iscsi_data_sent\" , \"value\" : 3058795391 }, { \"name\" : \"nvme_fc_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_fc_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_sent\" , \"value\" : 0 }, { \"name\" : \"partner_data_received\" , \"value\" : 0 }, { \"name\" : \"partner_data_sent\" , \"value\" : 0 }, { \"name\" : \"sys_read_data\" , \"value\" : 33454266379 }, { \"name\" : \"sys_write_data\" , \"value\" : 9938586739 }, { \"name\" : \"sys_total_data\" , \"value\" : 43392853118 }, { \"name\" : \"disk_data_read\" , \"value\" : 32083838540 }, { \"name\" : \"disk_data_written\" , \"value\" : 21102507352 }, { \"name\" : \"hdd_data_read\" , \"value\" : 0 }, { \"name\" : \"hdd_data_written\" , \"value\" : 0 }, { \"name\" : \"ssd_data_read\" , \"value\" : 32083838540 }, { \"name\" : \"ssd_data_written\" , \"value\" : 21102507352 }, { \"name\" : \"tape_data_read\" , \"value\" : 0 }, { \"name\" : \"tape_data_written\" , \"value\" : 0 }, { \"name\" : \"read_ops\" , \"value\" : 33495530 }, { \"name\" : \"write_ops\" , \"value\" : 324699398 }, { \"name\" : \"other_ops\" , \"value\" : 13680732 }, { \"name\" : \"total_ops\" , \"value\" : 371875660 }, { \"name\" : \"read_latency\" , \"value\" : 14728140707 }, { \"name\" : \"write_latency\" , \"value\" : 1568830328022 }, { \"name\" : \"other_latency\" , \"value\" : 2132691612 }, { \"name\" : \"total_latency\" , \"value\" : 1585691160341 }, { \"name\" : \"read_data\" , \"value\" : 3212301497187 }, { \"name\" : \"write_data\" , \"value\" : 4787509093524 }, { \"name\" : \"other_data\" , \"value\" : 0 }, { \"name\" : \"total_data\" , \"value\" : 7999810590711 }, { \"name\" : \"cpu_busy\" , \"value\" : 790347800332 }, { \"name\" : \"cpu_elapsed_time\" , \"value\" : 3979034040025 }, { \"name\" : \"average_processor_busy_percent\" , \"value\" : 788429907770 }, { \"name\" : \"total_processor_busy\" , \"value\" : 12614878524320 }, { \"name\" : \"total_processor_busy_time\" , \"value\" : 12614878524320 }, { \"name\" : \"num_processors\" , \"value\" : 16 }, { \"name\" : \"interrupt_time\" , \"value\" : 118435504138 }, { \"name\" : \"interrupt\" , \"value\" : 118435504138 }, { \"name\" : \"interrupt_num\" , \"value\" : 1446537540 }, { \"name\" : \"time_per_interrupt\" , \"value\" : 118435504138 }, { \"name\" : \"non_interrupt_time\" , \"value\" : 12496443020182 }, { \"name\" : \"non_interrupt\" , \"value\" : 12496443020182 }, { \"name\" : \"idle_time\" , \"value\" : 51049666116080 }, { \"name\" : \"idle\" , \"value\" : 51049666116080 }, { \"name\" : \"cp_time\" , \"value\" : 221447740301 }, { \"name\" : \"cp\" , \"value\" : 221447740301 }, { \"name\" : \"interrupt_in_cp_time\" , \"value\" : 7969316828 }, { \"name\" : \"interrupt_in_cp\" , \"value\" : 7969316828 }, { \"name\" : \"interrupt_num_in_cp\" , \"value\" : 1639345044 }, { \"name\" : \"time_per_interrupt_in_cp\" , \"value\" : 7969316828 }, { \"name\" : \"sk_switches\" , \"value\" : 3830419593 }, { \"name\" : \"hard_switches\" , \"value\" : 2786999477 }, { \"name\" : \"intr_cnt_msec\" , \"value\" : 3978648113 }, { \"name\" : \"intr_cnt_ipi\" , \"value\" : 1709054 }, { \"name\" : \"intr_cnt_total\" , \"value\" : 1215253490 }, { \"name\" : \"time\" , \"value\" : 1677516216 }, { \"name\" : \"uptime\" , \"value\" : 3978648 }, { \"name\" : \"processor_plevel_time\" , \"values\" : [ 3405835479577 , 2628275207938 , 1916273074545 , 1366761457118 , 964863281216 , 676002919489 , 472533086045 , 331487674159 , 234447654307 , 167247803300 , 120098535891 , 86312126550 , 61675398266 , 43549889374 , 30176461104 , 19891286233 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"processor_plevel\" , \"values\" : [ 3405835479577 , 2628275207938 , 1916273074545 , 1366761457118 , 964863281216 , 676002919489 , 472533086045 , 331487674159 , 234447654307 , 167247803300 , 120098535891 , 86312126550 , 61675398266 , 43549889374 , 30176461104 , 19891286233 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"domain_busy\" , \"values\" : [ 51049666116086 , 13419960088 , 13297686377 , 1735383373870 , 39183250298 , 6728050897 , 28229793795 , 17493622207 , 122290467 , 974721172619 , 47944793823 , 164946850 , 4162377932 , 407009733276 , 128199854099 , 9037374471285 , 38911301970 , 366749865 , 732045734 , 2997541695 , 14 , 18 , 40 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"domain_shared\" , \"values\" : [ 0 , 685164024474 , 0 , 0 , 0 , 24684879894 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"dswitchto_cnt\" , \"values\" : [ 0 , 322698663 , 172936437 , 446893016 , 96971 , 39788918 , 5 , 10 , 10670440 , 22 , 7 , 836 , 2407967 , 9798186907 , 9802868991 , 265242 , 53 , 2614118 , 4430780 , 66117706 , 1 , 1 , 1 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"intr_cnt\" , \"values\" : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4191453008 , 8181232 , 1625052957 , 0 , 71854 , 0 , 71854 , 0 , 5 , 0 , 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"dev_0\" , \"dev_1\" , \"dev_2\" , \"dev_3\" , \"dev_4\" , \"dev_5\" , \"dev_6\" , \"dev_7\" , \"dev_8\" , \"dev_9\" , \"dev_10\" , \"dev_11\" , \"dev_12\" , \"dev_13\" , \"dev_14\" , \"dev_15\" , \"dev_16\" , \"dev_17\" , \"dev_18\" , \"dev_19\" , \"dev_20\" , \"dev_21\" , \"dev_22\" , \"dev_23\" , \"dev_24\" , \"dev_25\" , \"dev_26\" , \"dev_27\" , \"dev_28\" , \"dev_29\" , \"dev_30\" , \"dev_31\" , \"dev_32\" , \"dev_33\" , \"dev_34\" , \"dev_35\" , \"dev_36\" , \"dev_37\" , \"dev_38\" , \"dev_39\" , \"dev_40\" , \"dev_41\" , \"dev_42\" , \"dev_43\" , \"dev_44\" , \"dev_45\" , \"dev_46\" , \"dev_47\" , \"dev_48\" , \"dev_49\" , \"dev_50\" , \"dev_51\" , \"dev_52\" , \"dev_53\" , \"dev_54\" , \"dev_55\" , \"dev_56\" , \"dev_57\" , \"dev_58\" , \"dev_59\" , \"dev_60\" , \"dev_61\" , \"dev_62\" , \"dev_63\" , \"dev_64\" , \"dev_65\" , \"dev_66\" , \"dev_67\" , \"dev_68\" , \"dev_69\" , \"dev_70\" , \"dev_71\" , \"dev_72\" , \"dev_73\" , \"dev_74\" , \"dev_75\" , \"dev_76\" , \"dev_77\" , \"dev_78\" , \"dev_79\" , \"dev_80\" , \"dev_81\" , \"dev_82\" , \"dev_83\" , \"dev_84\" , \"dev_85\" , \"dev_86\" , \"dev_87\" , \"dev_88\" , \"dev_89\" , \"dev_90\" , \"dev_91\" , \"dev_92\" , \"dev_93\" , \"dev_94\" , \"dev_95\" , \"dev_96\" , \"dev_97\" , \"dev_98\" , \"dev_99\" , \"dev_100\" , \"dev_101\" , \"dev_102\" , \"dev_103\" , \"dev_104\" , \"dev_105\" , \"dev_106\" , \"dev_107\" , \"dev_108\" , \"dev_109\" , \"dev_110\" , \"dev_111\" , \"dev_112\" , \"dev_113\" , \"dev_114\" , \"dev_115\" , \"dev_116\" , \"dev_117\" , \"dev_118\" , \"dev_119\" , \"dev_120\" , \"dev_121\" , \"dev_122\" , \"dev_123\" , \"dev_124\" , \"dev_125\" , \"dev_126\" , \"dev_127\" , \"dev_128\" , \"dev_129\" , \"dev_130\" , \"dev_131\" , \"dev_132\" , \"dev_133\" , \"dev_134\" , \"dev_135\" , \"dev_136\" , \"dev_137\" , \"dev_138\" , \"dev_139\" , \"dev_140\" , \"dev_141\" , \"dev_142\" , \"dev_143\" , \"dev_144\" , \"dev_145\" , \"dev_146\" , \"dev_147\" , \"dev_148\" , \"dev_149\" , \"dev_150\" , \"dev_151\" , \"dev_152\" , \"dev_153\" , \"dev_154\" , \"dev_155\" , \"dev_156\" , \"dev_157\" , \"dev_158\" , \"dev_159\" , \"dev_160\" , \"dev_161\" , \"dev_162\" , \"dev_163\" , \"dev_164\" , \"dev_165\" , \"dev_166\" , \"dev_167\" , \"dev_168\" , \"dev_169\" , \"dev_170\" , \"dev_171\" , \"dev_172\" , \"dev_173\" , \"dev_174\" , \"dev_175\" , \"dev_176\" , \"dev_177\" , \"dev_178\" , \"dev_179\" , \"dev_180\" , \"dev_181\" , \"dev_182\" , \"dev_183\" , \"dev_184\" , \"dev_185\" , \"dev_186\" , \"dev_187\" , \"dev_188\" , \"dev_189\" , \"dev_190\" , \"dev_191\" , \"dev_192\" , \"dev_193\" , \"dev_194\" , \"dev_195\" , \"dev_196\" , \"dev_197\" , \"dev_198\" , \"dev_199\" , \"dev_200\" , \"dev_201\" , \"dev_202\" , \"dev_203\" , \"dev_204\" , \"dev_205\" , \"dev_206\" , \"dev_207\" , \"dev_208\" , \"dev_209\" , \"dev_210\" , \"dev_211\" , \"dev_212\" , \"dev_213\" , \"dev_214\" , \"dev_215\" , \"dev_216\" , \"dev_217\" , \"dev_218\" , \"dev_219\" , \"dev_220\" , \"dev_221\" , \"dev_222\" , \"dev_223\" , \"dev_224\" , \"dev_225\" , \"dev_226\" , \"dev_227\" , \"dev_228\" , \"dev_229\" , \"dev_230\" , \"dev_231\" , \"dev_232\" , \"dev_233\" , \"dev_234\" , \"dev_235\" , \"dev_236\" , \"dev_237\" , \"dev_238\" , \"dev_239\" , \"dev_240\" , \"dev_241\" , \"dev_242\" , \"dev_243\" , \"dev_244\" , \"dev_245\" , \"dev_246\" , \"dev_247\" , \"dev_248\" , \"dev_249\" , \"dev_250\" , \"dev_251\" , \"dev_252\" , \"dev_253\" , \"dev_254\" , \"dev_255\" ] }, { \"name\" : \"wafliron\" , \"values\" : [ 0 , 0 , 0 ], \"labels\" : [ \"iron_totstarts\" , \"iron_nobackup\" , \"iron_usebackup\" ] } ], \"aggregation\" : { \"count\" : 2 , \"complete\" : true }, \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows/umeng-aff300-01%3A28e14eab-0580-11e8-bd9d-00a098d39e12\" } } }, { \"counter_table\" : { \"name\" : \"system:node\" }, \"id\" : \"umeng-aff300-02:1524afca-0580-11e8-ae74-00a098d390f2\" , \"properties\" : [ { \"name\" : \"node.name\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"system_model\" , \"value\" : \"AFF-A300\" }, { \"name\" : \"ontap_version\" , \"value\" : \"NetApp Release R9.12.1xN_221108_1315: Tue Nov 8 15:32:25 EST 2022 \" }, { \"name\" : \"compile_flags\" , \"value\" : \"1\" }, { \"name\" : \"serial_no\" , \"value\" : \"721802000259\" }, { \"name\" : \"system_id\" , \"value\" : \"0537123843\" }, { \"name\" : \"hostname\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"name\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"uuid\" , \"value\" : \"1524afca-0580-11e8-ae74-00a098d390f2\" } ], \"counters\" : [ { \"name\" : \"memory\" , \"value\" : 88766 }, { \"name\" : \"nfs_ops\" , \"value\" : 2061227971 }, { \"name\" : \"cifs_ops\" , \"value\" : 0 }, { \"name\" : \"fcp_ops\" , \"value\" : 0 }, { \"name\" : \"iscsi_ops\" , \"value\" : 183570559 }, { \"name\" : \"nvme_fc_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_ops\" , \"value\" : 0 }, { \"name\" : \"network_data_received\" , \"value\" : 28707362447 }, { \"name\" : \"network_data_sent\" , \"value\" : 31199786274 }, { \"name\" : \"fcp_data_received\" , \"value\" : 0 }, { \"name\" : \"fcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"iscsi_data_received\" , \"value\" : 2462501728 }, { \"name\" : \"iscsi_data_sent\" , \"value\" : 962425592 }, { \"name\" : \"nvme_fc_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_fc_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_sent\" , \"value\" : 0 }, { \"name\" : \"partner_data_received\" , \"value\" : 0 }, { \"name\" : \"partner_data_sent\" , \"value\" : 0 }, { \"name\" : \"sys_read_data\" , \"value\" : 28707362447 }, { \"name\" : \"sys_write_data\" , \"value\" : 31199786274 }, { \"name\" : \"sys_total_data\" , \"value\" : 59907148721 }, { \"name\" : \"disk_data_read\" , \"value\" : 27355740700 }, { \"name\" : \"disk_data_written\" , \"value\" : 3426898232 }, { \"name\" : \"hdd_data_read\" , \"value\" : 0 }, { \"name\" : \"hdd_data_written\" , \"value\" : 0 }, { \"name\" : \"ssd_data_read\" , \"value\" : 27355740700 }, { \"name\" : \"ssd_data_written\" , \"value\" : 3426898232 }, { \"name\" : \"tape_data_read\" , \"value\" : 0 }, { \"name\" : \"tape_data_written\" , \"value\" : 0 }, { \"name\" : \"read_ops\" , \"value\" : 29957410 }, { \"name\" : \"write_ops\" , \"value\" : 2141657620 }, { \"name\" : \"other_ops\" , \"value\" : 73183500 }, { \"name\" : \"total_ops\" , \"value\" : 2244798530 }, { \"name\" : \"read_latency\" , \"value\" : 43283636161 }, { \"name\" : \"write_latency\" , \"value\" : 1437635703835 }, { \"name\" : \"other_latency\" , \"value\" : 628457365 }, { \"name\" : \"total_latency\" , \"value\" : 1481547797361 }, { \"name\" : \"read_data\" , \"value\" : 1908711454978 }, { \"name\" : \"write_data\" , \"value\" : 23562759645410 }, { \"name\" : \"other_data\" , \"value\" : 0 }, { \"name\" : \"total_data\" , \"value\" : 25471471100388 }, { \"name\" : \"cpu_busy\" , \"value\" : 511050841704 }, { \"name\" : \"cpu_elapsed_time\" , \"value\" : 3979039364919 }, { \"name\" : \"average_processor_busy_percent\" , \"value\" : 509151403977 }, { \"name\" : \"total_processor_busy\" , \"value\" : 8146422463632 }, { \"name\" : \"total_processor_busy_time\" , \"value\" : 8146422463632 }, { \"name\" : \"num_processors\" , \"value\" : 16 }, { \"name\" : \"interrupt_time\" , \"value\" : 108155323601 }, { \"name\" : \"interrupt\" , \"value\" : 108155323601 }, { \"name\" : \"interrupt_num\" , \"value\" : 3369179127 }, { \"name\" : \"time_per_interrupt\" , \"value\" : 108155323601 }, { \"name\" : \"non_interrupt_time\" , \"value\" : 8038267140031 }, { \"name\" : \"non_interrupt\" , \"value\" : 8038267140031 }, { \"name\" : \"idle_time\" , \"value\" : 55518207375072 }, { \"name\" : \"idle\" , \"value\" : 55518207375072 }, { \"name\" : \"cp_time\" , \"value\" : 64306316680 }, { \"name\" : \"cp\" , \"value\" : 64306316680 }, { \"name\" : \"interrupt_in_cp_time\" , \"value\" : 2024956616 }, { \"name\" : \"interrupt_in_cp\" , \"value\" : 2024956616 }, { \"name\" : \"interrupt_num_in_cp\" , \"value\" : 2661183541 }, { \"name\" : \"time_per_interrupt_in_cp\" , \"value\" : 2024956616 }, { \"name\" : \"sk_switches\" , \"value\" : 2798598514 }, { \"name\" : \"hard_switches\" , \"value\" : 1354185066 }, { \"name\" : \"intr_cnt_msec\" , \"value\" : 3978642246 }, { \"name\" : \"intr_cnt_ipi\" , \"value\" : 797281 }, { \"name\" : \"intr_cnt_total\" , \"value\" : 905575861 }, { \"name\" : \"time\" , \"value\" : 1677516216 }, { \"name\" : \"uptime\" , \"value\" : 3978643 }, { \"name\" : \"processor_plevel_time\" , \"values\" : [ 2878770221447 , 1882901052733 , 1209134416474 , 771086627192 , 486829133301 , 306387520688 , 193706139760 , 123419519944 , 79080346535 , 50459518003 , 31714732122 , 19476561954 , 11616026278 , 6666253598 , 3623880168 , 1790458071 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"processor_plevel\" , \"values\" : [ 2878770221447 , 1882901052733 , 1209134416474 , 771086627192 , 486829133301 , 306387520688 , 193706139760 , 123419519944 , 79080346535 , 50459518003 , 31714732122 , 19476561954 , 11616026278 , 6666253598 , 3623880168 , 1790458071 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"0_CPU\" , \"1_CPU\" , \"2_CPU\" , \"3_CPU\" , \"4_CPU\" , \"5_CPU\" , \"6_CPU\" , \"7_CPU\" , \"8_CPU\" , \"9_CPU\" , \"10_CPU\" , \"11_CPU\" , \"12_CPU\" , \"13_CPU\" , \"14_CPU\" , \"15_CPU\" , \"16_CPU\" , \"17_CPU\" , \"18_CPU\" , \"19_CPU\" , \"20_CPU\" , \"21_CPU\" , \"22_CPU\" , \"23_CPU\" , \"24_CPU\" , \"25_CPU\" , \"26_CPU\" , \"27_CPU\" , \"28_CPU\" , \"29_CPU\" , \"30_CPU\" , \"31_CPU\" , \"32_CPU\" , \"33_CPU\" , \"34_CPU\" , \"35_CPU\" , \"36_CPU\" , \"37_CPU\" , \"38_CPU\" , \"39_CPU\" , \"40_CPU\" , \"41_CPU\" , \"42_CPU\" , \"43_CPU\" , \"44_CPU\" , \"45_CPU\" , \"46_CPU\" , \"47_CPU\" , \"48_CPU\" , \"49_CPU\" , \"50_CPU\" , \"51_CPU\" , \"52_CPU\" , \"53_CPU\" , \"54_CPU\" , \"55_CPU\" , \"56_CPU\" , \"57_CPU\" , \"58_CPU\" , \"59_CPU\" , \"60_CPU\" , \"61_CPU\" , \"62_CPU\" , \"63_CPU\" , \"64_CPU\" , \"65_CPU\" , \"66_CPU\" , \"67_CPU\" , \"68_CPU\" , \"69_CPU\" , \"70_CPU\" , \"71_CPU\" , \"72_CPU\" , \"73_CPU\" , \"74_CPU\" , \"75_CPU\" , \"76_CPU\" , \"77_CPU\" , \"78_CPU\" , \"79_CPU\" , \"80_CPU\" , \"81_CPU\" , \"82_CPU\" , \"83_CPU\" , \"84_CPU\" , \"85_CPU\" , \"86_CPU\" , \"87_CPU\" , \"88_CPU\" , \"89_CPU\" , \"90_CPU\" , \"91_CPU\" , \"92_CPU\" , \"93_CPU\" , \"94_CPU\" , \"95_CPU\" , \"96_CPU\" , \"97_CPU\" , \"98_CPU\" , \"99_CPU\" , \"100_CPU\" , \"101_CPU\" , \"102_CPU\" , \"103_CPU\" , \"104_CPU\" , \"105_CPU\" , \"106_CPU\" , \"107_CPU\" , \"108_CPU\" , \"109_CPU\" , \"110_CPU\" , \"111_CPU\" , \"112_CPU\" , \"113_CPU\" , \"114_CPU\" , \"115_CPU\" , \"116_CPU\" , \"117_CPU\" , \"118_CPU\" , \"119_CPU\" , \"120_CPU\" , \"121_CPU\" , \"122_CPU\" , \"123_CPU\" , \"124_CPU\" , \"125_CPU\" , \"126_CPU\" , \"127_CPU\" ] }, { \"name\" : \"domain_busy\" , \"values\" : [ 55518207375080 , 8102895398 , 12058227646 , 991838747162 , 28174147737 , 6669066926 , 14245801778 , 9009875224 , 118982762 , 177496844302 , 5888814259 , 167280195 , 3851617905 , 484154906167 , 91240285306 , 6180138216837 , 22111798640 , 344700584 , 266304074 , 2388625825 , 16 , 21 , 19 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"domain_shared\" , \"values\" : [ 0 , 153663450171 , 0 , 0 , 0 , 11834112384 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"dswitchto_cnt\" , \"values\" : [ 0 , 178192633 , 143964155 , 286324250 , 2365 , 39684121 , 5 , 10 , 10715325 , 22 , 7 , 30 , 2407970 , 7865489299 , 7870331008 , 265242 , 53 , 2535145 , 3252888 , 53334340 , 1 , 1 , 1 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"intr_cnt\" , \"values\" : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 724698481 , 8181275 , 488080162 , 0 , 71856 , 0 , 71856 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"dev_0\" , \"dev_1\" , \"dev_2\" , \"dev_3\" , \"dev_4\" , \"dev_5\" , \"dev_6\" , \"dev_7\" , \"dev_8\" , \"dev_9\" , \"dev_10\" , \"dev_11\" , \"dev_12\" , \"dev_13\" , \"dev_14\" , \"dev_15\" , \"dev_16\" , \"dev_17\" , \"dev_18\" , \"dev_19\" , \"dev_20\" , \"dev_21\" , \"dev_22\" , \"dev_23\" , \"dev_24\" , \"dev_25\" , \"dev_26\" , \"dev_27\" , \"dev_28\" , \"dev_29\" , \"dev_30\" , \"dev_31\" , \"dev_32\" , \"dev_33\" , \"dev_34\" , \"dev_35\" , \"dev_36\" , \"dev_37\" , \"dev_38\" , \"dev_39\" , \"dev_40\" , \"dev_41\" , \"dev_42\" , \"dev_43\" , \"dev_44\" , \"dev_45\" , \"dev_46\" , \"dev_47\" , \"dev_48\" , \"dev_49\" , \"dev_50\" , \"dev_51\" , \"dev_52\" , \"dev_53\" , \"dev_54\" , \"dev_55\" , \"dev_56\" , \"dev_57\" , \"dev_58\" , \"dev_59\" , \"dev_60\" , \"dev_61\" , \"dev_62\" , \"dev_63\" , \"dev_64\" , \"dev_65\" , \"dev_66\" , \"dev_67\" , \"dev_68\" , \"dev_69\" , \"dev_70\" , \"dev_71\" , \"dev_72\" , \"dev_73\" , \"dev_74\" , \"dev_75\" , \"dev_76\" , \"dev_77\" , \"dev_78\" , \"dev_79\" , \"dev_80\" , \"dev_81\" , \"dev_82\" , \"dev_83\" , \"dev_84\" , \"dev_85\" , \"dev_86\" , \"dev_87\" , \"dev_88\" , \"dev_89\" , \"dev_90\" , \"dev_91\" , \"dev_92\" , \"dev_93\" , \"dev_94\" , \"dev_95\" , \"dev_96\" , \"dev_97\" , \"dev_98\" , \"dev_99\" , \"dev_100\" , \"dev_101\" , \"dev_102\" , \"dev_103\" , \"dev_104\" , \"dev_105\" , \"dev_106\" , \"dev_107\" , \"dev_108\" , \"dev_109\" , \"dev_110\" , \"dev_111\" , \"dev_112\" , \"dev_113\" , \"dev_114\" , \"dev_115\" , \"dev_116\" , \"dev_117\" , \"dev_118\" , \"dev_119\" , \"dev_120\" , \"dev_121\" , \"dev_122\" , \"dev_123\" , \"dev_124\" , \"dev_125\" , \"dev_126\" , \"dev_127\" , \"dev_128\" , \"dev_129\" , \"dev_130\" , \"dev_131\" , \"dev_132\" , \"dev_133\" , \"dev_134\" , \"dev_135\" , \"dev_136\" , \"dev_137\" , \"dev_138\" , \"dev_139\" , \"dev_140\" , \"dev_141\" , \"dev_142\" , \"dev_143\" , \"dev_144\" , \"dev_145\" , \"dev_146\" , \"dev_147\" , \"dev_148\" , \"dev_149\" , \"dev_150\" , \"dev_151\" , \"dev_152\" , \"dev_153\" , \"dev_154\" , \"dev_155\" , \"dev_156\" , \"dev_157\" , \"dev_158\" , \"dev_159\" , \"dev_160\" , \"dev_161\" , \"dev_162\" , \"dev_163\" , \"dev_164\" , \"dev_165\" , \"dev_166\" , \"dev_167\" , \"dev_168\" , \"dev_169\" , \"dev_170\" , \"dev_171\" , \"dev_172\" , \"dev_173\" , \"dev_174\" , \"dev_175\" , \"dev_176\" , \"dev_177\" , \"dev_178\" , \"dev_179\" , \"dev_180\" , \"dev_181\" , \"dev_182\" , \"dev_183\" , \"dev_184\" , \"dev_185\" , \"dev_186\" , \"dev_187\" , \"dev_188\" , \"dev_189\" , \"dev_190\" , \"dev_191\" , \"dev_192\" , \"dev_193\" , \"dev_194\" , \"dev_195\" , \"dev_196\" , \"dev_197\" , \"dev_198\" , \"dev_199\" , \"dev_200\" , \"dev_201\" , \"dev_202\" , \"dev_203\" , \"dev_204\" , \"dev_205\" , \"dev_206\" , \"dev_207\" , \"dev_208\" , \"dev_209\" , \"dev_210\" , \"dev_211\" , \"dev_212\" , \"dev_213\" , \"dev_214\" , \"dev_215\" , \"dev_216\" , \"dev_217\" , \"dev_218\" , \"dev_219\" , \"dev_220\" , \"dev_221\" , \"dev_222\" , \"dev_223\" , \"dev_224\" , \"dev_225\" , \"dev_226\" , \"dev_227\" , \"dev_228\" , \"dev_229\" , \"dev_230\" , \"dev_231\" , \"dev_232\" , \"dev_233\" , \"dev_234\" , \"dev_235\" , \"dev_236\" , \"dev_237\" , \"dev_238\" , \"dev_239\" , \"dev_240\" , \"dev_241\" , \"dev_242\" , \"dev_243\" , \"dev_244\" , \"dev_245\" , \"dev_246\" , \"dev_247\" , \"dev_248\" , \"dev_249\" , \"dev_250\" , \"dev_251\" , \"dev_252\" , \"dev_253\" , \"dev_254\" , \"dev_255\" ] }, { \"name\" : \"wafliron\" , \"values\" : [ 0 , 0 , 0 ], \"labels\" : [ \"iron_totstarts\" , \"iron_nobackup\" , \"iron_usebackup\" ] } ], \"aggregation\" : { \"count\" : 2 , \"complete\" : true }, \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows/umeng-aff300-02%3A1524afca-0580-11e8-ae74-00a098d390f2\" } } } ], \"num_records\" : 2 , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows?fields=*&return_records=true\" } } } References \u00b6 Harvest REST Strategy ONTAP 9.11.1 ONTAPI-to-REST Counter Manager Mapping ONTAP REST API reference documentation ONTAP REST API","title":"REST Perf Metrics"},{"location":"resources/rest-perf-metrics/#introduction","text":"ONTAP REST metrics were introduced in ONTAP 9.11.1 and included parity with Harvest-collected ZAPI performance metrics by ONTAP 9.12.1 .","title":"Introduction"},{"location":"resources/rest-perf-metrics/#performance-rest-queries","text":"Mapping table ZAPI REST Comment perf-object-counter-list-info /api/cluster/counter/tables returns counter tables and schemas perf-object-instance-list-info-iter /api/cluster/counter/tables/{name}/rows returns instances and counter values perf-object-get-instances /api/cluster/counter/tables/{name}/rows returns instances and counter values Performance REST responses include properties and counters . Counters are metric-like, while properties include instance attributes.","title":"Performance REST queries"},{"location":"resources/rest-perf-metrics/#examples","text":"","title":"Examples"},{"location":"resources/rest-perf-metrics/#ask-ontap-for-all-resources-that-report-performance-metrics","text":"curl 'https://$clusterIP/api/cluster/counter/tables' Response { \"records\" : [ { \"name\" : \"copy_manager\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/copy_manager\" } } }, { \"name\" : \"copy_manager:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/copy_manager%3Aconstituent\" } } }, { \"name\" : \"disk\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk\" } } }, { \"name\" : \"disk:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk%3Aconstituent\" } } }, { \"name\" : \"disk:raid_group\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/disk%3Araid_group\" } } }, { \"name\" : \"external_cache\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/external_cache\" } } }, { \"name\" : \"fcp\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp\" } } }, { \"name\" : \"fcp:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp%3Anode\" } } }, { \"name\" : \"fcp_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif\" } } }, { \"name\" : \"fcp_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Anode\" } } }, { \"name\" : \"fcp_lif:port\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Aport\" } } }, { \"name\" : \"fcp_lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcp_lif%3Asvm\" } } }, { \"name\" : \"fcvi\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/fcvi\" } } }, { \"name\" : \"headroom_aggregate\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/headroom_aggregate\" } } }, { \"name\" : \"headroom_cpu\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/headroom_cpu\" } } }, { \"name\" : \"host_adapter\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/host_adapter\" } } }, { \"name\" : \"iscsi_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif\" } } }, { \"name\" : \"iscsi_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif%3Anode\" } } }, { \"name\" : \"iscsi_lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/iscsi_lif%3Asvm\" } } }, { \"name\" : \"lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lif\" } } }, { \"name\" : \"lif:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lif%3Asvm\" } } }, { \"name\" : \"lun\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun\" } } }, { \"name\" : \"lun:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun%3Aconstituent\" } } }, { \"name\" : \"lun:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/lun%3Anode\" } } }, { \"name\" : \"namespace\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/namespace\" } } }, { \"name\" : \"namespace:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/namespace%3Aconstituent\" } } }, { \"name\" : \"nfs_v4_diag\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nfs_v4_diag\" } } }, { \"name\" : \"nic_common\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nic_common\" } } }, { \"name\" : \"nvmf_lif\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif\" } } }, { \"name\" : \"nvmf_lif:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Aconstituent\" } } }, { \"name\" : \"nvmf_lif:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Anode\" } } }, { \"name\" : \"nvmf_lif:port\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/nvmf_lif%3Aport\" } } }, { \"name\" : \"object_store_client_op\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/object_store_client_op\" } } }, { \"name\" : \"path\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/path\" } } }, { \"name\" : \"processor\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/processor\" } } }, { \"name\" : \"processor:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/processor%3Anode\" } } }, { \"name\" : \"qos\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos\" } } }, { \"name\" : \"qos:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos%3Aconstituent\" } } }, { \"name\" : \"qos:policy_group\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos%3Apolicy_group\" } } }, { \"name\" : \"qos_detail\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_detail\" } } }, { \"name\" : \"qos_detail_volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_detail_volume\" } } }, { \"name\" : \"qos_volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_volume\" } } }, { \"name\" : \"qos_volume:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qos_volume%3Aconstituent\" } } }, { \"name\" : \"qtree\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qtree\" } } }, { \"name\" : \"qtree:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/qtree%3Aconstituent\" } } }, { \"name\" : \"svm_cifs\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs\" } } }, { \"name\" : \"svm_cifs:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs%3Aconstituent\" } } }, { \"name\" : \"svm_cifs:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_cifs%3Anode\" } } }, { \"name\" : \"svm_nfs_v3\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3\" } } }, { \"name\" : \"svm_nfs_v3:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v3:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v3%3Anode\" } } }, { \"name\" : \"svm_nfs_v4\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4\" } } }, { \"name\" : \"svm_nfs_v41\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41\" } } }, { \"name\" : \"svm_nfs_v41:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v41:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v41%3Anode\" } } }, { \"name\" : \"svm_nfs_v42\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42\" } } }, { \"name\" : \"svm_nfs_v42:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v42:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v42%3Anode\" } } }, { \"name\" : \"svm_nfs_v4:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4%3Aconstituent\" } } }, { \"name\" : \"svm_nfs_v4:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/svm_nfs_v4%3Anode\" } } }, { \"name\" : \"system\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system\" } } }, { \"name\" : \"system:constituent\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system%3Aconstituent\" } } }, { \"name\" : \"system:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system%3Anode\" } } }, { \"name\" : \"token_manager\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/token_manager\" } } }, { \"name\" : \"volume\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume\" } } }, { \"name\" : \"volume:node\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume%3Anode\" } } }, { \"name\" : \"volume:svm\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/volume%3Asvm\" } } }, { \"name\" : \"wafl\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl\" } } }, { \"name\" : \"wafl_comp_aggr_vol_bin\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_comp_aggr_vol_bin\" } } }, { \"name\" : \"wafl_hya_per_aggregate\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_hya_per_aggregate\" } } }, { \"name\" : \"wafl_hya_sizer\" , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/wafl_hya_sizer\" } } } ], \"num_records\" : 71 , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/\" } } }","title":"Ask ONTAP for all resources that report performance metrics"},{"location":"resources/rest-perf-metrics/#node-performance-metrics-metadata","text":"Ask ONTAP to return the schema for system:node . This will include the name, description, and metadata for all counters associated with system:node . curl 'https://$clusterIP/api/cluster/counter/tables/system:node?return_records=true' Response { \"name\" : \"system:node\" , \"description\" : \"The System table reports general system activity. This includes global throughput for the main services, I/O latency, and CPU activity. The alias name for system:node is system_node.\" , \"counter_schemas\" : [ { \"name\" : \"average_processor_busy_percent\" , \"description\" : \"Average processor utilization across all processors in the system\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cifs_ops\" , \"description\" : \"Number of CIFS operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"cp\" , \"description\" : \"CP time rate\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cp_time\" , \"description\" : \"Processor time in CP\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"cpu_busy\" , \"description\" : \"System CPU resource utilization. Returns a computed percentage for the default CPU field. Basically computes a 'cpu usage summary' value which indicates how 'busy' the system is based upon the most heavily utilized domain. The idea is to determine the amount of available CPU until we're limited by either a domain maxing out OR we exhaust all available idle CPU cycles, whichever occurs first.\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"cpu_elapsed_time\" , \"description\" : \"Elapsed time since boot\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"disk_data_read\" , \"description\" : \"Number of disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"disk_data_written\" , \"description\" : \"Number of disk kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"domain_busy\" , \"description\" : \"Array of processor time in percentage spent in various domains\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"domain_shared\" , \"description\" : \"Array of processor time in percentage spent in various shared domains\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"dswitchto_cnt\" , \"description\" : \"Array of processor time in percentage spent in domain switch\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"fcp_data_received\" , \"description\" : \"Number of FCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"fcp_data_sent\" , \"description\" : \"Number of FCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"fcp_ops\" , \"description\" : \"Number of FCP operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"hard_switches\" , \"description\" : \"Number of context switches per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"hdd_data_read\" , \"description\" : \"Number of HDD Disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"hdd_data_written\" , \"description\" : \"Number of HDD kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"idle\" , \"description\" : \"Processor idle rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"idle_time\" , \"description\" : \"Processor idle time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"instance_name\" , \"description\" : \"Node name\" , \"type\" : \"string\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt\" , \"description\" : \"Processor interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"interrupt_in_cp\" , \"description\" : \"Processor interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cp_time\" } }, { \"name\" : \"interrupt_in_cp_time\" , \"description\" : \"Processor interrupt in CP time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"interrupt_num\" , \"description\" : \"Processor interrupt number\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt_num_in_cp\" , \"description\" : \"Number of processor interrupts in CP\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"interrupt_time\" , \"description\" : \"Processor interrupt time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"intr_cnt\" , \"description\" : \"Array of interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_ipi\" , \"description\" : \"IPI interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_msec\" , \"description\" : \"Millisecond interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"intr_cnt_total\" , \"description\" : \"Total interrupt count per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"iscsi_data_received\" , \"description\" : \"iSCSI kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"iscsi_data_sent\" , \"description\" : \"iSCSI kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"iscsi_ops\" , \"description\" : \"Number of iSCSI operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"memory\" , \"description\" : \"Total memory in megabytes (MB)\" , \"type\" : \"raw\" , \"unit\" : \"none\" }, { \"name\" : \"network_data_received\" , \"description\" : \"Number of network kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"network_data_sent\" , \"description\" : \"Number of network kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nfs_ops\" , \"description\" : \"Number of NFS operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"non_interrupt\" , \"description\" : \"Processor non-interrupt rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"non_interrupt_time\" , \"description\" : \"Processor non-interrupt time\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"num_processors\" , \"description\" : \"Number of active processors in the system\" , \"type\" : \"raw\" , \"unit\" : \"none\" }, { \"name\" : \"nvme_fc_data_received\" , \"description\" : \"NVMe/FC kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_fc_data_sent\" , \"description\" : \"NVMe/FC kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_fc_ops\" , \"description\" : \"NVMe/FC operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"nvme_roce_data_received\" , \"description\" : \"NVMe/RoCE kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_roce_data_sent\" , \"description\" : \"NVMe/RoCE kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_roce_ops\" , \"description\" : \"NVMe/RoCE operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"nvme_tcp_data_received\" , \"description\" : \"NVMe/TCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_tcp_data_sent\" , \"description\" : \"NVMe/TCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"nvme_tcp_ops\" , \"description\" : \"NVMe/TCP operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"other_data\" , \"description\" : \"Other throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"other_latency\" , \"description\" : \"Average latency for all other operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"other_ops\" } }, { \"name\" : \"other_ops\" , \"description\" : \"All other operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"partner_data_received\" , \"description\" : \"SCSI Partner kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"partner_data_sent\" , \"description\" : \"SCSI Partner kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"processor_plevel\" , \"description\" : \"Processor plevel rate percentage\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"processor_plevel_time\" , \"description\" : \"Processor plevel rate percentage\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"read_data\" , \"description\" : \"Read throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"read_latency\" , \"description\" : \"Average latency for all read operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"read_ops\" } }, { \"name\" : \"read_ops\" , \"description\" : \"Read operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"sk_switches\" , \"description\" : \"Number of sk switches per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"ssd_data_read\" , \"description\" : \"Number of SSD Disk kilobytes (KB) read per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"ssd_data_written\" , \"description\" : \"Number of SSD Disk kilobytes (KB) written per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_read_data\" , \"description\" : \"Network and FCP kilobytes (KB) received per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_total_data\" , \"description\" : \"Network and FCP kilobytes (KB) received and sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"sys_write_data\" , \"description\" : \"Network and FCP kilobytes (KB) sent per second\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"tape_data_read\" , \"description\" : \"Tape bytes read per millisecond\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"tape_data_written\" , \"description\" : \"Tape bytes written per millisecond\" , \"type\" : \"rate\" , \"unit\" : \"kb_per_sec\" }, { \"name\" : \"time\" , \"description\" : \"Time in seconds since the Epoch (00:00:00 UTC January 1 1970)\" , \"type\" : \"raw\" , \"unit\" : \"sec\" }, { \"name\" : \"time_per_interrupt\" , \"description\" : \"Processor time per interrupt\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"interrupt_num\" } }, { \"name\" : \"time_per_interrupt_in_cp\" , \"description\" : \"Processor time per interrupt in CP\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"interrupt_num_in_cp\" } }, { \"name\" : \"total_data\" , \"description\" : \"Total throughput in bytes\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"total_latency\" , \"description\" : \"Average latency for all operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"total_ops\" } }, { \"name\" : \"total_ops\" , \"description\" : \"Total number of operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" }, { \"name\" : \"total_processor_busy\" , \"description\" : \"Total processor utilization of all processors in the system\" , \"type\" : \"percent\" , \"unit\" : \"percent\" , \"denominator\" : { \"name\" : \"cpu_elapsed_time\" } }, { \"name\" : \"total_processor_busy_time\" , \"description\" : \"Total processor time of all processors in the system\" , \"type\" : \"delta\" , \"unit\" : \"microsec\" }, { \"name\" : \"uptime\" , \"description\" : \"Time in seconds that the system has been up\" , \"type\" : \"raw\" , \"unit\" : \"sec\" }, { \"name\" : \"wafliron\" , \"description\" : \"Wafliron counters\" , \"type\" : \"delta\" , \"unit\" : \"none\" }, { \"name\" : \"write_data\" , \"description\" : \"Write throughput\" , \"type\" : \"rate\" , \"unit\" : \"b_per_sec\" }, { \"name\" : \"write_latency\" , \"description\" : \"Average latency for all write operations in the system in microseconds\" , \"type\" : \"average\" , \"unit\" : \"microsec\" , \"denominator\" : { \"name\" : \"write_ops\" } }, { \"name\" : \"write_ops\" , \"description\" : \"Write operations per second\" , \"type\" : \"rate\" , \"unit\" : \"per_sec\" } ], \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node\" } } }","title":"Node performance metrics metadata"},{"location":"resources/rest-perf-metrics/#node-performance-metrics-with-all-instances-properties-and-counters","text":"Ask ONTAP to return all instances of system:node . For each system:node include all of that node's properties and performance metrics. curl 'https://$clusterIP/api/cluster/counter/tables/system:node/rows?fields=*&return_records=true' Response { \"records\" : [ { \"counter_table\" : { \"name\" : \"system:node\" }, \"id\" : \"umeng-aff300-01:28e14eab-0580-11e8-bd9d-00a098d39e12\" , \"properties\" : [ { \"name\" : \"node.name\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"system_model\" , \"value\" : \"AFF-A300\" }, { \"name\" : \"ontap_version\" , \"value\" : \"NetApp Release R9.12.1xN_221108_1315: Tue Nov 8 15:32:25 EST 2022 \" }, { \"name\" : \"compile_flags\" , \"value\" : \"1\" }, { \"name\" : \"serial_no\" , \"value\" : \"721802000260\" }, { \"name\" : \"system_id\" , \"value\" : \"0537124012\" }, { \"name\" : \"hostname\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"name\" , \"value\" : \"umeng-aff300-01\" }, { \"name\" : \"uuid\" , \"value\" : \"28e14eab-0580-11e8-bd9d-00a098d39e12\" } ], \"counters\" : [ { \"name\" : \"memory\" , \"value\" : 88766 }, { \"name\" : \"nfs_ops\" , \"value\" : 15991465 }, { \"name\" : \"cifs_ops\" , \"value\" : 0 }, { \"name\" : \"fcp_ops\" , \"value\" : 0 }, { \"name\" : \"iscsi_ops\" , \"value\" : 355884195 }, { \"name\" : \"nvme_fc_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_ops\" , \"value\" : 0 }, { \"name\" : \"network_data_received\" , \"value\" : 33454266379 }, { \"name\" : \"network_data_sent\" , \"value\" : 9938586739 }, { \"name\" : \"fcp_data_received\" , \"value\" : 0 }, { \"name\" : \"fcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"iscsi_data_received\" , \"value\" : 4543696942 }, { \"name\" : \"iscsi_data_sent\" , \"value\" : 3058795391 }, { \"name\" : \"nvme_fc_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_fc_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_sent\" , \"value\" : 0 }, { \"name\" : \"partner_data_received\" , \"value\" : 0 }, { \"name\" : \"partner_data_sent\" , \"value\" : 0 }, { \"name\" : \"sys_read_data\" , \"value\" : 33454266379 }, { \"name\" : \"sys_write_data\" , \"value\" : 9938586739 }, { \"name\" : \"sys_total_data\" , \"value\" : 43392853118 }, { \"name\" : \"disk_data_read\" , \"value\" : 32083838540 }, { \"name\" : \"disk_data_written\" , \"value\" : 21102507352 }, { \"name\" : \"hdd_data_read\" , \"value\" : 0 }, { \"name\" : \"hdd_data_written\" , \"value\" : 0 }, { \"name\" : \"ssd_data_read\" , \"value\" : 32083838540 }, { \"name\" : \"ssd_data_written\" , \"value\" : 21102507352 }, { \"name\" : \"tape_data_read\" , \"value\" : 0 }, { \"name\" : \"tape_data_written\" , \"value\" : 0 }, { \"name\" : \"read_ops\" , \"value\" : 33495530 }, { \"name\" : \"write_ops\" , \"value\" : 324699398 }, { \"name\" : \"other_ops\" , \"value\" : 13680732 }, { \"name\" : \"total_ops\" , \"value\" : 371875660 }, { \"name\" : \"read_latency\" , \"value\" : 14728140707 }, { \"name\" : \"write_latency\" , \"value\" : 1568830328022 }, { \"name\" : \"other_latency\" , \"value\" : 2132691612 }, { \"name\" : \"total_latency\" , \"value\" : 1585691160341 }, { \"name\" : \"read_data\" , \"value\" : 3212301497187 }, { \"name\" : \"write_data\" , \"value\" : 4787509093524 }, { \"name\" : \"other_data\" , \"value\" : 0 }, { \"name\" : \"total_data\" , \"value\" : 7999810590711 }, { \"name\" : \"cpu_busy\" , \"value\" : 790347800332 }, { \"name\" : \"cpu_elapsed_time\" , \"value\" : 3979034040025 }, { \"name\" : \"average_processor_busy_percent\" , \"value\" : 788429907770 }, { \"name\" : \"total_processor_busy\" , \"value\" : 12614878524320 }, { \"name\" : \"total_processor_busy_time\" , \"value\" : 12614878524320 }, { \"name\" : \"num_processors\" , \"value\" : 16 }, { \"name\" : \"interrupt_time\" , \"value\" : 118435504138 }, { \"name\" : \"interrupt\" , \"value\" : 118435504138 }, { \"name\" : \"interrupt_num\" , \"value\" : 1446537540 }, { \"name\" : \"time_per_interrupt\" , \"value\" : 118435504138 }, { \"name\" : \"non_interrupt_time\" , \"value\" : 12496443020182 }, { \"name\" : \"non_interrupt\" , \"value\" : 12496443020182 }, { \"name\" : \"idle_time\" , \"value\" : 51049666116080 }, { \"name\" : \"idle\" , \"value\" : 51049666116080 }, { \"name\" : \"cp_time\" , \"value\" : 221447740301 }, { \"name\" : \"cp\" , \"value\" : 221447740301 }, { \"name\" : \"interrupt_in_cp_time\" , \"value\" : 7969316828 }, { \"name\" : \"interrupt_in_cp\" , \"value\" : 7969316828 }, { \"name\" : \"interrupt_num_in_cp\" , \"value\" : 1639345044 }, { \"name\" : \"time_per_interrupt_in_cp\" , \"value\" : 7969316828 }, { \"name\" : \"sk_switches\" , \"value\" : 3830419593 }, { \"name\" : \"hard_switches\" , \"value\" : 2786999477 }, { \"name\" : \"intr_cnt_msec\" , \"value\" : 3978648113 }, { \"name\" : \"intr_cnt_ipi\" , \"value\" : 1709054 }, { \"name\" : \"intr_cnt_total\" , \"value\" : 1215253490 }, { \"name\" : \"time\" , \"value\" : 1677516216 }, { \"name\" : \"uptime\" , \"value\" : 3978648 }, { \"name\" : \"processor_plevel_time\" , \"values\" : [ 3405835479577 , 2628275207938 , 1916273074545 , 1366761457118 , 964863281216 , 676002919489 , 472533086045 , 331487674159 , 234447654307 , 167247803300 , 120098535891 , 86312126550 , 61675398266 , 43549889374 , 30176461104 , 19891286233 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"processor_plevel\" , \"values\" : [ 3405835479577 , 2628275207938 , 1916273074545 , 1366761457118 , 964863281216 , 676002919489 , 472533086045 , 331487674159 , 234447654307 , 167247803300 , 120098535891 , 86312126550 , 61675398266 , 43549889374 , 30176461104 , 19891286233 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"domain_busy\" , \"values\" : [ 51049666116086 , 13419960088 , 13297686377 , 1735383373870 , 39183250298 , 6728050897 , 28229793795 , 17493622207 , 122290467 , 974721172619 , 47944793823 , 164946850 , 4162377932 , 407009733276 , 128199854099 , 9037374471285 , 38911301970 , 366749865 , 732045734 , 2997541695 , 14 , 18 , 40 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"domain_shared\" , \"values\" : [ 0 , 685164024474 , 0 , 0 , 0 , 24684879894 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"dswitchto_cnt\" , \"values\" : [ 0 , 322698663 , 172936437 , 446893016 , 96971 , 39788918 , 5 , 10 , 10670440 , 22 , 7 , 836 , 2407967 , 9798186907 , 9802868991 , 265242 , 53 , 2614118 , 4430780 , 66117706 , 1 , 1 , 1 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"intr_cnt\" , \"values\" : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4191453008 , 8181232 , 1625052957 , 0 , 71854 , 0 , 71854 , 0 , 5 , 0 , 5 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"dev_0\" , \"dev_1\" , \"dev_2\" , \"dev_3\" , \"dev_4\" , \"dev_5\" , \"dev_6\" , \"dev_7\" , \"dev_8\" , \"dev_9\" , \"dev_10\" , \"dev_11\" , \"dev_12\" , \"dev_13\" , \"dev_14\" , \"dev_15\" , \"dev_16\" , \"dev_17\" , \"dev_18\" , \"dev_19\" , \"dev_20\" , \"dev_21\" , \"dev_22\" , \"dev_23\" , \"dev_24\" , \"dev_25\" , \"dev_26\" , \"dev_27\" , \"dev_28\" , \"dev_29\" , \"dev_30\" , \"dev_31\" , \"dev_32\" , \"dev_33\" , \"dev_34\" , \"dev_35\" , \"dev_36\" , \"dev_37\" , \"dev_38\" , \"dev_39\" , \"dev_40\" , \"dev_41\" , \"dev_42\" , \"dev_43\" , \"dev_44\" , \"dev_45\" , \"dev_46\" , \"dev_47\" , \"dev_48\" , \"dev_49\" , \"dev_50\" , \"dev_51\" , \"dev_52\" , \"dev_53\" , \"dev_54\" , \"dev_55\" , \"dev_56\" , \"dev_57\" , \"dev_58\" , \"dev_59\" , \"dev_60\" , \"dev_61\" , \"dev_62\" , \"dev_63\" , \"dev_64\" , \"dev_65\" , \"dev_66\" , \"dev_67\" , \"dev_68\" , \"dev_69\" , \"dev_70\" , \"dev_71\" , \"dev_72\" , \"dev_73\" , \"dev_74\" , \"dev_75\" , \"dev_76\" , \"dev_77\" , \"dev_78\" , \"dev_79\" , \"dev_80\" , \"dev_81\" , \"dev_82\" , \"dev_83\" , \"dev_84\" , \"dev_85\" , \"dev_86\" , \"dev_87\" , \"dev_88\" , \"dev_89\" , \"dev_90\" , \"dev_91\" , \"dev_92\" , \"dev_93\" , \"dev_94\" , \"dev_95\" , \"dev_96\" , \"dev_97\" , \"dev_98\" , \"dev_99\" , \"dev_100\" , \"dev_101\" , \"dev_102\" , \"dev_103\" , \"dev_104\" , \"dev_105\" , \"dev_106\" , \"dev_107\" , \"dev_108\" , \"dev_109\" , \"dev_110\" , \"dev_111\" , \"dev_112\" , \"dev_113\" , \"dev_114\" , \"dev_115\" , \"dev_116\" , \"dev_117\" , \"dev_118\" , \"dev_119\" , \"dev_120\" , \"dev_121\" , \"dev_122\" , \"dev_123\" , \"dev_124\" , \"dev_125\" , \"dev_126\" , \"dev_127\" , \"dev_128\" , \"dev_129\" , \"dev_130\" , \"dev_131\" , \"dev_132\" , \"dev_133\" , \"dev_134\" , \"dev_135\" , \"dev_136\" , \"dev_137\" , \"dev_138\" , \"dev_139\" , \"dev_140\" , \"dev_141\" , \"dev_142\" , \"dev_143\" , \"dev_144\" , \"dev_145\" , \"dev_146\" , \"dev_147\" , \"dev_148\" , \"dev_149\" , \"dev_150\" , \"dev_151\" , \"dev_152\" , \"dev_153\" , \"dev_154\" , \"dev_155\" , \"dev_156\" , \"dev_157\" , \"dev_158\" , \"dev_159\" , \"dev_160\" , \"dev_161\" , \"dev_162\" , \"dev_163\" , \"dev_164\" , \"dev_165\" , \"dev_166\" , \"dev_167\" , \"dev_168\" , \"dev_169\" , \"dev_170\" , \"dev_171\" , \"dev_172\" , \"dev_173\" , \"dev_174\" , \"dev_175\" , \"dev_176\" , \"dev_177\" , \"dev_178\" , \"dev_179\" , \"dev_180\" , \"dev_181\" , \"dev_182\" , \"dev_183\" , \"dev_184\" , \"dev_185\" , \"dev_186\" , \"dev_187\" , \"dev_188\" , \"dev_189\" , \"dev_190\" , \"dev_191\" , \"dev_192\" , \"dev_193\" , \"dev_194\" , \"dev_195\" , \"dev_196\" , \"dev_197\" , \"dev_198\" , \"dev_199\" , \"dev_200\" , \"dev_201\" , \"dev_202\" , \"dev_203\" , \"dev_204\" , \"dev_205\" , \"dev_206\" , \"dev_207\" , \"dev_208\" , \"dev_209\" , \"dev_210\" , \"dev_211\" , \"dev_212\" , \"dev_213\" , \"dev_214\" , \"dev_215\" , \"dev_216\" , \"dev_217\" , \"dev_218\" , \"dev_219\" , \"dev_220\" , \"dev_221\" , \"dev_222\" , \"dev_223\" , \"dev_224\" , \"dev_225\" , \"dev_226\" , \"dev_227\" , \"dev_228\" , \"dev_229\" , \"dev_230\" , \"dev_231\" , \"dev_232\" , \"dev_233\" , \"dev_234\" , \"dev_235\" , \"dev_236\" , \"dev_237\" , \"dev_238\" , \"dev_239\" , \"dev_240\" , \"dev_241\" , \"dev_242\" , \"dev_243\" , \"dev_244\" , \"dev_245\" , \"dev_246\" , \"dev_247\" , \"dev_248\" , \"dev_249\" , \"dev_250\" , \"dev_251\" , \"dev_252\" , \"dev_253\" , \"dev_254\" , \"dev_255\" ] }, { \"name\" : \"wafliron\" , \"values\" : [ 0 , 0 , 0 ], \"labels\" : [ \"iron_totstarts\" , \"iron_nobackup\" , \"iron_usebackup\" ] } ], \"aggregation\" : { \"count\" : 2 , \"complete\" : true }, \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows/umeng-aff300-01%3A28e14eab-0580-11e8-bd9d-00a098d39e12\" } } }, { \"counter_table\" : { \"name\" : \"system:node\" }, \"id\" : \"umeng-aff300-02:1524afca-0580-11e8-ae74-00a098d390f2\" , \"properties\" : [ { \"name\" : \"node.name\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"system_model\" , \"value\" : \"AFF-A300\" }, { \"name\" : \"ontap_version\" , \"value\" : \"NetApp Release R9.12.1xN_221108_1315: Tue Nov 8 15:32:25 EST 2022 \" }, { \"name\" : \"compile_flags\" , \"value\" : \"1\" }, { \"name\" : \"serial_no\" , \"value\" : \"721802000259\" }, { \"name\" : \"system_id\" , \"value\" : \"0537123843\" }, { \"name\" : \"hostname\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"name\" , \"value\" : \"umeng-aff300-02\" }, { \"name\" : \"uuid\" , \"value\" : \"1524afca-0580-11e8-ae74-00a098d390f2\" } ], \"counters\" : [ { \"name\" : \"memory\" , \"value\" : 88766 }, { \"name\" : \"nfs_ops\" , \"value\" : 2061227971 }, { \"name\" : \"cifs_ops\" , \"value\" : 0 }, { \"name\" : \"fcp_ops\" , \"value\" : 0 }, { \"name\" : \"iscsi_ops\" , \"value\" : 183570559 }, { \"name\" : \"nvme_fc_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_ops\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_ops\" , \"value\" : 0 }, { \"name\" : \"network_data_received\" , \"value\" : 28707362447 }, { \"name\" : \"network_data_sent\" , \"value\" : 31199786274 }, { \"name\" : \"fcp_data_received\" , \"value\" : 0 }, { \"name\" : \"fcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"iscsi_data_received\" , \"value\" : 2462501728 }, { \"name\" : \"iscsi_data_sent\" , \"value\" : 962425592 }, { \"name\" : \"nvme_fc_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_fc_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_tcp_data_sent\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_received\" , \"value\" : 0 }, { \"name\" : \"nvme_roce_data_sent\" , \"value\" : 0 }, { \"name\" : \"partner_data_received\" , \"value\" : 0 }, { \"name\" : \"partner_data_sent\" , \"value\" : 0 }, { \"name\" : \"sys_read_data\" , \"value\" : 28707362447 }, { \"name\" : \"sys_write_data\" , \"value\" : 31199786274 }, { \"name\" : \"sys_total_data\" , \"value\" : 59907148721 }, { \"name\" : \"disk_data_read\" , \"value\" : 27355740700 }, { \"name\" : \"disk_data_written\" , \"value\" : 3426898232 }, { \"name\" : \"hdd_data_read\" , \"value\" : 0 }, { \"name\" : \"hdd_data_written\" , \"value\" : 0 }, { \"name\" : \"ssd_data_read\" , \"value\" : 27355740700 }, { \"name\" : \"ssd_data_written\" , \"value\" : 3426898232 }, { \"name\" : \"tape_data_read\" , \"value\" : 0 }, { \"name\" : \"tape_data_written\" , \"value\" : 0 }, { \"name\" : \"read_ops\" , \"value\" : 29957410 }, { \"name\" : \"write_ops\" , \"value\" : 2141657620 }, { \"name\" : \"other_ops\" , \"value\" : 73183500 }, { \"name\" : \"total_ops\" , \"value\" : 2244798530 }, { \"name\" : \"read_latency\" , \"value\" : 43283636161 }, { \"name\" : \"write_latency\" , \"value\" : 1437635703835 }, { \"name\" : \"other_latency\" , \"value\" : 628457365 }, { \"name\" : \"total_latency\" , \"value\" : 1481547797361 }, { \"name\" : \"read_data\" , \"value\" : 1908711454978 }, { \"name\" : \"write_data\" , \"value\" : 23562759645410 }, { \"name\" : \"other_data\" , \"value\" : 0 }, { \"name\" : \"total_data\" , \"value\" : 25471471100388 }, { \"name\" : \"cpu_busy\" , \"value\" : 511050841704 }, { \"name\" : \"cpu_elapsed_time\" , \"value\" : 3979039364919 }, { \"name\" : \"average_processor_busy_percent\" , \"value\" : 509151403977 }, { \"name\" : \"total_processor_busy\" , \"value\" : 8146422463632 }, { \"name\" : \"total_processor_busy_time\" , \"value\" : 8146422463632 }, { \"name\" : \"num_processors\" , \"value\" : 16 }, { \"name\" : \"interrupt_time\" , \"value\" : 108155323601 }, { \"name\" : \"interrupt\" , \"value\" : 108155323601 }, { \"name\" : \"interrupt_num\" , \"value\" : 3369179127 }, { \"name\" : \"time_per_interrupt\" , \"value\" : 108155323601 }, { \"name\" : \"non_interrupt_time\" , \"value\" : 8038267140031 }, { \"name\" : \"non_interrupt\" , \"value\" : 8038267140031 }, { \"name\" : \"idle_time\" , \"value\" : 55518207375072 }, { \"name\" : \"idle\" , \"value\" : 55518207375072 }, { \"name\" : \"cp_time\" , \"value\" : 64306316680 }, { \"name\" : \"cp\" , \"value\" : 64306316680 }, { \"name\" : \"interrupt_in_cp_time\" , \"value\" : 2024956616 }, { \"name\" : \"interrupt_in_cp\" , \"value\" : 2024956616 }, { \"name\" : \"interrupt_num_in_cp\" , \"value\" : 2661183541 }, { \"name\" : \"time_per_interrupt_in_cp\" , \"value\" : 2024956616 }, { \"name\" : \"sk_switches\" , \"value\" : 2798598514 }, { \"name\" : \"hard_switches\" , \"value\" : 1354185066 }, { \"name\" : \"intr_cnt_msec\" , \"value\" : 3978642246 }, { \"name\" : \"intr_cnt_ipi\" , \"value\" : 797281 }, { \"name\" : \"intr_cnt_total\" , \"value\" : 905575861 }, { \"name\" : \"time\" , \"value\" : 1677516216 }, { \"name\" : \"uptime\" , \"value\" : 3978643 }, { \"name\" : \"processor_plevel_time\" , \"values\" : [ 2878770221447 , 1882901052733 , 1209134416474 , 771086627192 , 486829133301 , 306387520688 , 193706139760 , 123419519944 , 79080346535 , 50459518003 , 31714732122 , 19476561954 , 11616026278 , 6666253598 , 3623880168 , 1790458071 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels}, { \"name\" : \"processor_plevel\" , \"values\" : [ 2878770221447 , 1882901052733 , 1209134416474 , 771086627192 , 486829133301 , 306387520688 , 193706139760 , 123419519944 , 79080346535 , 50459518003 , 31714732122 , 19476561954 , 11616026278 , 6666253598 , 3623880168 , 1790458071 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"0_CPU\" , \"1_CPU\" , \"2_CPU\" , \"3_CPU\" , \"4_CPU\" , \"5_CPU\" , \"6_CPU\" , \"7_CPU\" , \"8_CPU\" , \"9_CPU\" , \"10_CPU\" , \"11_CPU\" , \"12_CPU\" , \"13_CPU\" , \"14_CPU\" , \"15_CPU\" , \"16_CPU\" , \"17_CPU\" , \"18_CPU\" , \"19_CPU\" , \"20_CPU\" , \"21_CPU\" , \"22_CPU\" , \"23_CPU\" , \"24_CPU\" , \"25_CPU\" , \"26_CPU\" , \"27_CPU\" , \"28_CPU\" , \"29_CPU\" , \"30_CPU\" , \"31_CPU\" , \"32_CPU\" , \"33_CPU\" , \"34_CPU\" , \"35_CPU\" , \"36_CPU\" , \"37_CPU\" , \"38_CPU\" , \"39_CPU\" , \"40_CPU\" , \"41_CPU\" , \"42_CPU\" , \"43_CPU\" , \"44_CPU\" , \"45_CPU\" , \"46_CPU\" , \"47_CPU\" , \"48_CPU\" , \"49_CPU\" , \"50_CPU\" , \"51_CPU\" , \"52_CPU\" , \"53_CPU\" , \"54_CPU\" , \"55_CPU\" , \"56_CPU\" , \"57_CPU\" , \"58_CPU\" , \"59_CPU\" , \"60_CPU\" , \"61_CPU\" , \"62_CPU\" , \"63_CPU\" , \"64_CPU\" , \"65_CPU\" , \"66_CPU\" , \"67_CPU\" , \"68_CPU\" , \"69_CPU\" , \"70_CPU\" , \"71_CPU\" , \"72_CPU\" , \"73_CPU\" , \"74_CPU\" , \"75_CPU\" , \"76_CPU\" , \"77_CPU\" , \"78_CPU\" , \"79_CPU\" , \"80_CPU\" , \"81_CPU\" , \"82_CPU\" , \"83_CPU\" , \"84_CPU\" , \"85_CPU\" , \"86_CPU\" , \"87_CPU\" , \"88_CPU\" , \"89_CPU\" , \"90_CPU\" , \"91_CPU\" , \"92_CPU\" , \"93_CPU\" , \"94_CPU\" , \"95_CPU\" , \"96_CPU\" , \"97_CPU\" , \"98_CPU\" , \"99_CPU\" , \"100_CPU\" , \"101_CPU\" , \"102_CPU\" , \"103_CPU\" , \"104_CPU\" , \"105_CPU\" , \"106_CPU\" , \"107_CPU\" , \"108_CPU\" , \"109_CPU\" , \"110_CPU\" , \"111_CPU\" , \"112_CPU\" , \"113_CPU\" , \"114_CPU\" , \"115_CPU\" , \"116_CPU\" , \"117_CPU\" , \"118_CPU\" , \"119_CPU\" , \"120_CPU\" , \"121_CPU\" , \"122_CPU\" , \"123_CPU\" , \"124_CPU\" , \"125_CPU\" , \"126_CPU\" , \"127_CPU\" ] }, { \"name\" : \"domain_busy\" , \"values\" : [ 55518207375080 , 8102895398 , 12058227646 , 991838747162 , 28174147737 , 6669066926 , 14245801778 , 9009875224 , 118982762 , 177496844302 , 5888814259 , 167280195 , 3851617905 , 484154906167 , 91240285306 , 6180138216837 , 22111798640 , 344700584 , 266304074 , 2388625825 , 16 , 21 , 19 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"domain_shared\" , \"values\" : [ 0 , 153663450171 , 0 , 0 , 0 , 11834112384 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"dswitchto_cnt\" , \"values\" : [ 0 , 178192633 , 143964155 , 286324250 , 2365 , 39684121 , 5 , 10 , 10715325 , 22 , 7 , 30 , 2407970 , 7865489299 , 7870331008 , 265242 , 53 , 2535145 , 3252888 , 53334340 , 1 , 1 , 1 ], \"labels\" : [ \"idle\" , \"kahuna\" , \"storage\" , \"exempt\" , \"none\" , \"raid\" , \"raid_exempt\" , \"xor_exempt\" , \"target\" , \"wafl_exempt\" , \"wafl_mpcleaner\" , \"sm_exempt\" , \"protocol\" , \"nwk_exempt\" , \"network\" , \"hostOS\" , \"ssan_exempt\" , \"unclassified\" , \"kahuna_legacy\" , \"ha\" , \"ssan_exempt2\" , \"exempt_ise\" , \"zombie\" ] }, { \"name\" : \"intr_cnt\" , \"values\" : [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 724698481 , 8181275 , 488080162 , 0 , 71856 , 0 , 71856 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"labels\" : [ \"dev_0\" , \"dev_1\" , \"dev_2\" , \"dev_3\" , \"dev_4\" , \"dev_5\" , \"dev_6\" , \"dev_7\" , \"dev_8\" , \"dev_9\" , \"dev_10\" , \"dev_11\" , \"dev_12\" , \"dev_13\" , \"dev_14\" , \"dev_15\" , \"dev_16\" , \"dev_17\" , \"dev_18\" , \"dev_19\" , \"dev_20\" , \"dev_21\" , \"dev_22\" , \"dev_23\" , \"dev_24\" , \"dev_25\" , \"dev_26\" , \"dev_27\" , \"dev_28\" , \"dev_29\" , \"dev_30\" , \"dev_31\" , \"dev_32\" , \"dev_33\" , \"dev_34\" , \"dev_35\" , \"dev_36\" , \"dev_37\" , \"dev_38\" , \"dev_39\" , \"dev_40\" , \"dev_41\" , \"dev_42\" , \"dev_43\" , \"dev_44\" , \"dev_45\" , \"dev_46\" , \"dev_47\" , \"dev_48\" , \"dev_49\" , \"dev_50\" , \"dev_51\" , \"dev_52\" , \"dev_53\" , \"dev_54\" , \"dev_55\" , \"dev_56\" , \"dev_57\" , \"dev_58\" , \"dev_59\" , \"dev_60\" , \"dev_61\" , \"dev_62\" , \"dev_63\" , \"dev_64\" , \"dev_65\" , \"dev_66\" , \"dev_67\" , \"dev_68\" , \"dev_69\" , \"dev_70\" , \"dev_71\" , \"dev_72\" , \"dev_73\" , \"dev_74\" , \"dev_75\" , \"dev_76\" , \"dev_77\" , \"dev_78\" , \"dev_79\" , \"dev_80\" , \"dev_81\" , \"dev_82\" , \"dev_83\" , \"dev_84\" , \"dev_85\" , \"dev_86\" , \"dev_87\" , \"dev_88\" , \"dev_89\" , \"dev_90\" , \"dev_91\" , \"dev_92\" , \"dev_93\" , \"dev_94\" , \"dev_95\" , \"dev_96\" , \"dev_97\" , \"dev_98\" , \"dev_99\" , \"dev_100\" , \"dev_101\" , \"dev_102\" , \"dev_103\" , \"dev_104\" , \"dev_105\" , \"dev_106\" , \"dev_107\" , \"dev_108\" , \"dev_109\" , \"dev_110\" , \"dev_111\" , \"dev_112\" , \"dev_113\" , \"dev_114\" , \"dev_115\" , \"dev_116\" , \"dev_117\" , \"dev_118\" , \"dev_119\" , \"dev_120\" , \"dev_121\" , \"dev_122\" , \"dev_123\" , \"dev_124\" , \"dev_125\" , \"dev_126\" , \"dev_127\" , \"dev_128\" , \"dev_129\" , \"dev_130\" , \"dev_131\" , \"dev_132\" , \"dev_133\" , \"dev_134\" , \"dev_135\" , \"dev_136\" , \"dev_137\" , \"dev_138\" , \"dev_139\" , \"dev_140\" , \"dev_141\" , \"dev_142\" , \"dev_143\" , \"dev_144\" , \"dev_145\" , \"dev_146\" , \"dev_147\" , \"dev_148\" , \"dev_149\" , \"dev_150\" , \"dev_151\" , \"dev_152\" , \"dev_153\" , \"dev_154\" , \"dev_155\" , \"dev_156\" , \"dev_157\" , \"dev_158\" , \"dev_159\" , \"dev_160\" , \"dev_161\" , \"dev_162\" , \"dev_163\" , \"dev_164\" , \"dev_165\" , \"dev_166\" , \"dev_167\" , \"dev_168\" , \"dev_169\" , \"dev_170\" , \"dev_171\" , \"dev_172\" , \"dev_173\" , \"dev_174\" , \"dev_175\" , \"dev_176\" , \"dev_177\" , \"dev_178\" , \"dev_179\" , \"dev_180\" , \"dev_181\" , \"dev_182\" , \"dev_183\" , \"dev_184\" , \"dev_185\" , \"dev_186\" , \"dev_187\" , \"dev_188\" , \"dev_189\" , \"dev_190\" , \"dev_191\" , \"dev_192\" , \"dev_193\" , \"dev_194\" , \"dev_195\" , \"dev_196\" , \"dev_197\" , \"dev_198\" , \"dev_199\" , \"dev_200\" , \"dev_201\" , \"dev_202\" , \"dev_203\" , \"dev_204\" , \"dev_205\" , \"dev_206\" , \"dev_207\" , \"dev_208\" , \"dev_209\" , \"dev_210\" , \"dev_211\" , \"dev_212\" , \"dev_213\" , \"dev_214\" , \"dev_215\" , \"dev_216\" , \"dev_217\" , \"dev_218\" , \"dev_219\" , \"dev_220\" , \"dev_221\" , \"dev_222\" , \"dev_223\" , \"dev_224\" , \"dev_225\" , \"dev_226\" , \"dev_227\" , \"dev_228\" , \"dev_229\" , \"dev_230\" , \"dev_231\" , \"dev_232\" , \"dev_233\" , \"dev_234\" , \"dev_235\" , \"dev_236\" , \"dev_237\" , \"dev_238\" , \"dev_239\" , \"dev_240\" , \"dev_241\" , \"dev_242\" , \"dev_243\" , \"dev_244\" , \"dev_245\" , \"dev_246\" , \"dev_247\" , \"dev_248\" , \"dev_249\" , \"dev_250\" , \"dev_251\" , \"dev_252\" , \"dev_253\" , \"dev_254\" , \"dev_255\" ] }, { \"name\" : \"wafliron\" , \"values\" : [ 0 , 0 , 0 ], \"labels\" : [ \"iron_totstarts\" , \"iron_nobackup\" , \"iron_usebackup\" ] } ], \"aggregation\" : { \"count\" : 2 , \"complete\" : true }, \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows/umeng-aff300-02%3A1524afca-0580-11e8-ae74-00a098d390f2\" } } } ], \"num_records\" : 2 , \"_links\" : { \"self\" : { \"href\" : \"/api/cluster/counter/tables/system:node/rows?fields=*&return_records=true\" } } }","title":"Node performance metrics with all instances, properties, and counters"},{"location":"resources/rest-perf-metrics/#references","text":"Harvest REST Strategy ONTAP 9.11.1 ONTAPI-to-REST Counter Manager Mapping ONTAP REST API reference documentation ONTAP REST API","title":"References"},{"location":"resources/templates-and-metrics/","text":"Harvest Templates and Metrics \u00b6 Harvest collects ONTAP counter information, augments it, and stores it in a time-series DB. Refer ONTAP Metrics for details about ONTAP metrics exposed by Harvest. flowchart RL Harvest[Harvest<br>Get & Augment] -- REST<br>ZAPI --> ONTAP id1[(Prometheus<br>Store)] -- Scrape --> Harvest Three concepts work in unison to collect ONTAP metrics data, prepare it and make it available to Prometheus. ZAPI/REST Harvest templates Exporters We're going to walk through an example from a running system, focusing on the disk object. At a high-level, Harvest templates describe what ZAPIs to send to ONTAP and how to interpret the responses. ONTAP defines twos ZAPIs to collect disk info Config information is collected via storage-disk-get-iter Performance counters are collected via disk:constituent These ZAPIs are found in their corresponding object template file conf/zapi/cdot/9.8.0/disk.yaml and conf/zapiperf/cdot/9.8.0/disk.yaml . These files also describe how to map the ZAPI responses into a time-series-friendly format Prometheus uniquely identifies a time series by its metric name and optional key-value pairs called labels. Handy Tools \u00b6 dasel is useful to convert between XML, YAML, JSON, etc. We'll use it to make displaying some of the data easier. ONTAP ZAPI disk example \u00b6 We'll use the bin/harvest zapi tool to interrogate the cluster and gather information about the counters. This is one way you can send ZAPIs to ONTAP and explore the return types and values. bin/harvest zapi -p u2 show attrs --api storage-disk-get-iter Output edited for brevity and line numbers added on left The hierarchy and return type of each counter is shown below. We'll use this hierarchy to build a matching Harvest template. For example, line 3 is the bytes-per-sector counter, which has an integer value, and is the child of storage-disk-info > disk-inventory-info . To capture that counter's value as a metric in a Harvest, the ZAPI template must use the same hierarchical path. The matching path can be seen below . building tree for attribute [attributes-list] => [storage-disk-info] 1 [storage-disk-info] - * 2 [disk-inventory-info] - 3 [bytes-per-sector] - integer 4 [capacity-sectors] - integer 5 [disk-type] - string 6 [is-shared] - boolean 7 [model] - string 8 [serial-number] - string 9 [shelf] - string 10 [shelf-bay] - string 11 [disk-name] - string 12 [disk-ownership-info] - 13 [home-node-name] - string 14 [is-failed] - boolean 15 [owner-node-name] - string 16 [disk-raid-info] - 17 [container-type] - string 18 [disk-outage-info] - 19 [is-in-fdr] - boolean 20 [reason] - string 21 [disk-stats-info] - 22 [average-latency] - integer 23 [disk-io-kbps] - integer 24 [power-on-time-interval] - integer 25 [sectors-read] - integer 26 [sectors-written] - integer 27 [disk-uid] - string 28 [node-name] - string 29 [storage-disk-state] - integer 30 [storage-disk-state-flags] - integer Harvest Templates \u00b6 To understand templates, there are a few concepts to cover: There are three kinds of information included in templates that define what Harvest collects and exports: Configuration information is exported into the _labels metric (e.g. disk_labels see below) Metrics data is exported as disk_\"metric name\" e.g. disk_bytes_per_sector , disk_sectors , etc. Metrics are leaf nodes that are not prefixed with a ^ or ^^. Metrics must be one of the number types: float or int. Plugins may add additional metrics, increasing the number of metrics exported in #2 A resource will typically have multiple instances. Using disk as an example, that means there will be one disk_labels and a metric row per instance. If we have 24 disks and the disk template lists seven metrics to capture, Harvest will export a total of 192 rows of Prometheus data. 24 instances * (7 metrics per instance + 1 label per instance) = 192 rows Sum of disk metrics that Harvest exports curl -s 'http://localhost:14002/metrics' | grep ^disk | cut -d'{' -f1 | sort | uniq -c 24 disk_bytes_per_sector 24 disk_labels 24 disk_sectors 24 disk_stats_average_latency 24 disk_stats_io_kbps 24 disk_stats_sectors_read 24 disk_stats_sectors_written 24 disk_uptime # 192 rows Read on to see how we control which labels from #1 and which metrics from #2 are included in the exported data. Instance Keys and Labels \u00b6 Instance key - An instance key defines the set of attributes Harvest uses to construct a key that uniquely identifies an object. For example, the disk template uses the node + disk attributes to determine uniqueness. Using node or disk alone wouldn't be sufficient since disks on separate nodes can have the same name. If a single label does not uniquely identify an instance, combine multiple keys for uniqueness. Instance keys must refer to attributes that are of type string . Because instance keys define uniqueness, these keys are also added to each metric as a key-value pair. ( see Control What Labels and Metrics are Exported for examples) Instance label - Labels are key-value pairs used to gather configuration information about each instance. All of the key-value pairs are combined into a single metric named disk_labels . There will be one disk_labels for each monitored instance. Here's an example reformatted so it's easier to read: disk_labels{ datacenter=\"dc-1\", cluster=\"umeng-aff300-05-06\", node=\"umeng-aff300-06\", disk=\"1.1.23\", type=\"SSD\", model=\"X371_S1643960ATE\", outage=\"\", owner_node=\"umeng-aff300-06\", shared=\"true\", shelf=\"1\", shelf_bay=\"23\", serial_number=\"S3SENE0K500532\", failed=\"false\", container_type=\"shared\" } Harvest Object Template \u00b6 Continuing with the disk example, below is the conf/zapi/cdot/9.8.0/disk.yaml that tells Harvest which ZAPI to send to ONTAP ( storage-disk-get-iter ) and describes how to interpret and export the response. Line 1 defines the name of this resource and is an exact match to the object defined in your default.yaml or custom.yaml file. Eg. # default.yaml objects: Disk: disk.yaml Line 2 is the name of the ZAPI that Harvest will send to collect disk resources Line 3 is the prefix used to export metrics associated with this object. i.e. all metrics will be of the form disk_* Line 5 the counter section is where we define the metrics, labels, and what constitutes instance uniqueness Line 7 the double hat prefix ^^ means this attribute is an instance key used to determine uniqueness. Instance keys are also included as labels. Uuids are good choices for uniqueness Line 13 the single hat prefix ^ means this attribute should be stored as a label. That means we can include it in the export_options section as one of the key-value pairs in disk_labels Rows 10, 11, 23, 24, 25, 26, 27 - these are the metrics rows - metrics are leaf nodes that are not prefixed with a ^ or ^^. If you refer back to the ONTAP ZAPI disk example above, you'll notice each of these attributes are integer types. Line 43 defines the set of labels to use when constructing the disk_labels metrics. As mentioned above , these labels capture config-related attributes per instance. Output edited for brevity and line numbers added for reference. 1 name: Disk 2 query: storage-disk-get-iter 3 object: disk 4 5 counters: 6 storage-disk-info: 7 - ^^disk-uid 8 - ^^disk-name => disk 9 - disk-inventory-info: 10 - bytes-per-sector => bytes_per_sector # notice this has the same hierarchical path we saw from bin/harvest zapi 11 - capacity-sectors => sectors 12 - ^disk-type => type 13 - ^is-shared => shared 14 - ^model => model 15 - ^serial-number => serial_number 16 - ^shelf => shelf 17 - ^shelf-bay => shelf_bay 18 - disk-ownership-info: 19 - ^home-node-name => node 20 - ^owner-node-name => owner_node 21 - ^is-failed => failed 22 - disk-stats-info: 23 - average-latency 24 - disk-io-kbps 25 - power-on-time-interval => uptime 26 - sectors-read 27 - sectors-written 28 - disk-raid-info: 29 - ^container-type => container_type 30 - disk-outage-info: 31 - ^reason => outage 32 33 plugins: 34 - LabelAgent: 35 # metric label zapi_value rest_value `default_value` 36 value_to_num: 37 - new_status outage - - `0` #ok_value is empty value, '-' would be converted to blank while processing. 38 39 export_options: 40 instance_keys: 41 - node 42 - disk 43 instance_labels: 44 - type 45 - model 46 - outage 47 - owner_node 48 - shared 49 - shelf 50 - shelf_bay 51 - serial_number 52 - failed 53 - container_type Control What Labels and Metrics are Exported \u00b6 Let's continue with disk and look at a few examples. We'll use curl to examine the Prometheus wire format that Harvest uses to export the metrics from conf/zapi/cdot/9.8.0/disk.yaml . The curl below shows all exported disk metrics. There are 24 disks on this cluster, Harvest is collecting seven metrics + one disk_labels + one plugin-created metric, disk_new_status for a total of 216 rows. curl -s 'http://localhost:14002/metrics' | grep ^disk | cut -d'{' -f1 | sort | uniq -c 24 disk_bytes_per_sector # metric 24 disk_labels # labels 24 disk_new_status # plugin created metric 24 disk_sectors # metric 24 disk_stats_average_latency # metric 24 disk_stats_io_kbps # metric 24 disk_stats_sectors_read # metric 24 disk_stats_sectors_written # metric 24 disk_uptime # metric # sum = ((7 + 1 + 1) * 24 = 216 rows) Here's a disk_labels for one instance, reformated to make it easier to read. curl -s 'http://localhost:14002/metrics' | grep ^disk_labels | head -1 disk_labels{ datacenter = \"dc-1\", # always included - value taken from datacenter in harvest.yml cluster = \"umeng-aff300-05-06\", # always included node = \"umeng-aff300-06\", # node is in the list of export_options instance_keys disk = \"1.1.13\", # disk is in the list of export_options instance_keys type = \"SSD\", # remainder are included because they are listed in the template's instance_labels model = \"X371_S1643960ATE\", outage = \"\", owner_node = \"umeng-aff300-06\", shared = \"true\", shelf = \"1\", shelf_bay = \"13\", serial_number = \"S3SENE0K500572\", failed = \"false\", container_type = \"\", } 1.0 Here's the disk_sectors metric for a single instance. curl -s 'http://localhost:14002/metrics' | grep ^disk_sectors | head -1 disk_sectors{ # prefix of disk_ + metric name (line 11 in template) datacenter = \"dc-1\", # always included - value taken from datacenter in harvest.yml cluster = \"umeng-aff300-05-06\", # always included node = \"umeng-aff300-06\", # node is in the list of export_options instance_keys disk = \"1.1.17\", # disk is in the list of export_options instance_keys } 1875385008 # metric value - number of sectors for this disk instance Number of rows for each template = number of instances * (number of metrics + 1 (for <name>_labels row) + plugin additions) Number of metrics = number of counters which are not labels or keys, those without a ^ or ^^ Common Errors and Troubleshooting \u00b6 1. Failed to parse any metrics \u00b6 You add a new template to Harvest, restart your poller, and get an error message: WRN ./poller.go:649 > init collector-object (Zapi:NetPort): no metrics => failed to parse any This means the collector, Zapi NetPort , was unable to find any metrics. Recall metrics are lines without prefixes. In cases where you don't have any metrics, but still want to collect labels, add the collect_only_labels: true key-value to your template. This flag tells Harvest to ignore that you don't have metrics and continue. Example . 2. Missing Data \u00b6 What happens if an attribute is listed in the list of instance_labels (line 43 above), but that label is missing from the list of counters captured at line 5? The label will still be written into disk_labels , but the value will be empty since it's missing. e.g if line 29 was deleted container_type would still be present in disk_labels{container_type=\"\"} . Prometheus Wire Format \u00b6 https://prometheus.io/docs/instrumenting/exposition_formats/ Keep in mind that Prometheus does not permit dashes ( - ) in labels. That's why Harvest templates use name replacement to convert dashed-names to underscored-names with => . e.g. bytes-per-sector => bytes_per_sector converts bytes-per-sector into the Prometheus accepted bytes_per_sector . Every time series is uniquely identified by its metric name and optional key-value pairs called labels. Labels enable Prometheus's dimensional data model: any combination of labels for the same metric name identifies a particular dimensional instantiation of that metric (for example: all HTTP requests that used the method POST to the /api/tracks handler). The query language allows filtering and aggregation based on these dimensions. Changing any label value, including adding or removing a label, will create a new time series. <metric_name>{<label_name>=<label_value>, ...} value [ timestamp ] metric_name and label_name carry the usual Prometheus expression language restrictions label_value can be any sequence of UTF-8 characters, but the backslash (), double-quote (\"), and line feed (\\n) characters have to be escaped as \\, \\\", and \\n, respectively. value is a float represented as required by Go's ParseFloat() function. In addition to standard numerical values, NaN, +Inf, and -Inf are valid values representing not a number, positive infinity, and negative infinity, respectively. timestamp is an int64 (milliseconds since epoch, i.e. 1970-01-01 00:00:00 UTC, excluding leap seconds), represented as required by Go's ParseInt() function Exposition formats","title":"Templates And Metrics"},{"location":"resources/templates-and-metrics/#harvest-templates-and-metrics","text":"Harvest collects ONTAP counter information, augments it, and stores it in a time-series DB. Refer ONTAP Metrics for details about ONTAP metrics exposed by Harvest. flowchart RL Harvest[Harvest<br>Get & Augment] -- REST<br>ZAPI --> ONTAP id1[(Prometheus<br>Store)] -- Scrape --> Harvest Three concepts work in unison to collect ONTAP metrics data, prepare it and make it available to Prometheus. ZAPI/REST Harvest templates Exporters We're going to walk through an example from a running system, focusing on the disk object. At a high-level, Harvest templates describe what ZAPIs to send to ONTAP and how to interpret the responses. ONTAP defines twos ZAPIs to collect disk info Config information is collected via storage-disk-get-iter Performance counters are collected via disk:constituent These ZAPIs are found in their corresponding object template file conf/zapi/cdot/9.8.0/disk.yaml and conf/zapiperf/cdot/9.8.0/disk.yaml . These files also describe how to map the ZAPI responses into a time-series-friendly format Prometheus uniquely identifies a time series by its metric name and optional key-value pairs called labels.","title":"Harvest Templates and Metrics"},{"location":"resources/templates-and-metrics/#handy-tools","text":"dasel is useful to convert between XML, YAML, JSON, etc. We'll use it to make displaying some of the data easier.","title":"Handy Tools"},{"location":"resources/templates-and-metrics/#ontap-zapi-disk-example","text":"We'll use the bin/harvest zapi tool to interrogate the cluster and gather information about the counters. This is one way you can send ZAPIs to ONTAP and explore the return types and values. bin/harvest zapi -p u2 show attrs --api storage-disk-get-iter Output edited for brevity and line numbers added on left The hierarchy and return type of each counter is shown below. We'll use this hierarchy to build a matching Harvest template. For example, line 3 is the bytes-per-sector counter, which has an integer value, and is the child of storage-disk-info > disk-inventory-info . To capture that counter's value as a metric in a Harvest, the ZAPI template must use the same hierarchical path. The matching path can be seen below . building tree for attribute [attributes-list] => [storage-disk-info] 1 [storage-disk-info] - * 2 [disk-inventory-info] - 3 [bytes-per-sector] - integer 4 [capacity-sectors] - integer 5 [disk-type] - string 6 [is-shared] - boolean 7 [model] - string 8 [serial-number] - string 9 [shelf] - string 10 [shelf-bay] - string 11 [disk-name] - string 12 [disk-ownership-info] - 13 [home-node-name] - string 14 [is-failed] - boolean 15 [owner-node-name] - string 16 [disk-raid-info] - 17 [container-type] - string 18 [disk-outage-info] - 19 [is-in-fdr] - boolean 20 [reason] - string 21 [disk-stats-info] - 22 [average-latency] - integer 23 [disk-io-kbps] - integer 24 [power-on-time-interval] - integer 25 [sectors-read] - integer 26 [sectors-written] - integer 27 [disk-uid] - string 28 [node-name] - string 29 [storage-disk-state] - integer 30 [storage-disk-state-flags] - integer","title":"ONTAP ZAPI disk example"},{"location":"resources/templates-and-metrics/#harvest-templates","text":"To understand templates, there are a few concepts to cover: There are three kinds of information included in templates that define what Harvest collects and exports: Configuration information is exported into the _labels metric (e.g. disk_labels see below) Metrics data is exported as disk_\"metric name\" e.g. disk_bytes_per_sector , disk_sectors , etc. Metrics are leaf nodes that are not prefixed with a ^ or ^^. Metrics must be one of the number types: float or int. Plugins may add additional metrics, increasing the number of metrics exported in #2 A resource will typically have multiple instances. Using disk as an example, that means there will be one disk_labels and a metric row per instance. If we have 24 disks and the disk template lists seven metrics to capture, Harvest will export a total of 192 rows of Prometheus data. 24 instances * (7 metrics per instance + 1 label per instance) = 192 rows Sum of disk metrics that Harvest exports curl -s 'http://localhost:14002/metrics' | grep ^disk | cut -d'{' -f1 | sort | uniq -c 24 disk_bytes_per_sector 24 disk_labels 24 disk_sectors 24 disk_stats_average_latency 24 disk_stats_io_kbps 24 disk_stats_sectors_read 24 disk_stats_sectors_written 24 disk_uptime # 192 rows Read on to see how we control which labels from #1 and which metrics from #2 are included in the exported data.","title":"Harvest Templates"},{"location":"resources/templates-and-metrics/#instance-keys-and-labels","text":"Instance key - An instance key defines the set of attributes Harvest uses to construct a key that uniquely identifies an object. For example, the disk template uses the node + disk attributes to determine uniqueness. Using node or disk alone wouldn't be sufficient since disks on separate nodes can have the same name. If a single label does not uniquely identify an instance, combine multiple keys for uniqueness. Instance keys must refer to attributes that are of type string . Because instance keys define uniqueness, these keys are also added to each metric as a key-value pair. ( see Control What Labels and Metrics are Exported for examples) Instance label - Labels are key-value pairs used to gather configuration information about each instance. All of the key-value pairs are combined into a single metric named disk_labels . There will be one disk_labels for each monitored instance. Here's an example reformatted so it's easier to read: disk_labels{ datacenter=\"dc-1\", cluster=\"umeng-aff300-05-06\", node=\"umeng-aff300-06\", disk=\"1.1.23\", type=\"SSD\", model=\"X371_S1643960ATE\", outage=\"\", owner_node=\"umeng-aff300-06\", shared=\"true\", shelf=\"1\", shelf_bay=\"23\", serial_number=\"S3SENE0K500532\", failed=\"false\", container_type=\"shared\" }","title":"Instance Keys and Labels"},{"location":"resources/templates-and-metrics/#harvest-object-template","text":"Continuing with the disk example, below is the conf/zapi/cdot/9.8.0/disk.yaml that tells Harvest which ZAPI to send to ONTAP ( storage-disk-get-iter ) and describes how to interpret and export the response. Line 1 defines the name of this resource and is an exact match to the object defined in your default.yaml or custom.yaml file. Eg. # default.yaml objects: Disk: disk.yaml Line 2 is the name of the ZAPI that Harvest will send to collect disk resources Line 3 is the prefix used to export metrics associated with this object. i.e. all metrics will be of the form disk_* Line 5 the counter section is where we define the metrics, labels, and what constitutes instance uniqueness Line 7 the double hat prefix ^^ means this attribute is an instance key used to determine uniqueness. Instance keys are also included as labels. Uuids are good choices for uniqueness Line 13 the single hat prefix ^ means this attribute should be stored as a label. That means we can include it in the export_options section as one of the key-value pairs in disk_labels Rows 10, 11, 23, 24, 25, 26, 27 - these are the metrics rows - metrics are leaf nodes that are not prefixed with a ^ or ^^. If you refer back to the ONTAP ZAPI disk example above, you'll notice each of these attributes are integer types. Line 43 defines the set of labels to use when constructing the disk_labels metrics. As mentioned above , these labels capture config-related attributes per instance. Output edited for brevity and line numbers added for reference. 1 name: Disk 2 query: storage-disk-get-iter 3 object: disk 4 5 counters: 6 storage-disk-info: 7 - ^^disk-uid 8 - ^^disk-name => disk 9 - disk-inventory-info: 10 - bytes-per-sector => bytes_per_sector # notice this has the same hierarchical path we saw from bin/harvest zapi 11 - capacity-sectors => sectors 12 - ^disk-type => type 13 - ^is-shared => shared 14 - ^model => model 15 - ^serial-number => serial_number 16 - ^shelf => shelf 17 - ^shelf-bay => shelf_bay 18 - disk-ownership-info: 19 - ^home-node-name => node 20 - ^owner-node-name => owner_node 21 - ^is-failed => failed 22 - disk-stats-info: 23 - average-latency 24 - disk-io-kbps 25 - power-on-time-interval => uptime 26 - sectors-read 27 - sectors-written 28 - disk-raid-info: 29 - ^container-type => container_type 30 - disk-outage-info: 31 - ^reason => outage 32 33 plugins: 34 - LabelAgent: 35 # metric label zapi_value rest_value `default_value` 36 value_to_num: 37 - new_status outage - - `0` #ok_value is empty value, '-' would be converted to blank while processing. 38 39 export_options: 40 instance_keys: 41 - node 42 - disk 43 instance_labels: 44 - type 45 - model 46 - outage 47 - owner_node 48 - shared 49 - shelf 50 - shelf_bay 51 - serial_number 52 - failed 53 - container_type","title":"Harvest Object Template"},{"location":"resources/templates-and-metrics/#control-what-labels-and-metrics-are-exported","text":"Let's continue with disk and look at a few examples. We'll use curl to examine the Prometheus wire format that Harvest uses to export the metrics from conf/zapi/cdot/9.8.0/disk.yaml . The curl below shows all exported disk metrics. There are 24 disks on this cluster, Harvest is collecting seven metrics + one disk_labels + one plugin-created metric, disk_new_status for a total of 216 rows. curl -s 'http://localhost:14002/metrics' | grep ^disk | cut -d'{' -f1 | sort | uniq -c 24 disk_bytes_per_sector # metric 24 disk_labels # labels 24 disk_new_status # plugin created metric 24 disk_sectors # metric 24 disk_stats_average_latency # metric 24 disk_stats_io_kbps # metric 24 disk_stats_sectors_read # metric 24 disk_stats_sectors_written # metric 24 disk_uptime # metric # sum = ((7 + 1 + 1) * 24 = 216 rows) Here's a disk_labels for one instance, reformated to make it easier to read. curl -s 'http://localhost:14002/metrics' | grep ^disk_labels | head -1 disk_labels{ datacenter = \"dc-1\", # always included - value taken from datacenter in harvest.yml cluster = \"umeng-aff300-05-06\", # always included node = \"umeng-aff300-06\", # node is in the list of export_options instance_keys disk = \"1.1.13\", # disk is in the list of export_options instance_keys type = \"SSD\", # remainder are included because they are listed in the template's instance_labels model = \"X371_S1643960ATE\", outage = \"\", owner_node = \"umeng-aff300-06\", shared = \"true\", shelf = \"1\", shelf_bay = \"13\", serial_number = \"S3SENE0K500572\", failed = \"false\", container_type = \"\", } 1.0 Here's the disk_sectors metric for a single instance. curl -s 'http://localhost:14002/metrics' | grep ^disk_sectors | head -1 disk_sectors{ # prefix of disk_ + metric name (line 11 in template) datacenter = \"dc-1\", # always included - value taken from datacenter in harvest.yml cluster = \"umeng-aff300-05-06\", # always included node = \"umeng-aff300-06\", # node is in the list of export_options instance_keys disk = \"1.1.17\", # disk is in the list of export_options instance_keys } 1875385008 # metric value - number of sectors for this disk instance Number of rows for each template = number of instances * (number of metrics + 1 (for <name>_labels row) + plugin additions) Number of metrics = number of counters which are not labels or keys, those without a ^ or ^^","title":"Control What Labels and Metrics are Exported"},{"location":"resources/templates-and-metrics/#common-errors-and-troubleshooting","text":"","title":"Common Errors and Troubleshooting"},{"location":"resources/templates-and-metrics/#1-failed-to-parse-any-metrics","text":"You add a new template to Harvest, restart your poller, and get an error message: WRN ./poller.go:649 > init collector-object (Zapi:NetPort): no metrics => failed to parse any This means the collector, Zapi NetPort , was unable to find any metrics. Recall metrics are lines without prefixes. In cases where you don't have any metrics, but still want to collect labels, add the collect_only_labels: true key-value to your template. This flag tells Harvest to ignore that you don't have metrics and continue. Example .","title":"1. Failed to parse any metrics"},{"location":"resources/templates-and-metrics/#2-missing-data","text":"What happens if an attribute is listed in the list of instance_labels (line 43 above), but that label is missing from the list of counters captured at line 5? The label will still be written into disk_labels , but the value will be empty since it's missing. e.g if line 29 was deleted container_type would still be present in disk_labels{container_type=\"\"} .","title":"2. Missing Data"},{"location":"resources/templates-and-metrics/#prometheus-wire-format","text":"https://prometheus.io/docs/instrumenting/exposition_formats/ Keep in mind that Prometheus does not permit dashes ( - ) in labels. That's why Harvest templates use name replacement to convert dashed-names to underscored-names with => . e.g. bytes-per-sector => bytes_per_sector converts bytes-per-sector into the Prometheus accepted bytes_per_sector . Every time series is uniquely identified by its metric name and optional key-value pairs called labels. Labels enable Prometheus's dimensional data model: any combination of labels for the same metric name identifies a particular dimensional instantiation of that metric (for example: all HTTP requests that used the method POST to the /api/tracks handler). The query language allows filtering and aggregation based on these dimensions. Changing any label value, including adding or removing a label, will create a new time series. <metric_name>{<label_name>=<label_value>, ...} value [ timestamp ] metric_name and label_name carry the usual Prometheus expression language restrictions label_value can be any sequence of UTF-8 characters, but the backslash (), double-quote (\"), and line feed (\\n) characters have to be escaped as \\, \\\", and \\n, respectively. value is a float represented as required by Go's ParseFloat() function. In addition to standard numerical values, NaN, +Inf, and -Inf are valid values representing not a number, positive infinity, and negative infinity, respectively. timestamp is an int64 (milliseconds since epoch, i.e. 1970-01-01 00:00:00 UTC, excluding leap seconds), represented as required by Go's ParseInt() function Exposition formats","title":"Prometheus Wire Format"}]}